//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.431
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PontoEncontro.Infrastructure.Management.Globalization {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Management.Globalization.IService")]
    public interface IService {
        
        // CODEGEN: Generating message contract since the wrapper name (GetStringRequest) of message GetStringRequest does not match the default value (GetString)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetString", ReplyAction="http://tempuri.org/IService/GetStringResponse")]
        PontoEncontro.Infrastructure.Management.Globalization.GetStringResponse GetString(PontoEncontro.Infrastructure.Management.Globalization.GetStringRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStringRequest", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string Ticket;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string ExpressionName;
        
        public GetStringRequest() {
        }
        
        public GetStringRequest(string Ticket, string ExpressionName) {
            this.Ticket = Ticket;
            this.ExpressionName = ExpressionName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetStringResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetStringResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public bool Exists;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Expression;
        
        public GetStringResponse() {
        }
        
        public GetStringResponse(bool Exists, string Expression) {
            this.Exists = Exists;
            this.Expression = Expression;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : PontoEncontro.Infrastructure.Management.Globalization.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<PontoEncontro.Infrastructure.Management.Globalization.IService>, PontoEncontro.Infrastructure.Management.Globalization.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PontoEncontro.Infrastructure.Management.Globalization.GetStringResponse PontoEncontro.Infrastructure.Management.Globalization.IService.GetString(PontoEncontro.Infrastructure.Management.Globalization.GetStringRequest request) {
            return base.Channel.GetString(request);
        }
        
        public bool GetString(string Ticket, string ExpressionName, out string Expression) {
            PontoEncontro.Infrastructure.Management.Globalization.GetStringRequest inValue = new PontoEncontro.Infrastructure.Management.Globalization.GetStringRequest();
            inValue.Ticket = Ticket;
            inValue.ExpressionName = ExpressionName;
            PontoEncontro.Infrastructure.Management.Globalization.GetStringResponse retVal = ((PontoEncontro.Infrastructure.Management.Globalization.IService)(this)).GetString(inValue);
            Expression = retVal.Expression;
            return retVal.Exists;
        }
    }
}
