
-- exec dbo.sp_carga_movimento 11, 0, 9999
 CREATE procedure dbo.sp_carga_movimento
 (@parGrupo int, @parRoteiroIni int, @parRoteiroFim int)
 
 AS
begin

	declare @nTeste     	int,
		@hrInicio   	datetime,
		@hrInicioGeral 	datetime,
		@hrAnterior 	datetime,
		@nQtdeReg	int
	set 	@nTeste = 0

	-- para testes
--	 declare @parGrupo int, @parRoteiroIni int, @parRoteiroFim int
--	 select @parGrupo = 1, @parRoteiroIni = 0, @parRoteiroFim = 9999
--	 set 	@nTeste = 1

	--
	if @nTeste = 1 begin
		select	@hrInicio = getdate()
		select	@hrInicioGeral = @hrInicio
		Print ' -- Inicio em ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108)
	end	

	declare @parReferencia datetime

	select 	@parReferencia = max(cg_referencia)
	from	OnPlaceSaned..carga
	where	cg_grupo = @parGrupo
	and	cg_rota between @parRoteiroIni and @parRoteiroFim

	-- ******************************
	-- APAGA TABELAS
	exec OnPlaceSaned_Movimento..sp_desfaz_carga_movimento @parGrupo
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Processou sp_desfaz_carga_movimento ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Atualiza as Agentes
	exec OnPlaceSaned_Movimento..sp_atualiza_agentes @parReferencia, @parGrupo
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Processou sp_atualiza_agentes ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Atualiza as Ocorrência
	exec OnPlaceSaned_Movimento..sp_atualiza_anormalidade @parGrupo, @parReferencia
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Processou sp_atualiza_anormalidade ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- contadore gerais
	declare	@seq_fatura			numeric(11)
	declare	@seq_aviso			numeric(7)
	declare	@seq_processo_corte		numeric(7)
	declare	@seq_matricula_servico_parcela 	numeric(7)
	declare	@seq_item_servico		numeric(7)

	-- ******************************
	-- Tabelas GERAIS
	
	-- ******************************
	-- Tabelas Qualidade de ?gua

	insert into OnPlaceSANED_movimento..ACQ_ZONA_ABASTECIMENTO 
			(seq_zona_abastecimento, des_zona_abastecimento)
	select 	distinct rt_grupo, 'Zona Abastecimento Grupo ' + convert(varchar, rt_grupo)
	from 	OnPlaceSANED..roteiros
	where	rt_grupo = @parGrupo
	and	rt_grupo not in (select seq_zona_abastecimento from OnPlaceSANED_movimento..ACQ_ZONA_ABASTECIMENTO)
	and	rt_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_ZONA_ABASTECIMENTO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	
 
	-- 1 - pH
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		1, 'pH',
		isnull(qa_pH_Amostras,150), isnull(qa_pH_Amostras,150), isnull(qa_pH_Nao_Conformes, 150), convert (numeric (5,2), replace(qa_ph, ',', '.'))
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 2 - Cloro Residual
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		2, 'Cloro Residual',
		isnull(qa_cloro_Amostras,150), isnull(qa_cloro_Amostras,150), isnull(qa_cloro_Nao_Conformes,0), convert (numeric (5,2), replace(qa_cloro, ',', '.'))
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 3 - Cor Aparente
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		3, 'Cor Aparente',
		isnull(qa_cor_Amostras, 150), isnull(qa_cor_Amostras, 150), isnull(qa_cor_Nao_Conformes, 0), convert (numeric (5,2), replace(qa_cor, ',', '.'))
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 4 - Turbidez
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		4, 'Turbidez',
		isnull(qa_turbidez_Amostras, 150), isnull(qa_turbidez_Amostras, 150), isnull(qa_turbidez_Nao_Conformes, 0), convert (numeric (5,2), replace(qa_turbidez, ',', '.'))
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 5 - Fluoreto
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		5, 'Fluoreto',
		isnull(qa_fluoreto_Amostras, 150),  isnull(qa_fluoreto_Amostras, 150),  isnull(qa_fluoreto_Nao_Conformes, 0), convert (numeric (5,2), replace(qa_fluoreto, ',', '.'))
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 6 - Colif. Totais
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		6, 'Colif. Totais',
		isnull(qa_coliformes_Totais_Amostras, 150), isnull(qa_coliformes_Totais_Amostras, 150), isnull(qa_coliformes_Totais_Nao_Conformes, 0), convert (numeric (5,2), replace(qa_coliformes_totais, ',', '.'))		
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo

	-- 7 - E. Coli
	INSERT INTO OnPlaceSANED_movimento..ACQ_QUALIDADE_AGUA
		(dat_referencia, seq_zona_abastecimento, 
		seq_parametro, des_parametro, 
		val_previstas, val_realizadas, val_fora_limite, val_media)
	select 	qa_referencia, qa_grupo,
		7, 'E. Coli',
		isnull(qa_coliformes_Termotolerantes_Amostras, 150), isnull(qa_coliformes_Termotolerantes_Amostras, 150), isnull(qa_coliformes_Termotolerantes_Nao_Conformes, 0), convert (numeric (5,2), replace(qa_coliformes_termotolerantes, ',', '.'))		
	from 	OnPlaceSANED..qualidades_agua
	where	qa_grupo = @parGrupo
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_QUALIDADE_AGUA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	
 

	-- ******************************
	-- Tabelas do GRUPO

	-- ---------------------------
	-- Atualiza dados do Grupo Leitura
	insert 	into OnPlaceSANED_movimento..ACQ_GRUPO_FATURA		
		(seq_grupo_fatura, des_grupo_fatura, 
		val_periodicidade_leitura, val_periodicidade_fatura, ind_tipo_vencimento)
	values	(@parGrupo, convert(varchar, @parGrupo), 
		30, 30, 'D')
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_GRUPO_FATURA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Atualiza dados do Roteiro
	insert 	into OnPlaceSANED_movimento..ACQ_ROTEIRO		
		(seq_roteiro, 
		seq_grupo_fatura, ind_criterio_roteiro)
	select 	convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(rt_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(rt_rota,3)), 
		rt_grupo, 'C' 
	from 	OnPlaceSANED..roteiros
	where	rt_grupo = @parGrupo
	and	rt_referencia = @parReferencia
	and	rt_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_ROTEIRO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Atualiza dados do Grupo Refer?ncia
	insert 	into OnPlaceSANED_movimento..ACQ_GRUPO_REFERENCIA	
		(seq_roteiro, 
		seq_grupo_fatura, cod_referencia, ind_fatura, dat_base)
	select 	convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(rt_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(rt_rota,3)), 
		rt_grupo, convert(varchar(7), rt_referencia, 102 ), 'S', rt_leitura_prev
	from 	OnPlaceSANED..roteiros
	where	rt_grupo = @parGrupo
	and	rt_referencia = @parReferencia
	and	rt_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_GRUPO_REFERENCIA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Atualiza dados do Grupo Cronograma
	insert 	into OnPlaceSANED_movimento..ACQ_GRUPO_FATURA_CRONOGRAMA
		(seq_roteiro, 
		cod_referencia, cod_agente, dat_leitura_prevista, dat_vencimento,
		ind_gerado, ind_enviado, ind_obtido, ind_validado, ind_processado, ind_fatura, ind_encerrado)
	select 	convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(rt_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(rt_rota,3)), 
		convert(varchar(7), rt_referencia, 102 ), rt_agente, rt_leitura_prev, rt_data_vencto,
		'N', 'N', 'N', 'N', 'N', 'N', 'N'
 	from 	OnPlaceSANED..roteiros	
	where	rt_grupo = @parGrupo
	and	rt_referencia = @parReferencia
	and	rt_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_GRUPO_FATURA_CRONOGRAMA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- -------------------------
	-- Insere os dados de tarifa

	
	-- Insere tarifa de ?gua
	-- select * from OnPlaceSANED_movimento..ACQ_TAXA_TARIFA
	INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_TARIFA
		(seq_categoria, seq_taxa, seq_taxa_tarifa,
		seq_taxa_base, dat_inicio, 
		ind_tipo_taxa, ind_escalonada, ind_dias_consumo, 
		ind_minimo, val_valor_tarifa, val_percentual)
	select  distinct  
		tr_categoria, 1, convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)),
		 null, tr_data_inicial, 
		'C', 'S', 'N', 
		'S', null, null
	from 	 OnPlaceSANED..tarifas
	where	 tr_referencia = @parReferencia
	and	 tr_grupo = @parGrupo
	and      tr_categoria not in 
				 (select seq_categoria 
				  from 	OnPlaceSANED_movimento..ACQ_TAXA_TARIFA
				  where seq_taxa = 1
				  and 	seq_taxa_tarifa = convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))
	and	0 = 
		(select count(*)
		 from 	OnPlaceSANED_movimento..ACQ_TAXA_TARIFA 
		 where 	seq_categoria = tr_categoria
		 and	seq_taxa = 1
		 and 	seq_taxa_tarifa = convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))

	-- Insere tarifa de ?gua - Limite
	insert into OnPlaceSANED_movimento..ACQ_TAXA_TARIFA_FAIXA
			(seq_categoria,  seq_taxa,  seq_taxa_tarifa_faixa, 
			seq_taxa_tarifa,  val_limite_consumo, val_valor_tarifa) 
	select  distinct 
		tr_categoria as seq_categoria, 
		1 as seq_taxa, 
		tr_sequencia as seq_taxa_tarifa_faixa,
		convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)) as seq_taxa_tarifa, 
		case when tr_faixa_final >= 999999 then 9999999 else tr_faixa_final end as val_limite_consumo,
		tr_agua as val_valor_tarifa
	from 	OnPlaceSANED..tarifas t1
	where	tr_grupo = @parGrupo
	and 	tr_referencia = @parReferencia 
	and		0 =  	(select count(*)
				 from 	OnPlaceSANED_movimento..ACQ_TAXA_TARIFA_FAIXA 
				 where 	seq_categoria = tr_categoria
				 and	seq_taxa = 1
				 and	seq_taxa_tarifa_faixa = tr_sequencia
				 and 	seq_taxa_tarifa = convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))


	-- Insere tarifa de Esgoto
	-- alterado de percentual p/ categoria. 
	INSERT	INTO OnPlaceSANED_movimento..ACQ_TAXA_TARIFA
			(seq_categoria, seq_taxa, seq_taxa_tarifa,
			seq_taxa_base, dat_inicio, 
			ind_tipo_taxa, ind_escalonada, ind_dias_consumo, 
			ind_minimo, val_valor_tarifa, val_percentual)
	select	distinct 
		tr_categoria, 2, convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)),
		 null, tr_data_inicial, 
		'C', 'S', 'N', 
		'S', null, null
	from 	OnPlaceSANED..tarifas
	where	tr_grupo = @parGrupo
	and 	tr_referencia = @parReferencia
	and	tr_categoria not in 
				(select seq_categoria
				 from 	 OnPlaceSANED_movimento..ACQ_TAXA_TARIFA
				 where 	 seq_taxa = 2
				 and 	 seq_taxa_tarifa = convert(numeric(9), convert(char(6),  tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))
	and	0 =  (  select count(*)
			from 	OnPlaceSANED_movimento..ACQ_TAXA_TARIFA 
			where 	seq_categoria = tr_categoria
			and	seq_taxa = 2
			and 	seq_taxa_tarifa = convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))

	-- Insere tarifa de Esgoto - Limite
	insert into OnPlaceSANED_movimento..ACQ_TAXA_TARIFA_FAIXA
			(seq_categoria,  seq_taxa,  seq_taxa_tarifa_faixa, 
			 seq_taxa_tarifa,  val_limite_consumo, val_valor_tarifa) 
	select  distinct 
			tr_categoria as seq_categoria, 
			2 as seq_taxa, 
			tr_sequencia as seq_taxa_tarifa_faixa,
			convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)) as seq_taxa_tarifa, 
			case when tr_faixa_final >= 999999 then 9999999 else tr_faixa_final end as val_limite_consumo,
			tr_esgoto as val_valor_tarifa
	from 	OnPlaceSANED..tarifas t1
	where	tr_grupo = @parGrupo
	and 	tr_referencia =  @parReferencia
	and	0 =  	(select count(*)
			 from 	OnPlaceSANED_movimento..ACQ_TAXA_TARIFA_FAIXA 
			 where 	seq_categoria = tr_categoria
			 and	seq_taxa = 2
			 and	seq_taxa_tarifa_faixa = tr_sequencia
			 and 	seq_taxa_tarifa = convert(numeric(9), convert(char(6), tr_data_inicial, 112) + OnPlaceSANED.dbo.fc_completa_zeros(tr_grupo, 3)))
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_TAXA_TARIFA_FAIXA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	


	-- ---------------------------
	-- Insere os dados de Mensagem - Social
	delete 	from OnPlaceSANED_movimento..ACQ_MENSAGEM_MOVIMENTO
	where	seq_mensagem_movimento = 0

	INSERT INTO OnPlaceSANED_movimento..ACQ_MENSAGEM_MOVIMENTO
		(seq_mensagem_movimento, 
		seq_tipo_documento, des_mensagem_movimento, 
		dat_inicio, dat_final)
	select	0,  
		1, convert(char(62), isnull(mg_descricao1, '') ) + convert(char(62), isnull(mg_descricao2, '') ) + convert(char(62), isnull(mg_descricao3, '') ), 
		@parReferencia-100, 
		@parReferencia+100 
	from 	OnPlaceSaned..mensagens
	where	mg_grupo = @parGrupo


	-- ---------------------------
	-- Insere os dados de Mensagem - Indiviual
	INSERT INTO OnPlaceSANED_movimento..ACQ_MENSAGEM_MOVIMENTO
  		(seq_matricula, seq_mensagem_movimento, seq_grupo_fatura, 
		seq_tipo_documento, des_mensagem_movimento, 
		dat_inicio, dat_final)
	select	cg_matricula, cg_matricula,  cg_grupo,
		1, --convert(char(62), isnull(cg_mensagem1,'') ) + convert(char(62), isnull(cg_mensagem2,'')), 
		(case when len(cg_mensagem1) > 0 then convert(char(62), cg_mensagem1) + isnull(cg_mensagem2,'') else isnull(cg_mensagem2,'') end),
		@parReferencia-100, 
		@parReferencia+100
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia	
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(isnull(cg_mensagem1,'') + ' ' + isnull(cg_mensagem2,''))) != ''
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MENSAGEM_MOVIMENTO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	


	declare @DescricaoTexto	varchar(100), @Codigo integer

	-- *******************************
	-- Cursor para atualizar LOGRADOURO
	
	-- Qtde Registros
	select  @nQtdeReg = count(distinct ltrim(rtrim(cg_endereco)))
	from    OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia	
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(cg_endereco)) not in 
		(select des_logradouro from OnPlaceSANED_movimento..ACQ_LOGRADOURO) 

	-- Verifica quantidade
	if @nQtdeReg > 0 begin
		declare CUR_LOGRADOURO CURSOR read_only for
		select  distinct ltrim(rtrim(cg_endereco)) as Logradouro
		from    OnPlaceSANED..carga
		where	cg_grupo = @parGrupo
		and	cg_referencia = @parReferencia	
		and	cg_rota between @parRoteiroIni and @parRoteiroFim
		and	ltrim(rtrim(cg_endereco)) not in 
			(select des_logradouro from OnPlaceSANED_movimento..ACQ_LOGRADOURO) 

		-- CHAMA O CURSOR
		OPEN 	CUR_LOGRADOURO
		FETCH 	NEXT 
		FROM 	CUR_LOGRADOURO
		INTO 	@DescricaoTexto

		-- LOOP CURSOR LOGRADOURO
		WHILE (@@fetch_status <> -1)
		BEGIN
			-- Executa
			exec OnPlaceSANED_movimento.dbo.sp_atualiza_logradouro @DescricaoTexto

			-- Proximo
			FETCH NEXT 
			FROM CUR_LOGRADOURO
			INTO @DescricaoTexto
		END

		-- Fecha o cursor Logradouro
		CLOSE CUR_LOGRADOURO
		DEALLOCATE CUR_LOGRADOURO


	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_LOGRADOURO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	


	-- ******************************
	-- Cursor para atualizar SERVICO
	
	-- Qtde Registros
	select  @nQtdeReg = count(*)
	from    OnPlaceSANED..servicos
	where   ltrim(rtrim(sr_descricao)) not in 
		(select des_servico_fatura from OnPlaceSANED_movimento..ACQ_SERVICO_FATURA)

	-- Verifica se processa
	if @nQtdeReg > 0 begin
		declare CUR_SERVICO CURSOR read_only for
		select  distinct ltrim(rtrim(sr_descricao)) as Servico
		from    OnPlaceSANED..servicos
		where   ltrim(rtrim(sr_descricao)) not in 
				(select des_servico_fatura from OnPlaceSANED_movimento..ACQ_SERVICO_FATURA) 

		-- CHAMA O CURSOR
		OPEN 	CUR_SERVICO
		FETCH 	NEXT 
		FROM 	CUR_SERVICO
		INTO 	@DescricaoTexto
	
		-- LOOP CURSOR SERVICO
		WHILE (@@fetch_status <> -1)
		BEGIN
			-- Executa
			exec sp_atualiza_servico @DescricaoTexto
	
			-- Proximo
			FETCH NEXT 
			FROM CUR_SERVICO
			INTO @DescricaoTexto
		END
	
		-- Fecha o cursor servi?o
		CLOSE CUR_SERVICO
		DEALLOCATE CUR_SERVICO

		-- Inclui servi?o de notifica??o
		exec OnPlaceSANED_movimento.dbo.sp_atualiza_servico 'NOTIFICACAO DE DEBITO'
	
	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_SERVICO_FATURA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Atualiza Movimento

	-- ---------------------------
	-- Insere dados Pessoa
	INSERT INTO OnPlaceSANED_movimento..ACQ_PESSOA
			(seq_pessoa, des_nome, cod_cpf_cnpj, des_cidade, des_uf, 
			des_logradouro, des_numero, des_complemento, des_bairro, des_cep)
	select 	cg_matricula, cg_nome, Null , 'DIADEMA', 'SP',
			cg_endereco, cg_num_imovel, cg_complemento, Null, Null
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia =  @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and 	cg_matricula not in ( select seq_pessoa from 
				      OnPlaceSANED_movimento..ACQ_PESSOA)
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_PESSOA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA
		(seq_matricula,seq_matricula_principal, seq_pessoa_proprietario, cod_uf, seq_localidade, 
		seq_rota, seq_leitura, des_inscricao_imobiliaria, des_registro_imovel, 
		seq_setor, seq_logradouro, val_numero_imovel, des_complemento, 
		ind_entrega_especial, ind_agrupa_fatura, val_dia_vencimento)
	select	cg_matricula, case when cg_matricula_pai = 0 then null else cg_matricula_pai end, cg_matricula, 'SP', 1,
		cg_grupo, cg_sequencia, OnPlaceSaned.dbo.FC_COMPLETA_ZEROS(cg_setor, 3) + cg_inscricao, '', 
		cg_setor, dbo.fc_busca_logradouro(ltrim(rtrim(cg_endereco))), cg_num_imovel, cg_complemento, 
		case 	when (isnull(cg_codigo_banco,0) > 0) and (cg_entrega_alternativa <> '') then '5'
			when (isnull(cg_codigo_banco,0) > 0) and (cg_entrega_alternativa <> '') then '1'
			when (isnull(cg_codigo_banco,0) = 0) and (cg_entrega_alternativa <> '') then '2'
		else '0' end, 
		case when cg_ident_consumidor in (1, 2, 7, 9) then 'N' else 'S' end,
		datepart(d, cg_data_vencto)
	from 	OnPlaceSANED..carga
	where	cg_grupo =  @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Mensagem Individual
	INSERT INTO OnPlaceSANED_movimento..ACQ_MENSAGEM_MOVIMENTO
			(seq_matricula, seq_mensagem_movimento, 
			 seq_tipo_documento, des_mensagem_movimento, 
			 dat_inicio, dat_final)
	select 	cg_matricula, cg_matricula, 
		1, isnull(cg_mensagem1,'')+ isnull(cg_mensagem2,''), 
		convert(datetime, convert(char(9), getdate(),112)), (convert(datetime, convert(char(9), getdate(),112))+15)
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(isnull(cg_mensagem1,'') + isnull(cg_mensagem2,''))) != ''
	and  	cg_matricula not in 
		(select seq_matricula  
		from	OnPlaceSANED_movimento..ACQ_MENSAGEM_MOVIMENTO)
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MENSAGEM_MOVIMENTO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Leituras - Histórico de consumo - Leituras
	-- Enviado na data de leitura a referencia devido existirem datas repetidas para referências diversas
	-- Como neste caso precisamos apenas do cosnumo
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_LEITURAS
			(seq_matricula, cod_referencia, seq_grupo_fatura, 
			 dat_leitura, cod_hidrometro, 
			val_consumo_real, val_leitura_real)
	select 	hc_matricula, convert(char(7), hc_ref_historico, 102), cg_grupo,
		hc_ref_historico, cg_numero_hd, 
		hc_consumo, hc_leitura
	from 	OnPlaceSANED..historico_consumo, OnPlaceSANED..carga
	where	cg_matricula = hc_matricula
	and 	cg_grupo = hc_grupo
	and	cg_referencia = hc_referencia
	and	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia	
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	0 = 	(select count(*) 
			from 	OnPlaceSANED_movimento..ACQ_MATRICULA_LEITURAS
			where	cod_referencia = convert(char(7), hc_ref_historico, 102)
			and	seq_matricula  = hc_matricula)
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_LEITURAS ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Leituras - Histórico de consumo - Ocorrências

	INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_OCORRENCIA
			(seq_roteiro, 
			cod_referencia, 
			seq_matricula, cod_ocorrencia)
	select 	convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)), 
		convert(char(7), hc_ref_historico, 102), 
		hc_matricula, hc_ocorrencia_leitura
	from 	OnPlaceSANED..historico_consumo, OnPlaceSANED..carga
	where	cg_matricula = hc_matricula
	and 	cg_grupo = hc_grupo
	and	cg_referencia = hc_referencia
	and	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia	
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MOVIMENTO_OCORRENCIA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Entrega
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_ENTREGA
		(seq_matricula, seq_pessoa_entrega,
		des_logradouro, des_numero, des_complemento, des_bairro, des_cidade, des_uf, des_cep)
	select	 cg_matricula, cg_matricula, 
		cg_entrega_alternativa, Null, Null, Null, 'DIADEMA', 'SP', Null
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and 	isnull(cg_entrega_alternativa,'') <> ''
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	cg_matricula not in ( select seq_matricula from 
			      OnPlaceSANED_movimento..ACQ_MATRICULA_ENTREGA)
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_ENTREGA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula D?bito Autom?tico
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_DEB_AUTOMATICO
		(seq_matricula, seq_matricula_deb_automatico, 
		cod_banco, cod_banco_agencia, des_conta_corrente,
		dat_opcao_debito, seq_convenio)
	select	cg_matricula, 1, 
		cg_codigo_banco , isnull(cg_agencia,0), 'DEBITO AUT',
		(cg_referencia - 500), cg_codigo_banco
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	isnull(cg_codigo_banco,0) > 0
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_DEB_AUTOMATICO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Liga??o
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_LIGACAO
		(seq_matricula, seq_zona_abastecimento, seq_padrao_imovel, seq_situacao_imovel, 
		seq_tipo_despejo_esgoto, seq_tipo_esgotamento, seq_material_cavalete, seq_diametro_ligacao, 
		ind_reservatorio_superior, ind_reservatorio_inferior, ind_piscina, ind_calcada, 
		ind_jardim, ind_fonte_alternativa, seq_tipo_ligacao, seq_utilizacao_ligacao,
		ind_consumo_estimado, val_consumo_estimado, ind_protecao_hidrometro, seq_localizacao_hidrometro)
	select	cg_matricula, cg_grupo, 6, 0, 
		0, 1, 1, 1, 
		'S', 'S', 'N', 'S', 
		'S', case when cg_ident_consumidor = 6 then 4 else 0 end, 1, cg_categoria, 
		case 	when ltrim(rtrim(isnull(cg_numero_hd,''))) = '' 
			then 'S' 
			else 'N' end, 0,  1, 5
	from 	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_LIGACAO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- --------------------------
	-- Insere dados dos Hidrometros
	INSERT INTO OnPlaceSANED_movimento..ACQ_HIDROMETRO
		(cod_hidrometro, val_numero_digitos, 
		cod_modelo_hidrometro, cod_marca, seq_tamanho_hidrometro, ind_tipo_hidrometro, 
		seq_diametro_ligacao, seq_capacidade_hidrometro, ind_status, seq_composicao_numero_medidor, 
		ind_transmissao)
	select	cg_numero_hd, max(isnull(cg_capacidade_hidrometro,5)), 
		9, 9, 1, 'C',
		1, 1, 'U', 1,
		2 
	from	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(isnull(cg_numero_hd,''))) != ''
	and	cg_numero_hd not in (select cod_hidrometro from OnPlaceSANED_movimento..ACQ_HIDROMETRO)
	group	by cg_numero_hd
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_HIDROMETRO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Hidrometro
	-- Inclui os dados dos hidr?metros - troca

	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_HIDROMETRO
		(seq_matricula, seq_matricula_hidrometro,
		 cod_hidrometro,  
		 dat_instalacao, val_leitura_instalacao,
		 dat_encerramento, dat_retirada, val_leitura_encerramento,
		 ind_motivo_retirada, 
		 ind_estado_retirada, val_leitura_retirada)
	select 	cg_matricula, 1, cg_numero_hd,  
		cg_referencia - 500, cg_leitura_inicial,
		cg_data_instalacao_hd, cg_data_instalacao_hd, Null,  
		 'D', 'C', 0
	from	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(isnull(cg_numero_hd,''))) != ''
	and	cg_flag_troca = 'S'
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_HIDROMETRO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- Inclui os dados dos hidr?metros - atuais
	INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_HIDROMETRO
		(seq_matricula, seq_matricula_hidrometro,
		cod_hidrometro, dat_instalacao, 
		val_leitura_instalacao)
	select 	distinct cg_matricula, 1 + (case when cg_flag_troca = 'S' then 1 else 0 end), 
		cg_numero_hd, cg_data_instalacao_hd, 
		case when cg_flag_troca = 'S' then cg_leitura_inicial else 0 end
	from	OnPlaceSANED..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	ltrim(rtrim(isnull(cg_numero_hd,''))) != ''
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_HIDROMETRO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere Movimento - CARGA
	INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO
		(seq_matricula, ind_situacao_movimento, 
		seq_roteiro, cod_referencia,
		cod_agente, cod_hidrometro, val_numero_digitos, 
		dat_vencimento, val_consumo_medio,
		cod_banco, cod_banco_agencia, ind_entrega_especial, 
		dat_leitura_anterior, 
		dat_leitura_proxima,
		val_leitura_anterior, 
		dat_troca, 
		val_consumo_troca,
		val_quantidade_pendente) 
	select	cg_matricula, 'P', 
		convert(numeric, '1' + OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)), 	convert(char(7), cg_referencia, 102),
		rt_agente, cg_numero_hd, cg_capacidade_hidrometro, 
		cg_data_vencto, cg_consumo_medio,
		cg_codigo_banco,cg_agencia, 
		CASE 	when (isnull(cg_entrega_alternativa,'') <> '') and (cg_codigo_banco > 0) THEN '5' 
			when (isnull(cg_entrega_alternativa,'') <> '') THEN '2' 
			when (cg_codigo_banco > 0) THEN '1'
		ELSE '0' 
		end ,
		convert( datetime, convert(char(8), isnull(cg_data_leit_ant, cg_referencia), 112) ), 
		cg_proxima_leitura,
		case when isnull(cg_flag_troca, 'N') = 'S' then isnull(cg_leitura_inicial, 0) else isnull(cg_leitura_ant, 0) end, 
		case when isnull(cg_flag_troca, 'N') = 'S' then isnull(cg_data_instalacao_hd, isnull(cg_data_leit_ant, cg_referencia)) else null end, 
		case when isnull(cg_flag_troca, 'N') = 'S' then cg_consumo_anterior else null end,
		cg_qtde_debito_ant
	from	OnPlaceSANED..carga, OnPlaceSANED..roteiros
	where	cg_grupo = rt_grupo
	and	cg_rota = rt_rota
	and	cg_referencia = rt_referencia
	and	cg_grupo = @parGrupo
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	and	cg_referencia = @parReferencia
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MOVIMENTO ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- -----------------------------
	-- Insere Matricula DIADEMA	
	INSERT INTO OnPlaceSaned_Movimento..ACQ_MATRICULA_DIADEMA
		(seq_matricula, val_fraudes, 
		ind_corta_ligacao, ind_retencao_impostos, 
		ind_bloqueio, val_dias_bloqueio_anterior, val_dias_bloqueio_atual, 
		ind_cachorro, ind_tipo_consumidor, ind_calcula_fatura, 
		ind_emite_fatura, 
		seq_desconto, des_mensagem_1, des_mensagem_2, dat_bloqueio)
	select	cg_matricula, cg_qtde_registros_fraude, 
		cg_flag_cortar, cg_flag_calcula_imposto, 
		case when isnull(cg_bloqueado,'L') in ('L', '') then 'N' else 'S' end, isnull(cg_dias_bloqueio_tarifa_ant,0), isnull(cg_dias_bloqueio_tarifa_atual,0),
		cg_cachorro, cg_ident_consumidor, cg_flag_calcula_conta, 
		case 	when (isnull(cg_bloqueado,'L') not in ('L', '')) and (cg_ident_consumidor = 9) then 'N'
			else cg_flag_emite_conta
		end, 
		cg_desconto, cg_mensagem1, cg_mensagem2, cg_data_bloqueio
	from	OnPlaceSaned..carga
	where	cg_grupo = @parGrupo
	and	cg_referencia = @parReferencia
	and	cg_rota between @parRoteiroIni and @parRoteiroFim
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as ACQ_MATRICULA_DIADEMA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- -----------------------------
	-- Insere Movimento Categoria - CARGA
	begin
		declare @mvMatricula 	int, 
			@mvRoteiro	dec(11),
			@mvReferencia	datetime,
			@mvCategoria	int,
			@mvCatAux	int,
			@mvEcoRes	int,
			@mvEcoCom	int,
			@mvEcoInd	int,
			@mvEcoPub	int,
			@mvEcoSoc	int,
			@mvEcoEA	int,
			@mvSitAgua	 int,
			@mvSitEsgoto int

		declare CUR_CATEGORIA_MOV CURSOR read_only for
		select	cg_matricula, 
			convert(numeric, '1' + OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3) + OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)) as roteiro, 
			cg_referencia, 
			cg_categoria, 
			cg_economia_res, 
			cg_economia_com, 
			cg_economia_ind, 
			cg_economia_pub, 
			cg_economia_soc, 
			cg_economia_ea, 
			case 	when isnull(cg_bloqueado, 'L') not in ('L', '') then
					case 	when cg_natureza_ligacao in (1, 2) then 3 
						else 4 
					end
				when cg_natureza_ligacao in (1, 2) then 1 
				else 4 
			end as ct_lig_agua, 
			case 	when isnull(cg_bloqueado, 'L') not in ('L', '') then
					case 	when cg_natureza_ligacao in (2, 3) then 3 
						else 4 
					end
				when cg_natureza_ligacao in (2, 3) then 1 
				else 4 
			end as ct_lig_esg
		from	OnPlaceSANED..carga
		left	outer join OnPlaceSANED_movimento..ACQ_CATEGORIA
		on	cg_categoria = seq_categoria
		where	cg_grupo = @parGrupo
		and	cg_referencia = @parReferencia
		and	cg_rota between @parRoteiroIni and @parRoteiroFim

		-- CHAMA O CURSOR
		OPEN 	CUR_CATEGORIA_MOV
		FETCH 	NEXT 
		FROM 	CUR_CATEGORIA_MOV
		INTO 	@mvMatricula, 
			@mvRoteiro,
			@mvReferencia,
			@mvCategoria,
			@mvEcoRes,
			@mvEcoCom,
			@mvEcoInd,
			@mvEcoPub,
			@mvEcoSoc,
			@mvEcoEA,
			@mvSitAgua,
			@mvSitEsgoto

		-- LOOP CURSOR SERVICO
		WHILE (@@fetch_status <> -1)
		BEGIN
			declare @mvNumEco int
			-- Residencial
			if @mvEcoRes > 0 begin
				select @mvCatAux = 1
				set @mvNumEco = @mvEcoRes

				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- Movimento Taxa de Agua
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)

				-- Movimento Taxa de Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end

			-- Comercial
			if @mvEcoCom > 0 begin
				select @mvCatAux = 2
				set @mvNumEco = @mvEcoCom

				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- Movimento Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)
				
				-- Movimento Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end

			-- Industrial
			if @mvEcoInd > 0 begin
				select @mvCatAux = 3
				set @mvNumEco = @mvEcoInd


				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- ?gua
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)
				
				-- Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end

			-- Publica
			if @mvEcoPub > 0 begin
				select @mvCatAux = 4
				set @mvNumEco = @mvEcoPub


				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- ?gua
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)
				
				-- Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end

			-- Social 
			if @mvEcoSoc > 0 begin
				select @mvCatAux = 6
				set @mvNumEco = @mvEcoSoc


				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- ?gua
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)
				
				-- Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end

			-- Entidade Assistencial 
			if @mvEcoEA > 0 begin
				select @mvCatAux = 8
				set @mvNumEco = @mvEcoEA


				-- Matricula Taxa Água
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 1,
					@mvCatAux, @mvNumEco, @mvSitAgua)

				-- Matricula Taxa Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_TAXA_MATRICULA
					(seq_matricula, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao)
				values	(@mvMatricula, 2,
					@mvCatAux, @mvNumEco, @mvSitEsgoto)

				-- Movimento
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_CATEGORIA
					(seq_matricula, seq_roteiro, cod_referencia,
					 seq_categoria, val_numero_economia)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ),
					@mvCatAux, @mvNumEco)

				-- ?gua
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 1,
					@mvCatAux, @mvNumEco, @mvSitAgua, 'L', 0)
				
				-- Esgoto
				INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_TAXA
					(seq_matricula, seq_roteiro, cod_referencia, seq_taxa,
					seq_categoria, val_numero_economia, ind_situacao, ind_tipo_consumo, val_valor_calculado)
				values	(@mvMatricula, @mvRoteiro, convert( char(7), @mvReferencia, 102 ), 2,
					 @mvCatAux, @mvNumEco, @mvSitEsgoto, 'L', 0)
			end


			-- Proximo
			FETCH 	NEXT 
			FROM 	CUR_CATEGORIA_MOV
			INTO 	@mvMatricula, 
				@mvRoteiro,
				@mvReferencia,
				@mvCategoria,
				@mvEcoRes,
				@mvEcoCom,
				@mvEcoInd,
				@mvEcoPub,
				@mvEcoSoc,
				@mvEcoEA,
				@mvSitAgua,
				@mvSitEsgoto
		END

		-- Fecha o cursor Logradouro
		CLOSE CUR_CATEGORIA_MOV
		DEALLOCATE CUR_CATEGORIA_MOV

	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as CATEGORIAS ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ---------------------------
	-- Insere dados Matricula Servico Parcela + Movimento Servi?o

	-- ******************************
	-- Cursor para atualizar ACQ_MATRICULA_SERVICO_PARCELA e ACQ_MOVIMENTO_SERVICO
	
	begin
		declare @ssMatriculaAnt int,
			@ssInd		int,
			@ssMatricula 	int,
			@ssGrupo	int,
			@ssReferencia	datetime,
			@ssRoteiro	dec(11),
			@ssServico	int,
			@ssValor	dec(12,2)

		select	@ssMatriculaAnt = 0,
			@ssInd		= 0
	
		declare CUR_SERVICO_STR CURSOR read_only for
		select  sr_matricula as matricula,
			sr_grupo as grupo,
			sr_referencia as referencia, 
			convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)) as roteiro, 
			dbo.fc_busca_servico(ltrim(rtrim(sr_descricao))) as Servico, case when sr_ind_credito = 'S' then -1 else 1 end * sr_valor
		from    OnPlaceSANED..servicos, OnPlaceSANED..carga
		where	cg_matricula = sr_matricula
		and	cg_referencia = sr_referencia
		and	cg_grupo = sr_grupo
		and	cg_grupo = @parGrupo
		and	cg_referencia = @parReferencia
		and	sr_valor > 0
		and	cg_rota between @parRoteiroIni and @parRoteiroFim

		-- CHAMA O CURSOR
		OPEN 	CUR_SERVICO_STR
		FETCH 	NEXT 
		FROM 	CUR_SERVICO_STR
		INTO 	@ssMatricula, 
			@ssGrupo,
			@ssReferencia,
			@ssRoteiro,
			@ssServico,
			@ssValor

		-- LOOP CURSOR SERVICO
		WHILE (@@fetch_status <> -1)
		BEGIN
			if @ssMatriculaAnt <> @ssMatricula begin
				set @ssInd = 0
			end
			set 	@ssInd = (@ssInd + 1)
			select @ssMatriculaAnt = @ssMatricula

			select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
			from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
			where	seq_matricula = @ssMatricula

			select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
			from	OnPlaceSANED_movimento..ACQ_MOVIMENTO_SERVICO
			where	cod_referencia = convert(char(7), @ssReferencia, 102)
			and	seq_roteiro    = @ssRoteiro
			and	seq_matricula  = @ssMatricula

			-- Insere ACQ_MATRICULA_SERVICO_PARCELA
			INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					( seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					  seq_servico_fatura, cod_referencia, seq_roteiro, 
					  val_valor_parcela, ind_status, ind_documento_origem)
			values	(@ssMatricula, @seq_matricula_servico_parcela, @ssInd,
					 @ssServico, convert(char(7), @ssReferencia, 102), @ssRoteiro,
					 @ssValor, 'A', '01')

			-- Insere ACQ_MOVIMENTO_SERVICO
			INSERT INTO OnPlaceSANED_movimento..ACQ_MOVIMENTO_SERVICO
				(seq_matricula, seq_matricula_servico_parcela, seq_item_servico, 
				 cod_referencia, seq_roteiro, ind_documento_origem, val_valor_servico )
			values	(@ssMatricula, @seq_matricula_servico_parcela, @seq_item_servico,
			    	 convert(char(7), @ssReferencia, 102), @ssRoteiro, '01', @ssValor)

			-- Proximo
			FETCH 	NEXT 
			FROM 	CUR_SERVICO_STR
			INTO 	@ssMatricula, 
				@ssGrupo,
				@ssReferencia,
				@ssRoteiro,
				@ssServico,
				@ssValor
		END

		-- Fecha o cursor Logradouro
		CLOSE CUR_SERVICO_STR
		DEALLOCATE CUR_SERVICO_STR

	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou os SERVIÇOS FATURADOS ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Cursor para atualizar NOTIFICACOES

	begin
		declare	@av_matricula int, 
			@av_grupo int, 
			@av_referencia datetime, 
			@av_data_vencimento datetime, 
			@av_qtde_debito int, 
			@av_valor_total dec(15,2), 
			@av_roteiro int, 
			@av_referencia_debito datetime, 
			@av_valor dec(15,2),  
			@av_valor_item dec(15,2),  
			@av_matricula_ant int, 
			@avAux int, 
			@av_codigo_barras varchar(44),
			@av_codigo_barras_linha  varchar(48),
			@av_tipo varchar(1)

		select 	@av_matricula_ant = 0,
			@avAux = 250

		declare CUR_NOTIFICACAO CURSOR read_only for
		select  db_matricula, db_grupo, db_referencia, 
			db_data_vencimento, db_qtde_debitos, db_valor_total, 
			convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)) as roteiro ,
			db_codigo_barras,
			OnPlaceSANED_Movimento.dbo.FC_CODIGO_BARRAS_CONTROLE(db_codigo_barras),
			isnull(db_tipo,'N')
		FROM 	OnPlaceSANED.dbo.debitos, OnPlaceSANED..carga
		where	cg_matricula = db_matricula 
		and	cg_referencia = db_referencia
		and	cg_grupo = db_grupo
		and	cg_grupo = @parGrupo
		and	cg_rota between @parRoteiroIni and @parRoteiroFim
		and	cg_referencia = @parReferencia
		order	by db_matricula, db_data_vencimento 
		

		-- CHAMA O CURSOR
		OPEN 	CUR_NOTIFICACAO
		FETCH 	NEXT 
		FROM 	CUR_NOTIFICACAO
		INTO 	@av_matricula, @av_grupo, @av_referencia, 
			@av_data_vencimento, @av_qtde_debito, @av_valor_total, 
			@av_roteiro,
			@av_codigo_barras, @av_codigo_barras_linha,
			@av_tipo
		
		-- LOOP CURSOR NOTIFICACAO
		WHILE (@@fetch_status <> -1)
		BEGIN

			if  @av_matricula_ant != @av_matricula begin
				set 	@avAux = 0
			end
			select 	@av_matricula_ant = @av_matricula

			select	@seq_processo_corte = isnull(max(seq_processo_corte),0)+1
			from	OnPlaceSANED_movimento..ACQ_PROCESSO_CORTE

			INSERT INTO OnPlaceSANED_movimento..ACQ_PROCESSO_CORTE
				(seq_processo_corte, seq_matricula, seq_politica_corte, dat_abertura)
			values	(@seq_processo_corte, @av_matricula, 1,
				convert(datetime, convert(char(8), getdate(), 112)))

			select	@seq_aviso = isnull(max(seq_aviso),0)+1
			from	OnPlaceSANED_movimento..ACQ_AVISO
	
			-- Monta a sequencia da fatura
			select	@seq_fatura = isnull(max(seq_fatura),0)+1
			from	OnPlaceSANED_movimento..ACQ_FATURA

			-- Insere Fatura
			INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA
				(dat_leitura, cod_referencia, dat_vencimento, val_valor_faturado, 
				seq_fatura, seq_roteiro,
				seq_matricula, ind_fatura_emitida, ind_status, 
				des_codigo_barras, des_linha_digitavel,
				ind_tipo_documento_origem, des_documento_origem )
			values	(convert(datetime, '19740506'), convert(char(7), convert(datetime, '19740506'), 102), @av_data_vencimento, @av_valor_total, 
				@seq_fatura, @av_roteiro,
				@av_matricula, 'S', 'RE',  
				@av_codigo_barras , @av_codigo_barras_linha,
				4, convert(varchar, @seq_aviso) )

			-- Insere Aviso
			INSERT INTO OnPlaceSANED_movimento..ACQ_AVISO
				(seq_aviso, seq_matricula, seq_politica_corte, seq_processo_corte,
				seq_fatura, dat_geracao_aviso, 
				val_quantidade_debito, val_valor_debito, ind_confirma_entrega,
				ind_documento)
			values	(@seq_aviso, @av_matricula, 1, @seq_processo_corte,
				@seq_fatura, convert(datetime, convert(char(8), getdate(), 112)), 
				@av_qtde_debito, @av_valor_total, 'N', 
				@av_tipo)

			-- Inclui as refer?ncias somente se houver menos que 06 d?bitos
			IF @av_qtde_debito <= 6
			begin
						
				declare CUR_AVISO CURSOR read_only for	
				select 	di_referencia_debito, di_valor
				FROM 	OnPlaceSANED.dbo.debitos_itens
				where 	di_matricula = @av_matricula
				and 	di_referencia = @parReferencia
				and	di_referencia_debito is not null
				and	di_valor > 0
				order	by di_sequencia
			
				-- CHAMA O CURSOR
				OPEN 	 CUR_AVISO
				FETCH 	 NEXT 
				FROM 	 CUR_AVISO 
				into 	 @av_referencia_debito, @av_valor_item

				-- LOOP CURSOR ITENS D?BITO
				WHILE (@@fetch_status <> -1)
				BEGIN

					-- Contadores
					set	@avAux = (@avAux + 1)   

					-- Monta a sequencia da fatura
					select	@seq_fatura = isnull(max(seq_fatura),0)+1
					from	OnPlaceSANED_movimento..ACQ_FATURA
		
					-- Insere Fatura
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA
						(dat_leitura, cod_referencia, dat_vencimento, val_valor_faturado, 
						seq_fatura, seq_roteiro,
						seq_matricula, ind_fatura_emitida, ind_status )
					values	(@av_referencia_debito, convert(char(7), @av_referencia_debito, 102), @av_data_vencimento, @av_valor_item, 
						@seq_fatura, @av_roteiro,
						@av_matricula, 'S', 'RE')


					-- Insere Aviso Fatura
					INSERT INTO OnPlaceSANED_movimento..ACQ_AVISO_FATURA
						(seq_aviso, seq_aviso_fatura, seq_fatura)
					values	(@seq_aviso, @avAux, @seq_fatura)

					-- Busca servi?o fatura
					select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					where	seq_matricula = @av_matricula

					-- Insere ACQ_MATRICULA_SERVICO_PARCELA
					INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
						(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
						 seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
						 cod_referencia, val_valor_parcela)
					values	(@av_matricula, @seq_matricula_servico_parcela, @avAux,
						 OnPlaceSANED_movimento.dbo.fc_busca_servico('NOTIFICACAO DE DEBITO'), @ssRoteiro, 'A', '01',
						 convert(char(7), @av_referencia_debito, 102), @av_valor_item)

					select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					where	seq_fatura = @seq_fatura

					-- Insere ACQ_FATURA_SERVICO
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
						(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
						 ind_documento_origem, val_valor_servico)
					values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
						'01', @av_valor_item)

					-- Pr?ximo registro
					FETCH 	NEXT 
					from 	CUR_AVISO
					into 	@av_referencia_debito, @av_valor_item
				end

				-- FECHAR O CURSOR
				CLOSE CUR_AVISO
				DEALLOCATE CUR_AVISO
			end

			-- Proximo
			FETCH 	NEXT 
			FROM 	CUR_NOTIFICACAO
			INTO 	@av_matricula, @av_grupo, @av_referencia, 
				@av_data_vencimento, @av_qtde_debito, @av_valor_total, 
				@av_roteiro,
				@av_codigo_barras, @av_codigo_barras_linha,
				@av_tipo

		END

		-- Fecha o cursor Logradouro
		CLOSE CUR_NOTIFICACAO
		DEALLOCATE CUR_NOTIFICACAO

	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou os AVISOS DE DÉBITOS ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Inclui dados da Segunda via

	begin
		--
		declare	@sv_matricula int , @sv_referencia datetime ,
			@sv_grupo int , @sv_cod_iptu int ,
			@sv_roteiro int ,
			@sv_ref_2via datetime ,
			@sv_leitura_ant int , @sv_leitura_atual int ,
			@sv_hidrometro varchar (9) , 
			@sv_ocorrencia_ant int , @sv_consumo int , @sv_consumo_medio int ,	
			@sv_data_vencimento datetime , @sv_data_leitura_anterior datetime , @sv_data_leitura datetime , @sv_data_proxima_leit datetime ,
			@sv_categoria int , 
			@sv_economia_res int , 
			@sv_economia_com int , 
			@sv_economia_ind int ,
			@sv_economia_pub int ,  
			@sv_economia_soc int ,  
			@sv_economia_ea int , 
			@sv_ind_mista int ,
			@sv_servico_ag decimal(11, 2) , @sv_servico_es decimal(11, 2) ,
			@sv_desc_servico_01 varchar (30) , @sv_valor_servico_01 decimal(11, 2) ,
			@sv_desc_servico_02 varchar (30) , @sv_valor_servico_02 decimal(11, 2) ,
			@sv_desc_servico_03 varchar (30) , @sv_valor_servico_03 decimal(11, 2) ,
			@sv_desc_servico_04 varchar (30) , @sv_valor_servico_04 decimal(11, 2) ,
			@sv_desc_servico_05 varchar (30) , @sv_valor_servico_05 decimal(11, 2) ,
			@sv_desc_servico_06 varchar (30) , @sv_valor_servico_06 decimal(11, 2) ,
			@sv_desc_servico_07 varchar (30) , @sv_valor_servico_07 decimal(11, 2) ,
			@sv_desc_servico_08 varchar (30) , @sv_valor_servico_08 decimal(11, 2) ,
			@sv_desc_servico_09 varchar (30) , @sv_valor_servico_09 decimal(11, 2) ,
			@sv_ref_01 datetime , @sv_consumo_01 int ,
			@sv_ref_02 datetime , @sv_Consumo_02 int ,
			@sv_ref_03 datetime , @sv_Consumo_03 int ,
			@sv_ref_04 datetime , @sv_Consumo_04 int ,
			@sv_ref_05 datetime , @sv_Consumo_05 int ,
			@sv_ref_06 datetime , @sv_Consumo_06 int ,
			@sv_codigo_barras varchar(44),
			@sv_total dec(13, 2),
			@sv_codigo_barras_linha  varchar(48)

		declare @sv_matricula_ant int, 
			@svAux int, 
			@svConsumoEco int, 
			@svTotalEco int,
			@svCodServico int

		select 	@sv_matricula_ant = 0,
			@svAux = 100,
			@avAux = 500

		declare CUR_SEGVIA CURSOR read_only for
		select  sv_matricula , sv_referencia , sv_data_vencimento ,
			sv_grupo , 
			convert(numeric, '1'+OnPlaceSANED.dbo.fc_completa_zeros(cg_grupo, 3)+OnPlaceSANED.dbo.fc_completa_zeros(cg_rota,3)) as roteiro, 
			sv_referencia_seg_via ,
			sv_leitura_anterior , sv_leitura_atual,
			sv_data_leitura_anterior, sv_data_leitura,
			sv_consumo_faturado, sv_media, cg_categoria, 
			cg_economia_res, cg_economia_com, cg_economia_ind, 
			cg_economia_pub, cg_economia_soc, cg_economia_ea, 
			case when (	case when cg_economia_res > 0 then 1 else 0 end +
					case when cg_economia_com > 0 then 1 else 0 end +
					case when cg_economia_ind > 0 then 1 else 0 end +
					case when cg_economia_pub > 0 then 1 else 0 end +
					case when cg_economia_soc > 0 then 1 else 0 end +
					case when cg_economia_ea > 0 then 1 else 0 end) >= 2
				then 1 else 0 end,
			sv_servico_01 , sv_valor_01 ,
			sv_servico_02 , sv_valor_02 ,
			sv_servico_03 , sv_valor_03 ,
			sv_servico_04 , sv_valor_04 ,
			sv_servico_05 , sv_valor_05 ,
			sv_servico_06 , sv_valor_06 ,
			sv_servico_07 , sv_valor_07 ,
			sv_servico_08 , sv_valor_08 ,
			sv_servico_09 , sv_valor_09 ,
			sv_ref_cons_1 , sv_cons_1 ,
			sv_ref_cons_2 , sv_Cons_2 ,
			sv_ref_cons_3 , sv_Cons_3 ,
			sv_ref_cons_4 , sv_Cons_4 ,
			sv_ref_cons_5 , sv_Cons_5 ,
			sv_ref_cons_6 , sv_Cons_6 ,
			sv_valor_total,
			sv_codigo_barras,
			OnPlaceSANED_Movimento.dbo.FC_CODIGO_BARRAS_CONTROLE(sv_codigo_barras)
		FROM 	OnPlaceSANED..segundas_vias, OnPlaceSANED..carga
		where	cg_matricula = sv_matricula
		and	cg_referencia = sv_referencia
		and	cg_grupo = sv_grupo
		and	cg_grupo = @parGrupo
		and	cg_referencia = @parReferencia
		and	cg_rota between @parRoteiroIni and @parRoteiroFim

		-- CHAMA O CURSOR
		OPEN 	CUR_SEGVIA
		FETCH 	NEXT 
		FROM 	CUR_SEGVIA
		INTO 	@sv_matricula , @sv_referencia , @sv_data_vencimento ,
			@sv_grupo ,
			@sv_roteiro ,
			@sv_ref_2via ,
			@sv_leitura_ant , @sv_leitura_atual ,
			@sv_data_leitura_anterior , @sv_data_leitura ,
			@sv_consumo , @sv_consumo_medio , @sv_categoria , 
			@sv_economia_res , @sv_economia_com , @sv_economia_ind ,
			@sv_economia_pub , @sv_economia_soc , @sv_economia_ea ,  
			@sv_ind_mista ,
			@sv_desc_servico_01 , @sv_valor_servico_01 ,
			@sv_desc_servico_02 , @sv_valor_servico_02 ,
			@sv_desc_servico_03 , @sv_valor_servico_03 ,
			@sv_desc_servico_04 , @sv_valor_servico_04 ,
			@sv_desc_servico_05 , @sv_valor_servico_05 ,
			@sv_desc_servico_06 , @sv_valor_servico_06 ,
			@sv_desc_servico_07 , @sv_valor_servico_07 , 	
			@sv_desc_servico_08 , @sv_valor_servico_08 ,
			@sv_desc_servico_09 , @sv_valor_servico_09 ,
			@sv_ref_01 , @sv_consumo_01 ,
			@sv_ref_02 , @sv_Consumo_02 ,
			@sv_ref_03 , @sv_Consumo_03 ,
			@sv_ref_04 , @sv_Consumo_04 ,
			@sv_ref_05 , @sv_Consumo_05 ,
			@sv_ref_06 , @sv_Consumo_06 ,
			@sv_total, 
			@sv_codigo_barras , @sv_codigo_barras_linha

		-- LOOP CURSOR 
		WHILE (@@fetch_status <> -1)
		BEGIN
			-- Executa
			-- Inicializa
			if @sv_matricula != @sv_matricula_ant begin
				set	@svAux = 100
				set	@avAux = 500
			end

			select	@sv_matricula_ant = @sv_matricula
			set	@svAux = (@svAux+1)
	
			-- Monta a sequencia da fatura
			select	@seq_fatura = isnull(max(seq_fatura),0)+1
			from	OnPlaceSANED_movimento..ACQ_FATURA
	
			-- Insere Fatura
			INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA
				(dat_leitura, dat_leitura_proxima, 
				 cod_referencia, dat_vencimento, val_valor_faturado, 
				 seq_fatura, seq_roteiro,
				 seq_matricula, ind_fatura_emitida, ind_status,
				 dat_leitura_anterior, 
				 val_leitura_real, val_leitura_anterior, 
				 val_consumo_medido, val_consumo_medio,
				 seq_tipo_entrega, des_codigo_barras, des_linha_digitavel )
			values	(@sv_data_leitura, @sv_data_proxima_leit,
				 convert(char(7), @sv_ref_2via, 102), @sv_data_vencimento, @sv_total, 
				 @seq_fatura, @sv_roteiro,
				 @sv_matricula, 'N', 'PE',
	 			 @sv_data_leitura_anterior , 
				 @sv_leitura_atual, @sv_leitura_ant, 
				 @sv_consumo, @sv_consumo_medio, 
				 null,  @sv_codigo_barras , @sv_codigo_barras_linha )

			select 	@sv_servico_ag = 0, 
				@sv_servico_es = 0 

			-- Verifica se existe servi?o
			-- Servi?o 01
			if (ltrim(rtrim(isnull(@sv_desc_servico_01, ''))) != '') and (isnull(@sv_valor_servico_01,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_01, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto
				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)

				if @DescricaoTexto = 'AGUA' begin
					select 	@sv_servico_ag = @sv_valor_servico_01 
				end
				else if @DescricaoTexto = 'ESGOTO' begin
					select 	@sv_servico_es = @sv_valor_servico_01  
				end
				else begin
				

					select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					where	seq_matricula = @sv_matricula
	
					set	@avAux = (@avAux + 1)

					-- Insere ACQ_MATRICULA_SERVICO_PARCELA
					INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
						(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
						 seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
						 cod_referencia, val_valor_parcela)
					values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
						 isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
						 convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_01)

					select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					where	seq_fatura = @seq_fatura

					-- Insere ACQ_FATURA_SERVICO
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
						(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
						seq_servico_fatura, ind_documento_origem, val_valor_servico)
					values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
						isnull(@svCodServico,0), '01', @sv_valor_servico_01)
				end
			end

			-- Servi?o 02
			if (ltrim(rtrim(isnull(@sv_desc_servico_02, ''))) != '') and (isnull(@sv_valor_servico_02,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_02, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)
				
				if @DescricaoTexto = 'AGUA' begin
					select 	@sv_servico_ag = @sv_valor_servico_02 
				end
				else if @DescricaoTexto = 'ESGOTO' begin
					select 	@sv_servico_es = @sv_valor_servico_02  
				end
				else begin
				
					select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					where	seq_matricula = @sv_matricula
	
					set	@avAux = (@avAux + 1)

					-- Insere ACQ_MATRICULA_SERVICO_PARCELA
					INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
						(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
						seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
						cod_referencia, val_valor_parcela)
					values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
						isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
						convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_02)

					select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
					from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					where	seq_fatura = @seq_fatura

					-- Insere ACQ_FATURA_SERVICO
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
						(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
						seq_servico_fatura, ind_documento_origem, val_valor_servico)
					values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
						isnull(@svCodServico,0), '01', @sv_valor_servico_02)
				end
			end

			-- Servi?o 03
			if (ltrim(rtrim(isnull(@sv_desc_servico_03, ''))) != '') and (isnull(@sv_valor_servico_03,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_03, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)

				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_03)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_03)
			end

			-- Servi?o 04
			if (ltrim(rtrim(isnull(@sv_desc_servico_04, ''))) != '') and (isnull(@sv_valor_servico_04,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_04, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto
				
				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)

				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_04)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_04)
			end

			-- Servi?o 05
			if (ltrim(rtrim(isnull(@sv_desc_servico_05, ''))) != '') and (isnull(@sv_valor_servico_05,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_05, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)

				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_05)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_05)
			end

			-- Servi?o 06
			if (ltrim(rtrim(isnull(@sv_desc_servico_06, ''))) != '') and (isnull(@sv_valor_servico_06,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_06, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)
				
				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_06)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_06)
			end

			-- Servi?o 07
			if (ltrim(rtrim(isnull(@sv_desc_servico_07, ''))) != '') and (isnull(@sv_valor_servico_07,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_07, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto
				
				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)

				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_07)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_07)
			end

			-- Servi?o 08
			if (ltrim(rtrim(isnull(@sv_desc_servico_08, ''))) != '') and (isnull(@sv_valor_servico_08,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_08, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)
				
				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_08)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_08)
			end

			-- Servi?o 09
			if (ltrim(rtrim(isnull(@sv_desc_servico_09, ''))) != '') and (isnull(@sv_valor_servico_09,0) != 0) begin
				select	@DescricaoTexto = ltrim(rtrim(isnull(@sv_desc_servico_09, '')))
				exec 	OnPlaceSANED_movimento..sp_atualiza_servico @DescricaoTexto

				select	@svCodServico = OnPlaceSANED_movimento.dbo.fc_busca_servico(@DescricaoTexto)
				--isnull(@svCodServico,0)
				
				select	@seq_matricula_servico_parcela = isnull(max(isnull(seq_matricula_servico_parcela,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
				where	seq_matricula = @sv_matricula

				set	@avAux = (@avAux + 1)

				-- Insere ACQ_MATRICULA_SERVICO_PARCELA
				INSERT INTO OnPlaceSANED_movimento..ACQ_MATRICULA_SERVICO_PARCELA
					(seq_matricula, seq_matricula_servico_parcela, seq_item_servico_fatura, 
					seq_servico_fatura, seq_roteiro, ind_status, ind_documento_origem, 
					cod_referencia, val_valor_parcela)
				values	(@sv_matricula, @seq_matricula_servico_parcela, @avAux,
					isnull(@svCodServico,0), @sv_roteiro, 'A', '01',
					convert(char(7), @sv_ref_2via, 102), @sv_valor_servico_09)

				select	@seq_item_servico = isnull(max(isnull(seq_item_servico,0)),0)+1
				from	OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
				where	seq_fatura = @seq_fatura

				-- Insere ACQ_FATURA_SERVICO
				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_SERVICO
					(seq_fatura, seq_matricula_servico_parcela, seq_item_servico, seq_parcela,
					seq_servico_fatura, ind_documento_origem, val_valor_servico)
				values	(@seq_fatura, @seq_matricula_servico_parcela, @seq_item_servico, 1,
					isnull(@svCodServico,0), '01', @sv_valor_servico_09)
			end


			select @svTotalEco = @sv_economia_res + @sv_economia_com + @sv_economia_ind + @sv_economia_pub + @sv_economia_soc + @sv_economia_ea
			if @svTotalEco <= 0 begin
				select @svTotalEco = 1
			end
			select @svConsumoEco = @sv_consumo / @svTotalEco

			-- Mista
			if @sv_ind_mista > 0 begin
				select @mvCatAux = 5

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_res)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@svTotalEco, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @svTotalEco)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@svTotalEco, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @svTotalEco)
				end

			end

			-- Residencial
			else if @sv_economia_res > 0 begin
				select @mvCatAux = 1

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_res)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_res, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_res)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_res, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_res)
				end

			end

			-- Comercial
			else if @sv_economia_com > 0 begin
				select @mvCatAux = 2

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_com)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_com, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_com)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_com, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_com)
				end

			end

			-- Industrial
			else if @sv_economia_ind > 0 begin
				select @mvCatAux = 3

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_ind)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_ind, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_ind)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_ind, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_ind)
				end

			end
			
			-- P?BLICA
			else if @sv_economia_pub > 0 begin
				select @mvCatAux = 4

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_pub)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_pub, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_pub)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_pub, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_pub)
				end

			end			

			-- Social 
			else if @sv_economia_soc  > 0 begin
				select @mvCatAux = 6

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_soc)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_soc, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_soc)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_soc, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_soc)
				end

			end			

			-- Entidade assistencial 
			else if @sv_economia_ea  > 0 begin
				select @mvCatAux = 8

				INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_CATEGORIA
					(seq_fatura, seq_categoria, val_numero_economia)
				values	(@seq_fatura, @mvCatAux, @sv_economia_ea)

				-- ?gua
				if isnull(@sv_servico_ag,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 1,
						@sv_economia_ea, 1, 'L',
						@sv_servico_ag, @sv_servico_ag, @svConsumoEco * @sv_economia_ea)
				end

				-- Esgoto
				if isnull(@sv_servico_es,0) > 0 begin
					INSERT INTO OnPlaceSANED_movimento..ACQ_FATURA_TAXA
						(seq_fatura, seq_categoria, seq_taxa,
						val_numero_economia, ind_situacao, ind_tipo_consumo,
						val_valor_faturado, val_valor_calculado, val_consumo_faturado)
					values	(@seq_fatura, @mvCatAux, 2,
						@sv_economia_ea, 1, 'L',
						@sv_servico_es, @sv_servico_es, @svConsumoEco * @sv_economia_ea)
				end

			end			

			-- Atualiza Hist?rico de consumo
			-- Ref 01
			if @sv_ref_01 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_01, @sv_ref_01, @sv_hidrometro, @sv_grupo, @sv_consumo_01, 0
			end 

			-- Ref 02
			if @sv_ref_02 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_02, @sv_ref_02, @sv_hidrometro, @sv_grupo, @sv_consumo_02, 0
			end 

			-- Ref 03
			if @sv_ref_03 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_03, @sv_ref_03, @sv_hidrometro, @sv_grupo, @sv_consumo_03, 0
			end 

			-- Ref 04
			if @sv_ref_04 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_04, @sv_ref_04, @sv_hidrometro, @sv_grupo, @sv_consumo_04, 0
			end 

			-- Ref 05
			if @sv_ref_05 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_05, @sv_ref_05, @sv_hidrometro, @sv_grupo, @sv_consumo_05, 0
			end 

			-- Ref 06
			if @sv_ref_06 > 0 begin
				exec OnPlaceSANED_movimento.dbo.sp_atualiza_matricula_leitura @sv_matricula, @sv_ref_06, @sv_ref_06, @sv_hidrometro, @sv_grupo, @sv_consumo_06, 0
			end 

			-- Proximo
			FETCH 	NEXT 
			FROM 	CUR_SEGVIA
			INTO 	@sv_matricula , @sv_referencia , @sv_data_vencimento ,
				@sv_grupo ,
				@sv_roteiro ,
				@sv_ref_2via ,
				@sv_leitura_ant , @sv_leitura_atual ,
				@sv_data_leitura_anterior , @sv_data_leitura ,
				@sv_consumo , @sv_consumo_medio , @sv_categoria , 
				@sv_economia_res , @sv_economia_com , @sv_economia_ind ,
				@sv_economia_pub , @sv_economia_soc , @sv_economia_ea ,  
				@sv_ind_mista ,
				@sv_desc_servico_01 , @sv_valor_servico_01 ,
				@sv_desc_servico_02 , @sv_valor_servico_02 ,
				@sv_desc_servico_03 , @sv_valor_servico_03 ,
				@sv_desc_servico_04 , @sv_valor_servico_04 ,
				@sv_desc_servico_05 , @sv_valor_servico_05 ,
				@sv_desc_servico_06 , @sv_valor_servico_06 ,
				@sv_desc_servico_07 , @sv_valor_servico_07 , 	
				@sv_desc_servico_08 , @sv_valor_servico_08 ,
				@sv_desc_servico_09 , @sv_valor_servico_09 ,
				@sv_ref_01 , @sv_consumo_01 ,
				@sv_ref_02 , @sv_Consumo_02 ,
				@sv_ref_03 , @sv_Consumo_03 ,
				@sv_ref_04 , @sv_Consumo_04 ,
				@sv_ref_05 , @sv_Consumo_05 ,
				@sv_ref_06 , @sv_Consumo_06 ,
				@sv_total, 
				@sv_codigo_barras , @sv_codigo_barras_linha
		END

		-- Fecha o cursor Logradouro
		CLOSE CUR_SEGVIA
		DEALLOCATE CUR_SEGVIA
	end
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou as SEGUNDAS-VIAS ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	-- ******************************
	-- Finaliza
	-- ---------------------------
	-- Atualiza a Fatura Cronograma para liberar a transmiss?o

	update	OnPlaceSANED_movimento..ACQ_GRUPO_FATURA_CRONOGRAMA
	set	ind_gerado = 'S'
	from	OnPlaceSANED_movimento..ACQ_GRUPO_REFERENCIA
	where	seq_grupo_fatura = @parGrupo
	and	ACQ_GRUPO_FATURA_CRONOGRAMA.seq_roteiro = ACQ_GRUPO_REFERENCIA.seq_roteiro
	and	ACQ_GRUPO_FATURA_CRONOGRAMA.cod_referencia = ACQ_GRUPO_REFERENCIA.cod_referencia
	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicio 
		select	@hrInicio = getdate()
		Print ' -- Atualizou o ACQ_GRUPO_FATURA_CRONOGRAMA ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	

	if @nTeste = 1 begin
		select	@hrAnterior = @hrInicioGeral
		select	@hrInicio = getdate()
		Print ' -- FIM ' + convert(varchar, getdate(), 103) + ' ' + convert(varchar, @hrInicio, 108) + ' Tempo: ' + convert(varchar, datediff(s, @hrAnterior, @hrInicio )) + ' segundos.'
	end	
end

GO
