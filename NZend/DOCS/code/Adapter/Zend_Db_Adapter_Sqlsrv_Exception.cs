///////////////////////////////////////////////////////////
//  Zend_Db_Adapter_Sqlsrv_Exception.cs
//  Implementation of the Class Zend_Db_Adapter_Sqlsrv_Exception
//  Generated by Enterprise Architect
//  Created on:      08-jun-2011 22:13:20
//  Original author: alexis
///////////////////////////////////////////////////////////




using Zend.Db.Adapter;
namespace Zend.Db.Adapter.Sqlsrv {
	/// <summary>
	/// Zend_Db_Adapter_Sqlsrv_Exception
	///          @category   Zend
	///          @package    Zend_Db
	///          @subpackage Adapter
	///          @copyright  Copyright (c) 2005-2010 Zend Technologies USA Inc. (http:
	/// //www.zend.com)
	///          @license    http://framework.zend.com/license/new-bsd     New BSD
	/// License
	/// </summary>
	public class Zend_Db_Adapter_Sqlsrv_Exception : Zend_Db_Adapter_Exception {

		public Zend_Db_Adapter_Sqlsrv_Exception(){

		}

		~Zend_Db_Adapter_Sqlsrv_Exception(){

		}

		public override void Dispose(){

		}

		/// <summary>
		/// Constructor  If $message is an array, the assumption is that the return value
		/// of sqlsrv_errors() was provided. If so, it then retrieves the most recent error
		/// from that stack, and sets the message and code based on it.
		/// </summary>
		/// <param>null|array|string $message</param>
		/// <param>null|int $code</param>
		/// <param name="message"></param>
		/// <param name="code"></param>
		public var __construct(var message, var code){

			return null;
		}

	}//end Zend_Db_Adapter_Sqlsrv_Exception

}//end namespace Sqlsrv