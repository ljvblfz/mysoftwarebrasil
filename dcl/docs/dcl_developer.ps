%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: dcl_developer.dvi
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica Helvetica-Bold Helvetica-Oblique
%%+ Helvetica-BoldOblique Times-Roman Times-Bold Times-Italic
%%+ Times-BoldItalic Courier Courier-Bold Courier-Oblique
%%+ Courier-BoldOblique Symbol
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter -o
%+ /usr/local/apache/htdocs/dcl/dcl/docs/dcl_developer.ps
%+ dcl_developer.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.05.05:0957
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
%
/TeXnANSIEncoding [
/.notdef /uni20AC /.notdef /.notdef % 0, 1, 2, 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223 % SS in T1
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: 8r.enc
% @@psencodingfile@{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "1 July 1998",
%   filename = "8r.enc",
%   email = "tex-fonts@@tug.org",
%   docstring = "Encoding for TrueType or Type 1 fonts
%                to be used with TeX."
% @}
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both 
% ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (dcl_developer.dvi)
@start
%DVIPSBitmapFont: Fa cmsy10 10 1
/Fa 1 16 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FEA9
6C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A>15
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb ectt1000 10 55
/Fb 55 122 df<EB01C0497EA6EB0FFC90387FFF8048B512E00007804880391FFBEFFC39
3FC3E1FE903803E07F007E80127C00FC158012F8157FA300FCEC3F00A2007E91C7FC127F
EA3FC313FBEA1FFF6C13FC6C13FF000114C06C6C7F011F13F801037F14E7ECE1FEECE07F
81001880007E1580150F12FFA312FE151F1600007E5C007F143ED83F8313FE9038C3E1FC
391FFBEFF86CB55A6C5C6C5CC691C7FCEB1FF8EB03E0A66D5A21417BB92C>36
D<EA0F80EA1FE0EA3FF0127F13F8A213FCA2123F121F120FEA007CA313FC13F8A2120113
F01203EA07E0A2EA0FC0EA3F80127FEAFF005A12F812700E1D71B22C>39
D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A485A5B12075B120F
5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121FA26C7E7F12077F
12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC130113001438164272B92C>
I<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F1480131F14C0130FEB07E0
A214F01303A214F81301A314FC1300AC130114F8A3130314F0A2130714E0A2EB0FC0131F
1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A1270164279B92C>I<
EA0F80EA1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1F
E0EA7FC0EAFF80130012FC12700E17718A2C>44 D<007FB512F0B612F8A36C14F01D0579
942C>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>I<1507ED0F80
A2151F16005D153E157E157CA215FC5D14015D14035D14075D140F5D141F92C7FC5C143E
A2147E147C14FC5C13015C13035C13075C130F5C131F91C8FC5B133EA2137E137C13FC5B
12015B12035B12075B120F5B121F90C9FCA25A123E127E127C12FC5AA2127021417BB92C
>I<EB0FFC90387FFF8048B512E0000714F84880391FF807FEEBC0004848137F6D7F1680
151FA26C5A6CC7FCC8FC153F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F
90380007FEEC00FF81ED3F80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A24814
1F007FEC3F806DEB7F006C6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23
357CB32C>51 D<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAEEA0F80EA
1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1FE0EA7FC0
EAFF80130012FC12700E3071A32C>59 D<1502ED0F80151F157F15FF913803FE00EC0FFC
EC1FF0EC7FE0ECFF80D903FEC7FC495AEB1FF0495AEBFF80000390C8FCEA07FCEA1FF8EA
3FE0EAFF8090C9FCA27FEA3FE0EA1FF8EA07FC6CB4FCC67FEB3FE06D7EEB07FC6D7E9038
00FF80EC7FE0EC1FF0EC0FFCEC03FE913800FF80157F151F150FED0200212A7BAD2C>I<
007FB612F0B712F8A36C15F0CAFCA8007FB612F0B712F8A36C15F025127DA12C>I<1220
12F87EB4FC7FEA3FE0EA1FF8EA07FC6CB4FCC67FEB3FE06D7EEB07FC6D7E903800FF80EC
7FE0EC1FF0EC0FFCEC03FE913800FF80157FA215FF913803FE00EC0FFCEC1FF0EC7FE0EC
FF80D903FEC7FC495AEB1FF0495AEBFF80000390C8FCEA07FCEA1FF8EA3FE0EAFF8090C9
FC12FC5A1220212A7BAD2C>I<14FE497EA4497FA214EFA2130781A214C7A2010F7FA314
C390381F83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A29038F8003FA3
4848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27347EB32C>65
D<02FF13700107EBE0F84913F9013F13FD4913FFEBFF813901FE007F4848131FD807F013
0F1507485A491303485A150148C7FCA25A007EEC00F01600A212FE5AAB7E127EA3007F15
F06CEC01F8A26C7EA26C6C13036D14F06C6C130716E0D803FC131F6C6CEB3FC03A00FF81
FF806DB512006D5B010F5B6D13F00100138025357DB32C>67 D<007FB5FCB612C015F081
6C803907E003FEEC00FFED7F80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FC
ACED01F8A3150316F0A2150716E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A
5D15C06C91C7FC26337EB22C>I<007FB612F0B712F8A37E3903F00001A7ED00F01600A4
EC01E04A7EA490B5FCA5EBF003A46E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC
27337EB22C>I<007FB612F8B712FCA37ED803F0C7FCA716781600A515F04A7EA490B5FC
A5EBF001A46E5A92C7FCAD387FFFE0B5FC805C7E26337EB22C>I<903901FC038090390F
FF87C04913EF017F13FF90B6FC4813073803FC01497E4848137F4848133F49131F121F5B
003F140F90C7FCA2127EED078092C7FCA212FE5AA8913803FFF84A13FCA27E007E6D13F8
9138000FC0A36C141FA27F121F6D133F120F6D137F6C7E6C6C13FF6D5A3801FF076C90B5
FC6D13EF011F13CF6DEB0780D901FCC7FC26357DB32C>I<D87FFEEBFFFCB54813FEA36C
486C13FCD807E0EB0FC0B190B6FCA59038E0000FB3D87FFEEBFFFCB54813FEA36C486C13
FC27337EB22C>I<007FB512F8B612FCA36C14F839000FC000B3B3A5007FB512F8B612FC
A36C14F81E3379B22C>I<387FFFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6
FCB7FCA36C15F025337DB22C>76 D<D87FE0EB0FFC486CEB1FFEA26D133F007F15FC000F
15E001BC137BA4019E13F3A3EB9F01A2018F13E3A21483A2018713C314C7A201831383A2
14EFA201811303A214FFEB80FEA3147C14381400ACD87FF0EB1FFC486CEB3FFEA36C48EB
1FFC27337EB22C>I<D87FF0EB7FFC486CEBFFFEA27F007FEC7FFCD807FEEB07C013DEA2
13DF13CFA2148013C714C0A213C314E0A213C114F0A213C014F8A2147CA3143EA2141E14
1FA2140F1587A2140715C7A2140315E71401A215F71400A215FFD87FFC137F487E153FA2
6C48EB1F8027337EB22C>I<EB7FFF0003B512E0000F14F848804880EBE003EB800048C7
127FA2007E80A300FE158048141FB3A86C143FA2007E1500A3007F5CA26C6C13FEEBF007
90B5FC6C5C6C5C000314E0C66C90C7FC21357BB32C>I<007FB512C0B612F88115FF6C15
802603F00013C0153FED0FE0ED07F0A2150316F81501A6150316F01507A2ED0FE0ED3FC0
15FF90B61280160015FC5D15C001F0C8FCB0387FFF80B57EA36C5B25337EB22C>I<387F
FFFCB67E15E015F86C803907E007FE1401EC007F6F7E151FA26F7EA64B5AA2153F4BC7FC
EC01FE140790B55A5D15E081819038E007FCEC01FE1400157F81A8160FEE1F80A5D87FFE
EB1FBFB5ECFF00815E6C486D5AC8EA01F029347EB22C>82 D<90381FF80790B5EA0F8048
14CF000714FF5A381FF01F383FC003497E48C7FC007E147F00FE143F5A151FA46CEC0F00
007E91C7FC127F7FEA3FE0EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038
007FFEEC07FF02001380153FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F80
6D133F01E0EB7F009038FE01FF90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB3
2C>I<007FB612FCB712FEA43AFC007E007EA70078153CC71400B3AF90383FFFFCA2497F
6D5BA227337EB22C>I<3B7FFF803FFFC0B56C4813E0A36C496C13C03B03F00001F800B3
AF6D130300015DA26D130700005D6D130F017F495A6D6C485AECE0FF6DB5C7FC6D5B0103
13F86D5B9038003F802B3480B22C>I<D87FF0EB07FF486C491380A36C486D1300001FC8
127CA46C6C5CA76C6C495AA4143E147FA33A03E0FF83E0A214F7A201E113C3A3000101E3
5BA201F113C701F313E7A314C1A200005DA201F713F71480A301FF13FF017F91C7FC4A7E
A4013E133E29347FB22C>87 D<3A3FFF03FFE0484913F0148714076C6D13E03A01F800FE
007F0000495A13FE017E5BEB7F03013F5B1487011F5B14CF010F5B14FF6D5BA26D90C7FC
A26D5AA26D5AA2497EA2497EA2497F81EB0FCF81EB1FC7EC87F0EB3F83EC03F8EB7F0101
7E7FEBFE00497F0001147E49137F000380491480151FD87FFEEBFFFC6D5AB514FE6C15FC
497E27337EB22C>I<007FB6FCB71280A46C150021067B7D2C>95
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138
801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13
036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027
337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E
4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F0039
07FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC
003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC
007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CEC
BFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E
48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075A
B7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001
FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<ED03F89039
07F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001
FC1CD9C0001300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D
481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F0
3A3FC0001FF848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F
801303D83FE0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028
387EA42C>103 D<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC
9138F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E01400
29337FB22C>I<1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2
EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>I<140EEC3F80A2EC7FC0A3EC3F
80A2EC0E0091C7FCA748B512804814C0A37EC7120FB3B3A2141F003C1480007E133FB414
005CEB01FEEBFFFC6C5B5C001F5B000790C7FC1A467CB32C>I<EA7FE0487EA3127F1201
AA91381FFFF04A13F8A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEB
F1FC13F3EBF7FE90B5FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E8116
80151F3A7FFFC0FFFCB500E113FEA36C01C013FC27337EB22C>I<387FFFE0B57EA37EEA
0003B3B3A5007FB61280B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF8
3AFFDFFE3FFCD87FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013
C0A301C01380B33B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D24
81A32C>I<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F
02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB
07FCEB1FFF017F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F15
8090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6C
EB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C
>I<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE09138
0007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0
150F9138801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0
B57EA36C5B27367FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F
7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26
247EA32C>114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36C
EB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC
00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000
F8148039701FFC0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FC
B1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0
232E7EAD2C>I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F
3900FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C>I<3A7FFF01FFFCB5
14FE148314016C15FC3A03E0000F80A26D131F00011500A26D5B0000143EA26D137E017C
137CA2017E13FC013E5BA2EB3F01011F5BA21483010F5BA214C701075BA214EF01035BA2
14FF6D90C7FCA26D5A147C27247EA32C>I<3A3FFF03FFF048018713F8A36C010313F03A
00FC007E005D90387E01F8013F5BEB1F83EC87E090380FCFC0903807EF80EB03FF6D90C7
FC5C6D5A147C14FE130180903803EF80903807CFC0EB0FC7EC83E090381F01F0013F7FEB
7E00017C137C49137E0001803A7FFF01FFFC1483B514FE6C15FC140127247EA32C>120
D<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D14001200
5D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03
E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C01003F5B
EA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc ectt0800 8 20
/Fc 20 117 df<123E127FEAFF80A5EA7F00123E0909738823>46
D<90380FE0E090383FF9F0EBFFFD4813FF5A3807FC3F380FF00F381FC007A2383F800313
00481301127EA2007CEB00E000FC1400A25AA97EA2127C007E14E0EC01F0127F7EEB8003
EA1FC0EC07E0380FF00F3907FC1FC06CB512806C14006C5BEB3FF8EB0FE01C2B7DA923>
67 D<007FB512FCB612FEA37E3907C0003EA5151C1500A3140E141FA390B5FCA5EBC01F
A3140E91C7FCA9EA7FFEB5FCA36C5A1F297FA823>70 D<3803FFF0000F13FC487F487FA2
397F807F80387E001F007C130FA200FC14C0481307B3A46C130FA2007C1480A2007E131F
387F807F6CB51200A26C5B6C5B000313F01A2B7CA923>79 D<007FB512F8B612FCA439F8
07C07CA50070143800001400B3A7EBFFFE487FA36C5B1E297EA823>84
D<39FFC003FFA5003CC7123CA2003E147C001E1478A8390F07E0F0EB0FF0A5EB1E78A200
0714E0A3EB9C39EBBC3DA4EBB81D000314C0A3EBF81FEBF00FA300011480EBE007202A7F
A823>87 D<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF13
7F0003B5FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E
000713C73901FE01FC1F1D7D9C23>97 D<B47E7FA41207A7EBC1FCEBC7FF01DF13C090B5
12E015F09038FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F1401
9038F803F89038FE0FF090B5FC15E001DF138001CF1300380383F81F297FA823>I<EB3F
F0EBFFFC000313FF5A5A381FE07FEA3F80387F003E007E90C7FCA25AA25AA57EA2007E13
07007FEB0F80141FEA3FC0391FF07F006CB5FC6C5B6C5BC613F0EB3FC0191D7B9C23>I<
ECFF8015C0A41407A7EB7F873801FFE74813F7000F13FF5A13E0383F803F387F001F007E
130FA2481307A25AA56C130FA2127E141F007F133F383F807FEBE0FF6CB512FE7E000313
F76C13C738007F031F297EA823>I<EB3FC0EBFFF800037F4813FF481480381FF07F393F
801FC0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C0007FEB03E0383F
800713E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C23>I<B47E7F
A41207A7EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0EBF807EBF00313E0A313C0AD
39FFFE1FFF5CA38020297FA823>104 D<14E0EB03F8A5EB00E01400A63803FFF04813F8
A37EC7FCB3AB13011238387C03F012FEEB0FE0B5FC14C06C13006C5AEA0FF815397DA923
>106 D<EA7F80487EA3127F1203A7ECFFFC13C1A313C0EC3F00147E5CEBC1F8EBC3F0EB
C7E0EBCFC0EBDFE0EBFFF0A2EBFDF8EBF8FCEBF07EEBE03E497E1580EC0FC01407EC03E0
397FFE0FFFB55AA36C487E20297FA823>I<EA7FFEB5FCA37EEA001FB3AD007FB512C0B6
12E0A36C14C01B297CA823>I<397E1F01F039FF7FC7FC9038FFEFFE14FF6C80390FE1FE
1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13E0241D
819C23>I<133F3801FFE0487F487F487F381FC0FE383F807F383E001F007E1480007C13
0F00FC14C0481307A66C130FA2007C1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B
6C5B6C5BD8003FC7FC1A1D7C9C23>111 D<38FF81FCEBC7FF01DF13C090B512E015F039
07FE0FF8EBF8039038F001FCEBE000A249137EA2153EA5157E7F15FC7F14019038F803F8
9038FE0FF090B5FC15E001DF138001CF1300EBC3F801C0C7FCAAEAFFFEA51F2C7F9C23>
I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8ECC078EC800091C7FC5BA25BA35B
AA387FFFFCB57EA36C5B1E1D7E9C23>114 D<137013F8A7007FB51280B612C0A36C1480
D800F8C7FCACEC01C0EC03E0A3EBFC07140F9038FE1FC0EB7FFF158090383FFE00EB0FFC
EB07F01B257EA423>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd ecbx1200 12 56
/Fd 56 122 df<B612F8A91D097F9A25>45 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA
7FFCEA3FF8EA1FF0EA07C00F0F788E1F>I<EC3FF849B5FC010F14E0013F14F890397FF0
1FFC9039FFC007FE4890380001FF48486D1380000716C049147F000F16E049143F001F16
F0A2003F16F8A249141F007F16FCA600FF16FEB3A3007F16FCA56C6CEC3FF8A3001F16F0
A2000F16E06D147F000716C06D14FF6C6C4913806C6D4813006C6D485A90397FF01FFC6D
B55A010F14E0010314809026003FF8C7FC2F427CC038>48 D<EC03C01407141F147FEB03
FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>I<ECFFE0010F13FE013F6D7E
90B612E0000315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C0
15E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B
1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE49
5A494814F8D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8
FC17C0A42D417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFE
D807E06D7E81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A
4B5A4B5A4A5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80
816F13C017E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A4949
13C05BD83F80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7
FC010113E02D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E714
0715C7EC0F87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5B
A25B485A485A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A5
31417DC038>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E0
92C8FC01C0C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC
6D7E01F06D13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7F
A317F05B5D6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807
FEEBFFFC6CB612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F
13F0027F13FC49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE0
48495A5A1400485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91
381FFF8000FF017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C
13C05B6F13E0A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15
C06D4913806C018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC90
38003FF02D427BC038>I<121E121F13FC90B712FEA45A17FC17F817F017E017C0A24816
80007EC8EA3F00007C157E5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5D
A24A5A14035D14074A5AA2141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A
6D5A6D5A2F447AC238>I<EC7FF00103B5FC010F14C0013F14F090397F801FFC3A01FC00
03FE48486D7E497F4848EC7F80163F484815C0A2001F151FA27FA27F7F01FE143F6D1580
02C0137F02F014006C01FC5B6E485A6C9038FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14
C06D80010F14F882013F8090B7FC48013F14802607FC0F14C0260FF80314E04848C6FC49
6D13F0003F141F48481307496D13F8150000FF157F90C8123F161F160FA21607A36D15F0
127F160F6D15E06C6C141F6DEC3FC06C6CEC7F80D80FFE903801FF003A07FFC00FFE6C90
B55AC615F0013F14C0010F91C7FC010013F02D427BC038>I<EC7FF0903807FFFE011F6D
7E017F14E09039FFE03FF0489038800FF848496C7E48488048486D7E001F80003F1680A2
484815C08117E0A212FF17F0A617F8A45D127FA3003F5CA26C7E5D6C6C5B12076C6C131E
6CEBC07C6CEBFFF8013F5B010F01C013F00101130090C8FCA217E05DA2EA03C0D80FF015
C0487E486C491380A217004B5A150F5E49495A6C48495A01C0EBFFE0260FF0035B6CB65A
6C4AC7FC6C14F86C6C13E0D907FEC8FC2D427BC038>I<EE1F80A24C7EA24C7EA34C7EA2
4B7FA34B7FA24B7FA34B7F169F031F80161F82033F80ED3E07037E80157C8203FC804B7E
02018115F0820203814B137F0207815D173F020F814B7F021F8292C77EA24A82023E8002
7E82027FB7FCA291B87EA2498302F0C8FCA20103834A157F0107834A153FA24948828401
1F8491C97E4984133E017E82B6020FB612F0A54C457CC455>65 D<DCFFF01470031F01FF
14F04AB6EAE0010207EDF803023FEDFE0791B539E001FF0F4949C7EA3F9F010701F0EC0F
FF4901C0804990C87E4948814948814948167F4849163F4849161F5A4A160F485B190748
90CAFC19035A5BA2007F1801A34994C7FC12FFAE127F7F1AF0A2123FA27F6C18011AE06C
7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A
6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80023F90B6C7FC020715FC020115F0DA
001F1480030001F8C8FC44467AC451>67 D<B9FC18F018FE727E19E026003FFEC7001F13
F805017F9438003FFF060F7F727F727F727F84737E737EA2737EA2737EA21B80A2851BC0
A51BE0AD1BC0A51B8061A21B006162193F624F5A19FF624E5B06075B4E5B063F90C7FC4D
B45A050F13F8BA5A19C04EC8FC18F095C9FC4B447CC356>I<BA12F8A485D8001F90C712
01EF003F180F180318011800A2197E193EA3191EA21778A285A405F890C7FCA316011603
161F92B5FCA5ED001F160316011600A2F101E01778A2F103C0A494C7FC1907A21A80A219
0FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443447DC34A>I<BA1280A419C0
26003FFEC7121F1701EF007F183F181F180F180719E01803A31801A3EE01E0F000F0A419
001603A31607160F167F91B6FCA59138FE007F160F16071603A31601A693C9FCAFB712F0
A53C447CC346>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C8FC12FF
AD057FB612F0127F7FA3003FDC0001EBF000A27F7EA26C7FA26C7F807E6C7F6C7F6D7E6D
6C5D6D6C7E6D6D5C6D01F05C010101FE143F6D903AFFF001FF9F023F90B6120F0207EDFC
030201EDF000DA001F02C01330030001FCC9FC4C467AC458>I<B7D88003B612FEA52600
3FFEC9EBF800B3A791B9FCA54AC9FCB3AAB7D88003B612FEA54F447CC358>I<B712E0A5
D8001F90C7FCB3B3B3A4B712E0A523447DC32A>I<B712F0A526003FFECAFCB3B1F00780
A4180F1900A460A360A2187EA218FE170117031707171F177FEE03FFB95AA539447CC343
>76 D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE
079FA26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E
6DEC03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D
485AA26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5A
A2705BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>I<B64BB512FE
8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E7F6E7F6E7F82806E7F6E7F
6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F707F8482707F707F717E7113
807113C019E0837113F07113F87113FC7113FE19FF847213F884848484A28484197F193F
191FA2190F1907B61603190119001A78A24F447CC358>I<923807FFC092B512FE0207EC
FFC0021F15F091267FFE0013FC902601FFF0EB1FFF01070180010313C04990C76C7FD91F
FC6E6C7E49486F7E49486F7E01FF8348496F7E48496F1380A248496F13C0A24890C96C13
E0A24819F04982003F19F8A3007F19FC49177FA400FF19FEAD007F19FC6D17FFA3003F19
F8A26D5E6C19F0A26E5D6C19E0A26C6D4B13C06C19806E5D6C6D4B13006C6D4B5A6D6C4B
5A6D6C4B5A6D6C4A5B6D01C001075B6D01F0011F5B010101FE90B5C7FC6D90B65A023F15
F8020715C002004AC8FC030713C047467AC454>I<B9FC18F018FE727E19E0D8001F90C7
000F7F05017F716C7E727E727E721380A21AC084A21AE0A91AC0A24E1380A21A00604E5A
4E5A4D485A050F5B92B712C096C7FC18FC18C092CBFCB3A7B712E0A543447DC34D>I<B8
12F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA28684A2
86A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E018F8
92C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141EB700
E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<003FBA12E0A59026FE000FEB
8003D87FE09338003FF049171F90C71607A2007E1803007C1801A300781800A400F819F8
481978A5C81700B3B3A20107B8FCA545437CC24E>I<B76C010FB512F8A526003FFEC938
03E000B3B3A9011F17076280190F6D606F151F6D95C7FC6D6D5D197E6D6D5D6D6D1403DA
7FFC4A5A6EB4EC3FF0020F9039F003FFE06E90B61280020193C8FC6E6C14FC030F14E092
26007FFEC9FC4D457CC356>I<B792B6FCA526003FFECAEAFC00806D606F15016D608119
036D606F15076D606F150F6D6081191F6D6D93C7FC61027F163E6F157E023F167C8119FC
6E6D5C18016E5E7013036E5E8218076E6D5C180F6E5E70131F6E93C8FC705B037F143E82
187E033F147C7013FC6F5C17816F5C17C117C36F5C17E76F5C17FF6F5CA36F91C9FCA270
5AA2705AA3705AA2705AA2705AA250457EC355>I<B600FE017FB691B512FEA526007FFC
C8D83FFEC9EA7C006E82013F701778807415F86D705F6F7014016D705FA26F7014036D64
814E6D14076D646F70140F6D041E94C7FCA26F023E6D5C6DDC3C7F151E81027F037C6D5C
F0783F6F70147C023F4B6C1578A26F01016F13F86E4B6C5D16806E02036F485A4E7E04C0
EEE0036E4A486C5DA2DCE00FEDF0076E4B6C5D16F06E4A6F48C8FC051E7F04F8705A6E4A
027F131EA2DCFC7CEDFE3E037F0178023F133C04FE16FF033F01F85E4D8004FF17F86F49
6E5BA36F496E5BA26F604D80A26F90C86C5BA36F486F90C9FCA26F48167EA30478163C6F
457EC374>I<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D
7E486C6D7EA26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F190
38FFFC01000313E0481380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D8
3FFE013EEBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD
36>97 D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139
FF000FFE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2
177F18F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB5
12F0D9F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F
14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F
6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6D
EB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F
7CAD32>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF90
39FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA2
12FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C90
38F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF801
03B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D138048
5A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27F
A2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397F
FE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EDFF80020F13E0
027F13F049B512F849EB8FFC90390FFE0FFE90381FFC1F14F8133FEB7FF0A2ED0FFCEBFF
E0ED03F0ED00C01600ABB612F8A5C601E0C7FCB3B0007FEBFFE0A527467DC522>I<DAFF
E0137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0F
FC4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F
5D6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFC
A47F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC0
14074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC
3FF83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>
I<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF
801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>I<
137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0
EA7FFFA512037EB3AFB6FCA518467CC520>I<EC03E0EC0FF8EC1FFCEC3FFEA2EC7FFFA5
EC3FFEA2EC1FFCEC0FF8EC03E091C7FCAAEC01FF0103B5FCA5EB000F80B3B3A7EA1F80EA
3FC0EA7FE0EAFFF0EC0FFEA215FC141F01E013F8007FEB3FF0393FC0FFE06CB512806C14
00000313FCC613C0205A86C522>I<EB7FC0B5FCA512037EB293387FFFE0A593380FE000
4C5A4CC7FC167E5EED03F8ED07E04B5A4B5A037FC8FC15FEECC1FCECC3FE14C7ECDFFF91
B57E82A202F97F02E17F02C07FEC807F6F7E826F7E816F7F836F7F816F7F83707E163FB6
0003B512F8A535457DC43B>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>I<
90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001B512E002816E4880913D87
F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF3E007F6C019E6D013C130F
02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003B512FEA5572D7CAC5E>I<
90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F000390399F
000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>I<EC1FFC
49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA3FE00007
8248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A46C6C4A5A
A2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7FC6DB55A
010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397FC00FF8B590B57E02C314E0
02CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C496D13804A15C04A6D13E05C
7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E15C06E5B6E4913806E4913
006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED1FF092C9FCADB67EA53640
7DAC3E>I<DA3FE0131E902603FFFC133E010F01FF137E013F1480903AFFF80FE0FE4890
38E003F148EBC0014890388000FB4890C7127F49143F001F151F485A160F5B127FA3485A
AC6C7EA46C7EA26C6C141F163F6C6C147F6C15FF6C6D5A6C9038E003EF6C9038F01FCF6D
B5128F011FEBFE0F010313F89038007FC091C7FCAD0307B512FCA536407CAC3B>I<9038
7F807FB53881FFE0028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0
ED0FFC9138E007F8ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>I<90391FFC038090
B51287000314FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F
01E090C7FC13FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB
003F020313E0140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F
009038F803FE90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303
A41307A2130FA2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01
E0A9150302F013C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B903800
3FE023407EBE2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E
6E491380017FD901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00
372E7CAC3E>I<B6903803FFFCA5000101E09038003E006C163C80017F5D8017F8013F5D
6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7FC15C05E6DEBE01E163E6D143C
EDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5A
A21578362C7EAB3B>I<B5D8FE1FB539801FFFF0A500019027C0003FE0C7EA7C00711478
6E17F86C6F6C5C6E1601017F6E6C5CA26E011F1403013F6F5C6E013F1407011F6F5CA26E
0179140F010F048090C7FC6E01F95C6D02F0EBC01E15806D902681E07F5B18E003C3157C
6D9139C03FF07815E76DDA801F5B18F803FF14F96E9039000FFDE018FF6E486D5BA36E48
6D5BA26E486D90C8FCA24B7F02075DA26E48147C4B143C4C2C7EAB51>I<B500FE90383F
FFF0A5C601F0903803E0006D6C495A6D6C495A011F4AC7FC6E5B6D6C137E6DEB807C6D6D
5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A7F8291381F
3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49C76C7E013E6E
7E017E141FB500E090B512FCA5362C7EAB3B>I<B6903803FFFCA5000101E09038003E00
6C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D5DED800F6D92C7
FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD021F5B15FF6E5BA3
6E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F805B387FC007D8
FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CAFCEA01FC36407E
AB3B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe ecrm1000 10 77
/Fe 77 123 df<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F
8007FE1FE090393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A328
01F80003F0C7FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>27
D<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007017E497EA25B
A2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B5
12C0A32A3B7FBA2E>I<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313
005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E131E
5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA312
1EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E014
60135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C13
3E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E
133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<EB0380
497EA7397803803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF80
3900FFFE00EB3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F83
83FC39FE0380FE00FC147E0078143C390007C000A76D5A1F247BBD2A>I<121C127FEAFF
80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817
>44 D<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<1506A2
150E150CA2151C151815381530A215701560A215E015C0A214011580A2140315005C1406
A2140E140CA2141C1418A214381430A21470146014E05CA213015CA2130391C7FCA25B13
06A2130E130C131C1318A213381330A213701360A213E05BA212015B120390C8FCA25A12
06A2120E120CA2121C1218A21238123012701260A212E05AA21F537BBD2A>I<EB03F8EB
1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA248C77EA2481580
A3007EEC0FC0A500FE15E0B3007E15C0A4007F141F6C1580A36C1500A26C6C133EA26C6C
5B6C6C5BEBF0013900F803E090387E0FC0D91FFFC7FCEB03F823397DB62A>I<EB01C013
031307131F13FFB5FCA2131F1200B3B3A7497E007FB512F0A31C3779B62A>I<EB0FF0EB
7FFE48B57E3903E03FE0390F000FF0001E6D7E001C6D7E486D7E5A6E7E126012FE6CEC7F
807FA56CC7FC121CC8FCEDFF00A25D14015D14035D4A5A4A5A5D4A5A4AC7FC147E5C495A
14E0495A495A49C8FC011EEB01805B5B49130348481400485A485A90C75A48B6FC5A5A48
5CB6FCA321377CB62A>I<EB07F8EB3FFF90B512C03901F80FF03903C007F848486C7E39
0E0001FEEA0F80391FE000FF7FA56C5A6C5AC7485AA25D14035D4A5A5DEC0F80027FC7FC
EB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80
A2487EA316C0157F491480007EC7FC0070ECFF006C495A121E390F8003F83907F00FF000
01B512C06C6C90C7FCEB0FF823397DB62A>I<1538A2157815F8A2140114031407A2140F
141F141B14331473146314C313011483EB030313071306130C131C131813301370136013
C01201EA038013005A120E120C5A123812305A12E0B712F8A3C73803F800AA4A7E0103B5
12F8A325387EB72A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC
38067FE090C9FCAAEB07F8EB1FFE9038780F809038E007E03907C003F0496C7E13000006
6D7E81C8FC8181A21680A4121C127F5A7FA390C713005D12FC00605C12704A5A6C5C6C13
03001E495A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE021397CB62A>I<EC3FC0
903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485A1207
5B000FEC3F0049131E001F91C7FC5B123FA3127F90C9FCEB01FC903807FF8039FF1E07E0
90383801F0496C7E01607F01E0137E497F16805BED1FC0A390C713E0A57EA47F123F16C0
A2001FEC3F807F000F15006D5B000714FE6C6C5B6C6C485A3900FE07F090387FFFC0011F
90C7FCEB03FC23397DB62A>I<12301238123E003FB612E0A316C05A168016000070C712
060060140E5D5D00E014304814705D5DC712014A5A4AC7FC1406140E5CA25C1478147014
F05C1301A213035C1307A2130FA3131F5CA2133FA5137FA96DC8FC131E233A7BB72A>I<
EB03F8EB1FFF017F13C09038FC07F03901E001F83903C0007C4848133C90C7123E48141E
000E141F001E80A3121FA26D5B6D131E7FD80FF85B6D137C01FF13786C6D5A6CEBE3E0EC
F780C601FFC7FC6D5A6D6C7E010F13E0013F7F01F97F3901E07FFE48486C7E380F800F48
486C1380001E010113C0487F007C143F0078EC1FE0150F00F81407481403A21501A36C15
C0A200781403007C15806C14076CEC0F006C6C131ED807E0137C3903F803F0C6B55A013F
1380D907FCC7FC23397DB62A>I<EB03F8EB1FFF017F13C03901FC07E048486C7E3907E0
01F8000F6D7E4848137E5B003F80A248C71380A25AED1FC0A516E0A56C143FA36C7E157F
121F6C6C13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FCA2
153F1680A216005D120F486C137E486C5BA24A5A4A5A49485A381F000F001CEB1F80260F
807FC7FC3807FFFE000113F838003FC023397DB62A>I<121C127FEAFF80A5EA7F00121C
C7FCB2121C127FEAFF80A5EA7F00121C092479A317>I<121C127FEAFF80A5EA7F00121C
C7FCB2121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A
5A5A12600A3479A317>I<EF01C0EF0780EF1E0017F8EE03E0040FC7FC163C16F0ED03C0
030FC8FC153CEC01F0EC07C0021EC9FC1478EB01E0EB0780011ECAFC13F8EA03E0000FCB
FC123C12F0A2123C120FEA03E0EA00F8131EEB0780EB01E0EB0078141EEC07C0EC01F0EC
003C150FED03C0ED00F0163C160FEE03E0EE00F8171EEF0780EF01C0322E79AB41>I<00
7FB812F8B912FCCCFCB0B912FC6C17F836147B9E41>I<12E01278121EEA07C0EA01F0EA
003C130FEB03C0EB00F0143C140FEC03E0EC00F8151EED0780ED01E0ED0078161EEE07C0
EE01F0EE003C170FEF03C0A2EF0F00173CEE01F0EE07C0041EC7FC1678ED01E0ED078003
1EC8FC15F8EC03E0020FC9FC143C14F0EB03C0010FCAFC133CEA01F0EA07C0001ECBFC12
7812E0322E79AB41>I<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F000301303
007014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00
147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010EC7
FC1E3B7CBA27>I<EC03FF021F13E09138FC00FCD901E0131ED90780EB0780011EC7EA01
E00138EC00704981498148488148488190C97E48D901FC1480000ED907FFEB01C0000C90
391F03C000001C90267E00E013E000184901701360263801F86D13700030496D13300103
EC0FE0267007E00107133800601718495AA200E0171C484848150CAA6C6C7E1260A26D6C
151C00701718263003F0130F0101141F00386D013F1338261800FC01771330001C017E90
38E3F070000C90261F03C113E0000E903A07FF00FFC06CD901FCEB3F006C90CAFC7F6C7E
6C7E13706D167C011EED03FCD90780EC1FF0D901E0ECFF80D900FC90383FFC00021FB512
80020301E0C7FC363C7BBA41>I<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063F
A2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D9
01807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA349
6E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>I<B712E0
16FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A
4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA218
80177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832
397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0F
D90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA2
48481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F
160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB
03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>
I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF
3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F
80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<
B812FEA3000190388000076C90C8FC173F838383A383A31880170116C0A394C7FCA31501
A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380
A21707A2170F173F177F486D903807FF00B9FCA333397EB838>I<B812F8A30001903880
001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A215
07151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<
DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787D90FF0EB03CF4948EB
00EF4948147F4948143F49C8121F485A4848150F48481507A248481503A2485A1701123F
5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A2123F7F121FA26C7EA26C
7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D903FEEB0783903A00FF
C03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B648B512FEA300019026
80000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337397DB8
3E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<013FB512E0A39039
001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070131F6C5C6C495A
6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B612E0A3000101C0C8FC6C90C9
FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397D
B834>76 D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F0
1563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C13
18A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED
3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED0180
45397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8
EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7F
C016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6
EE0FFEA216071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637
397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F
80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A200
1F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0
A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A
6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8
FC363D7BBA41>I<B712C016FC16FF0001D9800013C06C90C7EA1FE0707EEE03F883707E
A2707EA21880A71800A24C5AA24C5A5FEE0FF04C5AEEFF8091B548C7FC16F091CAFCB3A5
487FB6FCA331397EB838>I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F80
49486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA24848157F0007178049153F000F
17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507A200FF17FCAC007F17F8A26D
150FA2003F17F0A26C6CED1FE0A36C6CED3FC00007027C14804AB4FC3C03F80383807F00
3B01FC0701C0FEEC0E002600FE0CEBE1FC017FEC63F8D93F8CEB77F0D91FCCEB3FE0D907
EE14806DB449C7FC0100D981FC130CEC1FFF0203131C91C7001E131C161F183CEF807CEF
C0F8EE0FFFA318F08218E07013C07013809338007E00364B7BBA41>I<B612FEEDFFE016
F8000190388007FE6C90C76C7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C
5AEE3F8004FFC8FCED07FC91B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83
A583A6F00180A217F8160F1803486D01071400B66D6C5A04011306933800FE0ECAEA3FFC
EF07F0393B7DB83D>I<D90FF813C090383FFE0190B512813903F807E33907E000F74848
137F4848133F48C7121F003E140F007E1407A2007C140312FC1501A36C1400A37E6D1400
6C7E7F13F86CB47E6C13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F
020713E0EC007FED3FF0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E0
6C14076C15C06C140F6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C001
90C7FC253D7CBA2E>I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F0007816
0000701770A300601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335
397DB83C>I<B6903807FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B217
0E6D150C80171C133F17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7
FC91387F807E91381FFFF8020713E09138007F80373B7DB83E>I<B500FC91387FFF80A3
0003018091380FFC006C90C8EA07E0715A6C705A6E1403017F93C7FCA280013F1506A26E
140E011F150C80010F5DA28001075DA26E147001031560A26D6C5CA2806D4A5AA2ED8003
027F91C8FCA291383FC006A215E0021F5BA2EDF01C020F1318A26E6C5AA215FC02035BA2
EDFEE002015BA26E6C5AA36FC9FCA3153EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001
B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F
6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5B
EE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC
9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1F
E6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A202
0093C8FC4B80503B7EB855>I<007FB590383FFFFCA3C601F801071380D97FE0D903FCC7
FC013FEC01F06D6C5C5F6D6C5C6D6C13034CC8FC6D6C1306160E6D6C5B6DEB8018163891
387FC0306E6C5A16E06E6C5A91380FF18015FB6EB4C9FC5D14036E7EA26E7F6F7EA24B7E
15DF9138019FF09138038FF8150F91380607FC91380E03FE140C4A6C7EEC38000230804A
6D7E14E04A6D7E49486D7E130391C76C7E01066E7E130E010C6E7E011C1401013C8101FE
822607FF80010713E0B500E0013FEBFF80A339397EB83E>I<007FB81280B912C0A26C17
803204797041>95 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E
7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90
C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FF
F00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038
F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2
167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F
00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E039
01F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A212
7E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E0
39007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8
EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC
5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801
CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC039
01F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FE
A3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F0
13386C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090
380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FC
B3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F70
7C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C
6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C
14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401
007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF00107
90C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F80
9039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E
>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0
A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA31307
1301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F81549
84B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A
4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E
7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012
FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB
7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC
49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445
>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7E
A25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03
E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC
03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB
3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01F
E000FFEB7FF89038F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F8
49130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614
C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>
I<D903F813C090381FFE0190387E07819038FC01C33903F000E300071477484813374913
3F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C
13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA4
2C>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E0
9038FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF
381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00
037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4
131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F812011203
1207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFE
EB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3
151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029
267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A2
6C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA29038
03F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3
260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6C
EC8006156FA2017E9038EFC00C15C7171CD93F01EBE01815830281EBF038D91F83143015
0102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA20101
92C7FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF0
0001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6D
B4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E01
1C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B5
38803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA213
7F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5A
A2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C
6C5AEA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038
EB0FE012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495A
A290387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48
EB03FC90B5FCA21F247EA325>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff ecbx1000 10 55
/Ff 55 122 df<EC07F0EC3FFC4A7E903801FE1F49487E49486C7E14F0010F8090381FE0
03A3133FA215075EA26E48C9FC5D151E5D5D6D6C5ADAF9E00103B5FCECFBC0ECFF8092C7
FC6D489138001F801900181E6D6C153E606F1478496D14F8494B5A013D6D5C01786D1303
D801F84B5A48486C6C5C00076E130F000F6D6C49C7FC261FE01F143E003F6E133C007F6D
EB807C6E6D5A00FF6DEBE1F06EEBF3E06EEBF7C06FB45A6F90C8FC6D6D48140F6F7E007F
6E13C06D6D6D131E003F020F6D133E6C6C017F01FC137C3D0FFF03FF3FFF03FC6C9026FF
FC0FEBFFF86CDAF00314E0C69126C0007F13C0D90FFCC73807FE00403C7CBA4A>38
D<141C143C14F8EB01F0EB03E01307EB0FC0EB1F8014005B137E13FE5B12015B1203A248
5AA2120F5B121FA25B123FA4485AA512FFB1127FA56C7EA4121F7FA2120F7F1207A26C7E
A212017F12007F137E7F7F1480EB0FC0EB07E01303EB01F0EB00F8143C141C165377BD25
>40 D<12E07E127C7E7E7F6C7E6C7E12037F6C7E7F12007F137E137FA2EB3F80A214C013
1F14E0A2130F14F0A4EB07F8A514FCB114F8A5EB0FF0A414E0131FA214C0133F1480A2EB
7F00A2137E13FE5B12015B485A5B1207485A485A90C7FC123E5A12F05A16537BBD25>I<
EA0F80EA3FE0EA7FF0A2EAFFF8A213FCA3127FA2123FEA0F9CEA001C133C1338A3137813
7013F0EA01E0A2EA03C0EA0780EA0F005A121C12180E1D798C1B>44
D<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>46
D<141E143E14FE1307137FB5FCA3138FEA000FB3B3A5007FB61280A4213679B530>49
D<EB0FFE90387FFFC048B512F0000714FC390FE03FFF261F800F1380263F000313C0D87F
8014E0EBE00100FF6D13F07FA2ED7FF8A46C5A6C5A0006C7FCC8FCEDFFF0A216E05C16C0
4A138016004A5A4A5AEC1FF05D4A5A4AC7FC14FE495AD903F01378495A495A495A49C712
F8017C14F05B49130148B6FC5A5A5A5A5A4815E0B7FCA425367BB530>I<EB03FF011F13
F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF86D14F0487EA66C48
14E06C5A6C485AC714C04A138016004A5A4A5AEC3FF090380FFFC05D15F090380007FE91
3801FF806E13C016E0ED7FF016F8ED3FFCA216FEEA1FC0487E487E487EA416FCA249137F
007F15F801C0EBFFF06C5A6C6C4813E0260FFC0713806CB61200000114FC6C6C13F00107
90C7FC27377CB530>I<ED07C0150FA2151F153F157F15FF5CA25C5C5C5C143E143C5C5C
1301495A5C495A495A5B133E5B13785B485A1203485A5B48C7FC121E5A127C5AB81280A4
C70001EBC000AA0103B61280A429367DB530>I<001C15C0D81F80130701F8137F90B612
80A216005D5D15F05D15804AC7FC14F090C9FCA7EB03FE90381FFFE0017F13F89038FE07
FC9038F003FFD9C0011380496C13C090C7FC000E15E0C8127F16F0A216F8A3121FEA3FC0
487E12FF7FA316F05B15FFD87F8014E0007EC713C0003E5B003F4913806C6C481300390F
F01FFE6CB512F8000114E06C6C1380D90FF8C7FC25377BB530>I<EC0FF8ECFFFE0103EB
FF8090390FF80FC090393FE003E090397F8001F09038FF000F48EC1FF84848133F485A12
0F5B121FA2003FEC1FF0ED0FE0484890C7FCA31408EC7FF039FFF1FFFC01F313FFD9F780
13809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA4127FA5123F16FCA26C7E
16F8000F143F6D14F0000715E06C6CEB7FC03A01FF81FF806C90B51200013F13FC010F13
F00101138027377CB530>I<123C123EEA3FE090B71280A41700485D5E5E5E5EA2007CC7
EA0FC000784A5A4BC7FC00F8147E485C5D14014A5AC7485A4A5AA24A5A143F4AC8FCA214
FEA213015C1303A21307A2130F5CA2131FA5133FA96D5A6D5A6D5A29397BB730>I<49B4
7E010F13F0013F13FC9038FE01FF3A01F8007F804848EB3FC04848EB1FE0150F484814F0
1507121FA27F7F7F6D130F01FF14E014C09138E01FC06CEBF83F9138FE7F806C9038FFFE
005D6C14F06C14FC6C14FF6D14806D14C090B612E0D803FD14F02607F07F13F848487E26
1FC00F13FC383F8003007F010013FE90C7127F151F00FE140715031501A21500A216FC7E
6C14016D14F86C6C13036DEB07F06C6CEB0FE0D80FFEEB7FC00003B61200C614FC013F13
F00103138027377CB530>I<EB03FF011F13E0017F13F83901FF01FE48486C7E4848EB7F
80484814C0001FEC3FE0485AED1FF0127F16F8A212FF16FCA416FEA5007F143FA3123F15
7F6C7E000F14FF6C6C5A3903FE03DF6CB5129F6C6C131FD91FFC13FCEB00201400A3D80F
E0EB3FF8487E486C14F0A216E0157F16C0EDFF80495A6C4848130090388007FE390FE01F
F86CB55A6C14C0C691C7FCEB1FF027377CB530>I<EB1FFE48B512E0000714F8390FE00F
FE393F0003FF4815806D7ED8FFC014C013E0A5EA7FC06C48481380EA1F00C7481300EC0F
FC4A5AEC3FE04A5A92C7FC14FE5C495AA25C495AA25CA990C9FCA7EB07C0EB1FF0497EA2
497EA56D5AA26D5AEB07C0223A7BB92D>63 D<ED03E04B7EA24B7EA34B7EA24B7EA34B7E
A292B57EA34A8015F302038015E1A202078015C0020F80ED807FA2021F80ED003F4A8002
3E131FA2027E80027C7F02FC814A7FA20101824A7F49B77EA3498202C0C7FC010F824A14
7FA2011F8291C8123F4982013E151FA2017E82017C8101FE83B500F80107B61280A4413A
7DB948>65 D<B812C017FC17FF18C028007FF000037F04007F717E717E171F84A2717EA7
4D5AA260173F4D5A4D5A4C13C0040F5B91B600FCC7FCA2EFFF8002F0C713F0EF3FF8717E
717E717E19807113C0A319E0A719C0A25F4D138019005FEF7FFE4C485AB912F018C095C7
FC17F03B397DB844>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039
FC00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F48
90C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F
1707A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A01
0701C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B
7BB945>I<B87E17F817FF18C028007FF8000713F09338007FF8EF1FFE717E0503138071
13C0A27113E0F07FF0A2F03FF8A219FC181FA219FEA419FFAC19FEA419FC183FA219F818
7F19F0F0FFE0A24D13C04D13804D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC17
8040397DB849>I<B912C0A43A007FF800039338007FE0171F170F1707A21703A21701A3
18F0EE7800A41800A216F8A21501150791B5FCA4ECF80715011500A21678A693C8FCADB7
FCA434397DB83C>70 D<B612FCA439007FF800B3B3ADB612FCA41E397DB824>73
D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FC
A431397DB839>76 D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA201
796D5DA201786D5DA26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C14
1EA36E6D5BA26E6D5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA292
3803FF1EA36F13BCA26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE07
0054397DB85B>I<B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F13
798101787F6E7E6E7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E0
6F13F06F13F88117FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF
8383A28383838383187FA2183F181F01FC160FB500FC150718031801A244397DB84B>I<
EDFFF8020FEBFF80027F14F0903A01FFC01FFC010790380007FFD91FFC010113C0D93FF0
6D6C7E49486E7E49486E7E48496E7E48834890C86C7EA248486F1380A248486F13C0A200
3F18E0A348486F13F0A400FF18F8AC007F18F06D5DA3003F18E0A26D5D001F18C0A26C6C
4B13806C18006E5C6C6D4A5A6C5F6C6D4A5A6D6C4A5AD93FFC49485A6DB401075B0107D9
C01F90C7FC010190B512FC6D6C14F0020F1480020001F8C8FC3D3B7BB948>I<B8FC17F0
17FEEFFF8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FE
A2EF3FFCA2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA4
38397DB841>I<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA271
7EA284A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0F
FF707F707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F13039439
0FFF87C071EBFF8005011400CBEA1FFC443A7DB848>82 D<D907FF130E013FEBE01E90B5
EAF83E0003ECFE7E3A07FC01FFFE390FF0001F4848130F48481303491301007F140090C8
FC167E5A163EA27F161E7F7F6D91C7FC13FC387FFFE014FEECFFF06C14FE6F7E6C816C15
F06C816C81C681133F010F801301D9000F1480EC007F030F13C01503818100F0157FA316
3FA27E17807E167F6C16007E6D14FE01E0495A01F813039039FF801FF800FC90B512E0D8
F83F5CD8F00749C7FC39E0007FF02A3B7BB935>I<003FB91280A4D9F800EBF003D87FC0
9238007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FC
B3AE010FB7FCA43B387DB742>I<B600F00103B512E0A4C601F0C83807F0006E5E017F5F
6E150FA2013F5F6E151F011F94C7FC6E5D6D163E6F147E6D167CA26F14FC6D5E6F13016D
5E6F13036D5E811707027F5D6F130F023F5D6F131F021F92C8FC815F6E143EEE807E6E14
7CEEC0FC6E5C16E016E16E5C16F36E5C16FF6F5BA36F5BA26F90C9FCA26F5AA36F5AA26F
5AA26F5A433A7EB848>86 D<B6D8E01FB500FC90383FFFFCA4000101F0C7D83FFCC8EA7E
006C71153C171F6E197C017F701578836E7014F8013F6F5E6E1801011F4B6D5CA26E1803
6D4B6D5CA26D6D496D495A173C6F170F6D037C6D91C7FCEF787F6F5F6D4B6C6C131E816D
02016E5BEFE01F03F8177C027F01036E13784D7E03FCEE80F8023F49486C5C15FE021F01
0FEDC1E04D7E03FF16C36E49EDE3C0041E7F049E15F76E01BC6D5C04FC15FF6E95C8FC4C
80A26E5F4C143F6E5F4C141FA2037F5E4C140FA26F486E5AA2031F5E93C812036F5E5E3A
7EB863>I<007FB5D8F803B512F8A4C66C48C7D80FF0C7FC6D6C5D6D5E6F495A6D6D49C8
FC7F6D6D137E6F5B6DEBF8016D5D6F485A6E6C485A023F130FDA1FFF5BEE9F806E01FFC9
FC805E6E5B6E5B80826F7E153F826F7F5D4B7F92B57EA2DA01F97FDA03F17F03F07F9138
07E07FDA0FC07F021F6D7E4B7E4A486C7F027E8102FE6D7F4A7F49488149486D7F010780
4A6E7E49488149486E7E013F81017F83B60107B61280A441397DB848>I<007FB9FCBA12
80A36C18003905786A4A>95 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D
6C7F6E7FA26F7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380
380FFE00EA3FF85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFF
FE1F0003EBF80F39003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0
023F13FC9138FE03FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA2
17FEAA17FCA3EE1FF8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE00
9039F03FFFF8D9E00F13E0D9C00390C7FC2F3A7EB935>I<903801FFC0010F13FC017F13
FFD9FF8013802603FE0013C048485AEA0FF8121F13F0123F6E13804848EB7F00151C92C7
FC12FFA9127FA27F123FED01E06C7E15036C6CEB07C06C6C14806C6C131FC69038C07E00
6DB45A010F13F00101138023257DA42A>I<EE7F80ED7FFFA4150381AF903801FF81010F
13F1013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FF
AA127FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F
13E1010113012F3A7DB935>I<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F
804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0
C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06D
B51200010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F80
90383FE0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8
FCB3ABB512FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07
138F260FF801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13
FF001F5D6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F
7F6C7E90B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A
163FA36C157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7
FC010713F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F
03FFDA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>
I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512
F8A4153B7DBA1B>I<141FEC7FC0ECFFE0A24913F0A56D13E0A2EC7FC0EC1F0091C7FCA9
EC0FF0EB0FFFA4EB007F143FB3B0121FEA3F80EA7FC0EAFFE0EC7FE0A215C014FF6C4813
80903883FE006CB45A000F13F0000113801C4B86BA1D>I<13FFB5FCA412077EB3B3ACB5
12FCA4163A7DB91B>108 D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF
90B512E0DA1F81903983F03FF0DA3C00903887801F000749DACF007F00034914DE6D48D9
7FFC6D7E4A5CA24A5CA291C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<01FEEB
7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D4814C05C
A25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>I<903801FFC0010F13F8017F13FFD9
FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680
A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5
C7FC011F13FC010113C029257DA430>I<9039FF01FF80B5000F13F0023F13FC9138FE07
FFDAF00113800003496C13C00280EB7FE091C713F0EE3FF8A2EE1FFCA3EE0FFEAA17FC16
1FA217F8163F17F06E137F6E14E06EEBFFC0DAF00313809139FC07FE0091383FFFF8020F
13E0020390C7FC91C9FCACB512FCA42F357EA435>I<9038FE03F000FFEB0FFEEC3FFF91
387C7F809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B5
12FEA422257EA427>114 D<90383FF0383903FFFEF8000F13FF381FC00F383F0003007E
1301007C130012FC15787E7E6D130013FCEBFFE06C13FCECFF806C14C06C14F06C14F812
03C614FC131F9038007FFE140700F0130114007E157E7E157C6C14FC6C14F8EB80019038
F007F090B512C000F8140038E01FF81F257DA426>I<130FA55BA45BA25B5BA25A120700
1FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80F014816CEBC3E090383FFFC06D1380
903803FE001D357EB425>I<01FFEC3FC0B5EB3FFFA4000714016C80B3A35DA25DA26C5C
6E4813E06CD9C03E13FF90387FFFFC011F13F00103138030257DA435>I<B539F001FFF8
A4000390C7EA1F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8
011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5A
A26E5AA26E5AA26E5AA22D257EA432>I<B539F01FFFF0A4000390398003F8006C01C013
E06C1407D97FE05B6D6C485A6E48C7FC90381FFC3E010F5B903807FEFC6D6C5A5D6D5B6D
5B6E7E6E7E814A7EA24A7E903801F3FFD903E37FD907C17FEB0FC049486C7E4A6C7E013E
80496D7E49130F00016E7EB590383FFFF8A42D257EA432>120 D<B539F001FFF8A40003
90C7EA1F00161E6E133E6C153C6E137C6C15786E13F8017F5CECF001013F5C14F8011F49
5AA2ECFC07010F5CECFE0F010791C7FC6E5A6D131E15BE6D13BC15FC6D5BA36E5AA26E5A
A26E5AA26E5AA292C8FCA25C141E003F133E387F803C38FFC07C147814F8EBC1F0EBC3E0
6C485A387D1F80D83FFFC9FCEA1FFCEA07F02D357EA432>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg ecbx1440 14.4 38
/Fg 38 122 df<151E153E15FE1403140F147FEB07FF0003B5FCB6FCA3EBF87FEAFC00C7
FCB3B3B3A6007FB712FCA52E4E76CD42>49 D<EC1FFE49B512F0010F14FC013FECFF8049
15E02701FF803F7F2703FC000713FCD807F001017F48486D7FD81F806E138048C87E7013
C0D87FE016E001F8806D16F000FF817F7013F8A56C5AA26C5A6C5AEA0380C914F05EA218
E05E18C05E18804C13005F4C5A4C5A5F4B5B4B5B4B5B94C7FCED0FFC4B5A4B5AED7FC04B
5A4A90C8FCEC03FC4A5A4A4814F84A5A4A5A4AC8FC02FEEC01F0495A495A495A5CD90F80
140349C8FC013E1507017FB7FC90B812E05A5A5A5A5A5A5AB9FC18C0A4354E7ACD42>I<
913807FFC0027F13FC0103B67E010F15E090261FF80313F890267FC0007F01FEC7EA3FFE
48488148486E138013FE486C6C6D13C0804817E080A66C5B18C06C5B6C90C75AD8003816
8090C8FC4C1300A24C5A5F4C5A4B5B4B13C0030F5BDB7FFEC7FC91387FFFF816C016FCEE
FF80DA000313E09238007FF8EE3FFE707E70138018C07013E018F07013F8A218FC82A218
FEA3EA03C0EA0FF0EA3FFC487EA2B5FCA218FCA25E18F8A26C4816F0495C4916E0D83FE0
4A13C06C485CD80FF04A1380D807FE91387FFE003B03FFE003FFFC6C90B65A6C6C15E001
0F92C7FC010114FCD9001F1380374F7BCD42>I<17FC1601A216031607160FA2161F163F
167FA216FF5D5DA25D5D5D167F153E157E15FC15F8EC01F01403EC07E015C0EC0F80141F
EC3F00143E5C14FC495A5C495A1307495A5C49C7FC5B137E137C5B1201485A5B485A120F
485A90C8FC123E127E5ABA1280A5C901FCC7FCAF021FB71280A5394F7CCE42>I<486C15
0601F0153E01FEEC01FED9FFF0133F91B65A5F5F5F5F5F94C7FC16FC5E16E093C8FC15FC
01F0138091CAFCAC913807FF80023F13F891B512FE01F36E7E9026FFFC0113E09139E000
7FF891C76C7E496E7E01F86E7E5B7013804916C0C9FC18E08218F0A418F8A31203EA0FE0
EA3FF8487EA212FF7FA218F0A25B5E6C4816E05B01C016C06CC85A18806C6C4A13007FD8
0FF04A5A6C6CECFFFCD803FE4913F02701FFE00F5B6C6CB612806D92C7FC010F14F80101
14C09026003FFCC8FC354F7ACD42>I<ED07FE92B512C0020314F0021F14FC91397FFC01
FE9139FFE0007F01030180EB3F804990C7121F4948EC7FC0494814FF4948010313E0495A
49485B5A485BA2485BA2486F13C091C7FC4803001300177E94C7FC5AA25B127FA2ED3FF0
4AB5FC020714C000FF4914F091391F807FF891393E001FFE02786D7E4A6D13807013C06D
5A4A6D13E018F05C7013F8A291C813FCA44916FEA3127FA6123FA37F6C17FCA36C17F85E
7E6E15F06C17E06C6D5B6E15C06C4B13806D6C491300D93FFC495A6DB4EBFFFC010790B5
12F06D5D01001580021F01FCC7FC020313C0374F7BCD42>I<121F7F7FEBFF8091B8FCA4
5A18FE18FC18F818F0A218E018C018804817000180C8123E007EC9127E5F007C4B5A4C5A
5F16074C5A484B5A4CC7FC167E167CC912FC4B5A4B5AA24B5A150F4B5AA24B5AA24BC8FC
5DA25C5D1403A214075D140FA3141FA2143FA34A5AA414FFA65BAB6D5B6E5A6E5A6E5A38
5279D042>I<913803FFC0023F13FC49B67E010715E090260FFC0013F8D93FE0EB1FFCD9
7F80EB07FE49C76C7E496E1380484880000317C049157F120718E0173F120FA27FA27F7F
6E147F02E015C08002FC14FF6C01FF15806F481300EDE0036C9138F807FE6F485A6C9138
FF1FF06CEDFFE017806D4AC7FC7F010F6E7E6D81010115F06D81010315FE010F81D93FF7
1580D97FC115C02701FF807F14E048EB001F48486D14F04848010314F848481300496E13
FC003F151F491407007F6F13FE491400177F00FF163F49151F170F1707A21703A218FCA2
7F127F6DED07F8A26C6CED0FF07F6C6CED1FE06C6CED3FC06C6CEDFF806C01C001031300
6C01FCEB3FFE6C6CB612F8011F15E001071580010002FCC7FC020F13C0374F7BCD42>I<
913807FF80027F13F849B512FE01076E7E90261FFE0113E0903A7FF8003FF049486D7E48
496D7E48496D7E484980486F138091C7FC486F13C05A18E0485A18F0A27013F812FFA318
FCA618FEA35E127FA4003F5DA26C7E5E7E6C6D5B161E6C7F6C6D5B6C6C6C13F890393FFC
03F06DB55A01074A13FC01001400EC1FF891C8FCA218F85EA301FC16F0487E2607FF8015
E05E486D15C0A24C1380A24C13005F4A131F6C4B5A49C7485A494A5A6C48495B6D01075B
2701FF803F90C7FC6C90B512FC013F5C6D14C0010791C8FC9038007FF0374F7BCD42>I<
173FA24D7EA34D7EA24C7FA34C7FA24C7FA34C7FA24C7FA34C7F163E83047E80EE7C3F04
FC8016F8830301814C7E03038116E0830307814C7E030F81168083031F811600834B8103
3E80037E82157C8403FC824B800201835D840203834B800207835D92B8FC4A83A34A8392
C9FC4A83143E85027E84027C8202FC845C850101854A820103855C850107854A82A24948
84D93FF082B600F0020FB712C0A55A547CD363>65 D<932603FFF01407047F01FF140F03
07B600E0131F033F03F8133F92B700FE137F02039126C003FF13FF020F01F8C7EA3FC102
3F01C0EC0FE391B5C80003B5FC4901FC814949814901E082011F498249498292CA7E4948
834948835A4A83485B4885A24849187FA2485B1B3FA2485B1B1FA25AA21B0091CDFCA2B5
FCAE7EA280A36C1A1FA36C7FA21B3F6C7F1B3E6C7F1B7E6C6D187C6C1AFC6E18F86C1901
6D6CEF03F06D7E6FEE07E06D6DEE0FC001076DEE1F806D01F8EE3F006D6D16FE6D01FF4B
5A023F01C0EC07F8020F01FCEC3FF00203903AFFC001FFC0020091B6C7FC033F15FC0307
15F0DB007F1480040301F0C8FC505479D25F>67 D<BAFC19F819FF1AE01AF8D8000701F0
C7001F13FE06017FDE003F13C0070F7F07037F737F737F747E747E747F86747F88868886
88A2747FA3881B7FA288A51D80AF1D00A564A21BFF64A3505BA2505BA2505BA2505B505B
99C7FC505A1A7F4F485A4F13F0070F5B073F5B4EB55A061F49C8FCBB12F81AE097C9FC19
F896CAFC59527CD165>I<BB12FCA5D8000701F0C7000F7F1800191F190F190719031901
19001A7E1A7F86A386A51B80DD03E0130FA497C7FCA31707A3170F171F173FEE01FF92B6
FCA5EDF001EE003F171F170F1707A31703A794CAFCB3A2B812F0A549527CD153>70
D<B812E0A5D8000F01E0CAFCB3B3A91AF8A419011AF0A51903A31907A2190F1AE0191FA2
193F197F19FF60180760187F0503B5FCBB12C0A545527CD14F>76
D<B600F04EB612F06F606F60A3D800076D4E49C7FCA2DADFFFF01F7FA202CF6D173EA302
C76D177CA202C36D17F8A202C16DEE01F0A202C06DEE03E0A36F6CEE07C0A26F6CEE0F80
A26F6CEE1F00A36F6D153EA26F6D5DA26F6D5DA36F6D4A5AA26F6D4A5AA2706C4A5AA370
6C4A5AA2706C4AC7FCA2706D133EA3706D5BA2706D5BA2706D485AA2706D485AA3716C48
5AA2716C485AA2716C48C8FCA37113BEA27113FCA2715BA3715BA2715BA2D91FF06F5AB6
00FE050FB712F0A2725AA272C7FC74527CD17D>I<B600F84BB612FC818181A2D800076E
91C7383FE00070EE0F80828214DF02CF7F02C77F8202C37F14C102C0806F7F836F7F816F
7F6F7F83816F7F6F80707F8482707F707F707F8482707F7080717F8583717F717F85717F
83717F7114801AC07213E0847213F07213F81AFC7213FE847213FF72148F1BCF7313EF85
7313FF85A285858585A286868686A286868686EB1FF0B600FE177F1B3F1B1F1B0FA25E52
7CD167>I<93381FFF800303B512FC033FECFFC092B712F00207D9F80113FE021F903A80
001FFF804A48C700077FDAFFF8020113F049496E7F4901C0ED3FFC49496F7E4990C96C7E
4948707F013F854948707F4948707F48864A8248864A177F48864849717EA3481B804A83
481BC0A44890CB6C13E0A5B51AF0AF6C1BE06E5FA46C1BC0A26E5F6C1B80A36C6D4D1300
A26C6D4D5AA26C626C6D4C5B6E5E6C626D6C4C5B6E5E6D6D4B5B6D6D4B5B6D6D4B90C7FC
6D6D4B5A01016D4A13F86D01FE02075B91263FFFC0013F13C06ED9F801B55A020790B648
C8FC020116F8DA003F15C003074AC9FCDB001F1380545479D263>I<DA0FFE141C91B500
F0133C010702FC137C011F02FF13FC017F15C19026FFF00113E148903980001FFB4890C7
EA07FFD807FC14014848804848153F171F4848150FA2007F1607491503A2170112FFA217
007FA26D167CA27F7F6D93C7FC6C7E14C014F8ECFF806C14F8EDFFC06C15FC6CEDFF8017
F06C16FC6C826C707E6C836D82011F8201078213016D6C81020781EC007F030380ED003F
040314801600173F837113C0838312F883A3837EA319807EA26C5E19007F6D4B5A7F6D4B
5A01FC4B5A6D151FD9FFC04A5AD97FF8ECFFE028FE1FFF80075B010790B6C7FCD8FC0115
FC486C6C14F048010F14C0489026007FFCC8FC3A5479D249>83 D<003FBB12FCA59126C0
007FEB000301FCC7ED003FD87FF0F00FFE49180749180349180190C81600A2007E1A7EA3
007C1A3EA500FC1A3F481A1FA6C91700B3B3AC49B912C0A550517BD05B>I<003FB749B6
12FCA5D8000349C8000301E0C7FC6FDB007EC8FC7F6D6E5D6E6D4A5A19036E6D5D6E6D4A
5A4F5A6E6D141F6E6D5D4FC9FC6E6D147E6E7F715B6E4B5A6FEBC0036F01E05B4E5A6F6D
485A6FEBF81F616F6D48CAFC6FEBFE7EA26F6D5A6F5CA2705B705B707FA2707F707FA270
7F707FA24C80854C805EDC1FDF7F058F7FEE3F0FDC7E077F717F16FC4B486C7F03036D80
5E4B486D7F4B486D7F031F824C7F4BC76C7F037E6E7FA24B6E7F4A486E7F14034B6E804A
486F7F4A5A021F707F4B6F7F4AC980027E82737F4A707F495AD90FFF707FB70203B712F0
A55C527DD163>88 D<EC3FFE0107B512E0011F14FC017F14FF2701FFC00F13C02703FE00
037F486C01007F6E6D7E486D80707EA2707EA3707F6C5B6C90C7FC6C5AC9FCA60307B5FC
0203B6FC147F0103B7FC011FEBF00F017F1300EBFFFC000313F04813C0485B4890C7FC5A
5B485AF081F012FF5BA35EA26D5C127F6D5C003F03F713C36DD901E314E06CD9C00714FF
00079026F01F8114C06C90B5C61480C602FC6D1300011F01F0EB3FFC01010180EB07F03C
387CB642>97 D<EB3FF8B5FCA51203C6FCB3A4EE7FF00307B5FC031F14C0037F14F0913A
F9FF007FFCDAFFF8EB1FFF03E001077F03806D7F92C76C7F4A6E7F5C4A6F7E85183F85A3
8584A31A80AD1A00A36061A261187F616E15FF616E4A5B6E4A5B6F495BDACFE04990C7FC
DA87F0EB3FFE913A01FE01FFF8496CB65A49013F14C049010749C8FC90C813E041547DD2
49>I<913803FFE0023F13FE91B67E010315E0010F9038003FF8D93FFCEB07FC4948497E
4948131F4849497E485B485BA24890C7FC5A5B003F6F5A705A705A007F92C8FC5BA312FF
AD127F7FA3123F7F6CEE0F80A26C6D141F18006C6D5C6C6D143E6C6D147E6C6D5C6D6C49
5A6DB4EB07F0010F9038C01FE06D90B5128001014AC7FCD9003F13F80203138031387CB6
3A>I<913807FF80027F13F849B512FE01076E7E011F010313E0903A3FFC007FF0D97FF0
6D7E49486D7E4849130F48496D7E48824890C77E1880485A82003F17C0A3485A18E082A2
12FFA290B8FCA401FCCAFCA6127FA37F123FA2EF03E06C7E17076C17C06C6D140F18806C
6D141F6C6DEC3F006C6D147ED97FFC495AD91FFFEB07F86D9038E03FF0010390B512C001
005D023F01FCC7FC020113E033387CB63C>101 D<DA1FFE14FE49B539E007FF80010FDA
FC1F13C0013FDAFF7F13E090267FF807EBFF072701FFE001EBF07F48497E484990387FF8
3F91C7003F14C048EEFC1F489338FE070049021F90C7FCA2003F82A9001F5EA26D143F6C
5E6C5E6E137F6C6D495A6C6D485B6CD9F80713804890B6C8FCD803EF14FC01C114E02707
C01FFEC9FC49CBFCA2487EA37FA27F13FC90B612FE6CEDFFF017FCEFFF806C8318F06C83
6C837F48B87E1207D80FFCC700037F4848EC003F4848150F48486F138083485A83A56D5D
007F18006D5D003F5F6C6C4B5A01FE153FD807FFED7FF06C01C049485AC601FC011F1380
013FB648C7FC010F15F8010115C0D9000F01F8C8FC3B4F7CB542>103
D<EB3FF8B5FCA51203C6FCB3A4EE1FFC93B57E030314E0030F14F892391FC07FFC92397E
003FFE03F86D7EECF9F04B6D7FECFBC0ECFF8092C76C7FA25CA25CA45CB3ACB6D8F807B6
12C0A542537CD249>I<133FEBFFC0487F487FA2487FA66C5BA26C5B6C5B013FC7FC90C8
FCAEEB1FF8B5FCA512017EB3B3A6B612F0A51C547CD324>I<153FEDFFC04A13E04A13F0
A24A13F8A66E13F0A26E13E06E13C0ED3F0092C7FCAEED3FF849B5FCA5EB00031400B3B3
B1EA0780EA1FE0487E487E486C14F05CA216E0A24A13C0D87FF814804A13006C48485A00
1FEB3FFC6CB512F06C5C000191C7FC38003FF8256C87D328>I<EB3FF8B5FCA51203C6FC
B3B3B3B1B612F8A51D537CD224>108 D<D93FF0D91FF84AB47EB591B56C010F13F80303
02E0013F13FE030F6E90B6FCDB3F809027F803F80F7F922A7E007FFC07E0077F000302F8
90283FFE0F80037FC6D9F1F0011F49487EDAF3E0DAFF3E814B153CDAF7805D92C76C496D
7F14FF4A5EA24A5EA34A5EB3ADB6D8F80FB66CB612F8A565367BB56E>I<D93FF0EB1FFC
B591B57E030314E0030F14F892391FC07FFC92397E003FFE000302F86D7EC6EBF1F04B6D
7FECF3C0ECF78092C76C7F14FF5CA25CA45CB3ACB6D8F807B612C0A542367CB549>I<91
3801FFC0023F13FE91B67E010315E0010F018013F8903A3FFC001FFED97FF0EB07FF4948
6D7F48496D7F48496D7F91C8127F4883488349153F001F83A2003F8349151FA2007F83A4
00FF1880AC007F1800A3003F5F6D153FA2001F5FA26C6C4B5AA26C6D4A5A6C5F6C6D495B
6C6D495B6D6C4990C7FCD93FFCEB1FFE6DB46CB45A010790B512F0010115C0D9003F49C8
FC020313E039387CB642>I<D93FF8EB7FF0B50107B5FC031F14C0037F14F09126F9FF00
13FCDAFFF8EB3FFF000302E0010F7FC602806D7F92C76C7F4A824A804A6E7F85187F85A2
183F85A4721380AD4E1300A44E5AA26118FF616E5C616E4A5B6E4A5B6F495B03E04990C7
FC6FEB7FFE913AF9FE01FFF802F8B65A033F14C0030749C8FC030013E093CAFCB1B612F8
A5414D7DB549>I<90393FF001FCB590380FFF804B13E0037F13F09238FE1FF89138F1F8
3F00019138F07FFC6CEBF3E015C0ECF780A2ECFF00EE3FF84AEB1FF0EE0FE093C7FC5CA4
5CB3ABB612FEA52E367DB535>114 D<903903FFC00E011FEBFC1E90B6127E000315FE39
07FE003FD80FF0130F4848130348481301491300127F90C8127EA248153EA27FA27F01F0
91C7FC13FCEBFF806C13FEECFFF06C14FE6F7E6C15E06C816C15FC6C81C681133F010F15
801301D9000F14C0EC003F030713E0150100F880167F6C153FA2161F7EA217C07E6D143F
17807F6DEC7F0001F85C6DEB03FE9039FF801FFC486CB512F0D8F81F14C0D8F00791C7FC
39E0007FF02B387CB634>I<147CA614FCA41301A31303A21307A2130F131F133F137F13
FF1203000F90B512FEB7FCA426007FFCC8FCB3A9EE0F80ABEE1F006D7EA2011F143E806D
6D5A6DEBC1F86DEBFFF001005C023F1380DA03FEC7FC294D7ECB33>I<D93FF8913801FF
C0B50207B5FCA50003ED001FC61607B3AE5FA35FA25F137F5F6D6C14F7DC01E713F06D6C
D907C7EBFFC0903A0FFF801F876D90B51207010114FC6D6C13F0020701C091C7FC42377C
B549>I<B600E090381FFFFCA5000101F8C7000113006CEE007C6E15FC017F5E6E140101
3F5E8017036D6D5C17076D5E6F130F6D5E6F131F6D93C7FC815F6D6D133E177E6D157C6F
13FC027F5C811601DA3FFF5B16036E5C16876E5C16CF6E5C16EF16FF6E91C8FCA26E5BA2
6E5BA26F5AA36F5AA26F5AA26F5AA35E151F93C9FC5D153E157ED81FC0137C487E486C13
FC486C5B14015D4A5A14074A5A6C48485A4948CAFC495A383F81FC6CB45A6C5B000313C0
C648CBFC3E4D7DB445>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh ecrm1200 12 32
/Fh 32 122 df<1438A549B4FC010F13E0013F13F89038FE38FED801F0EB0F80D807E0EB
03C001C0EB01E0D80F801300D81F001470003E15301638481518A2007815FC00F8140315
07A47EED03F8ED01F06C91C7FC127E127F1380EA3FC013F0EA1FF8EBFFB86C13F86CEBFF
806C14E06C14F86C6C7F6D13FF010714801300023F13C0023813E0ED3FF0151F150FED07
F81503150116FC001C1400127FEAFF80167CA413005A00E01578006015F8A2007015F000
301401003815E0003C1403001CEC07C0000FEC0F80D80780EB1F00D803E0137E3901FC39
FC39007FFFF0011F13C0D903FEC7FCEB0038A526517BCA31>36 D<121EEA7F8012FF13C0
A213E0A3127FEA1E601200A413E013C0A312011380120313005A1206120E5A5A5A12600B
1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>46
D<160CA2161C1618A21638163016701660A216E016C0A21501168015031600A25D1506A2
150E150CA2151C151815381530A215701560A215E05DA214015D140392C7FCA25C1406A2
140E140C141C1418A214381430A214701460A214E05C13015CA2130391C8FCA25B130613
0E130CA2131C1318A213381330A21370136013E05BA212015BA2120390C9FCA25A120612
0E120CA2121C1218A21238123012701260A212E05AA226647BCA31>I<14FF010713E090
381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848EB03E0A2000F15F0
491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FEA56D1301003F15FC
A3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00013E
137C90381F81F8903807FFE0010090C7FC28447CC131>I<143014F013011303131F13FF
B5FC13E713071200B3B3B0497E497E007FB6FCA3204278C131>I<EB03FE90381FFFC001
7F13F03901F80FFC3903C001FE48486C7E000EC7EA7F8048EC3FC0ED1FE04815F0003014
0F007015F800601407126CB415FC7F7F1503A46C4813076CC7FCC8FC16F8A2150F16F015
1F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A5A5D4A5A4A5A4AC7FC147C5C5C495A495A
495A49C7120C131E5B013814185B5B485A4848143848C81230000E1570001FB612F0A25A
5AB712E0A326427BC131>I<49B4FC010F13E0013F13FC9038FE01FE3A01F0007F80D803
C0EB3FC048C7EA1FE0120EED0FF0EA0FE0486C14F8A215077F5BA26C48130FEA03C0C813
F0A3ED1FE0A2ED3FC01680ED7F0015FE4A5AEC03F0EC1FC0D90FFFC7FC15F090380001FC
EC007FED3F80ED1FC0ED0FE016F0ED07F816FC150316FEA2150116FFA3121EEA7F80487E
A416FE491303A2007EC713FC00701407003015F80038140F6C15F06CEC1FE06C6CEB3FC0
D803E0EB7F803A01FE01FE0039007FFFF8010F13E0010190C7FC28447CC131>I<ED0380
A21507150FA2151F153FA2157F15FFA25CEC03BF153F14071406140C141C141814301470
146014C013011480EB03005B13065B131C13185B1370136013E0485A5B120390C7FC1206
120E120C5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFFC0A32A437DC231
>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C00705D00601530
16705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5AA24A5A140792C8
FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA6D5AEB01C02A45
7BC231>55 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7FCB3A5121EEA7F80A2EAFFC0
A4EA7F80A2EA1E000A2B78AA1B>58 D<B712FEEEFFE017F800019039C00007FE6C6C4890
3800FF80EF3FC0EF0FF0717E717EEF00FE8484F03F80F01FC0A2F00FE019F0180719F8A2
180319FCA3F001FEA419FFAD19FEA3180319FCA319F8180719F0180F19E0A2F01FC0F03F
80A2F07F0018FE4D5A4D5AEF0FF0EF3FE0EFFF8048486C010790C7FCB812FC17E04CC8FC
40447CC34A>68 D<B912F8A3000101C0C7127F6C6C48EC07FC17011700187C183C181CA2
84A31806A4180704067FA395C7FCA4160EA2161E163E16FE91B5FCA3EC8000163E161E16
0EA21606A319C0A3F0018093C7FCA41803A21900A260A260A2181EA2183E187EEF01FE17
0748486C147FB95AA33A447CC342>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497E
B612F0A31C447DC323>73 D<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A5
18E0A3EF01C0A217031707A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D
>76 D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F816
63A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A3
6E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5A
A36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0F
FEB500F0011C0107B512FCA34E447BC359>I<007FB912C0BA12E0A26C18C03B04786E4C>
95 D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C
137F6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03
FC485A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F
13013A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EC7F80903803FFF090380FC07C90383F000F01FCEB03804848EB01C00003140F4848EB
1FE049133F120F485AA2485AED1FC0007FEC070092C7FCA290C9FC5AAB7E7FA2123F1630
7F001F15706C6C146016E06C6C14C06C6C13010001EC03806C6CEB0700013F131E90381F
C078903807FFF001001380242E7DAC2B>99 D<167FED3FFFA315018182B3EC7F80903803
FFF090380FC07C90383F000E017E1307496D5AD803F87F48487F5B000F81485AA2485AA2
127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B00035C6C6C9038077F806C6C
010E13C0013F011C13FE90380FC0F8903803FFE09026007F0013002F467DC436>I<EB01
FE903807FFC090381F03F090387E00FC49137E48487F485A4848EB1F80000F15C049130F
121F484814E01507A2007F15F090C7FCA25AA390B6FCA290C9FCA67EA27FA2123F16306C
7E1670000F15606D14E06C6C14C0000314016C6CEB03806C6CEB0700013E131E90381F80
F8903803FFE0010090C7FC242E7DAC2B>I<EA01FC12FFA3120712031201B3EC01FE9138
07FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA25BA35BB3
A8486CECFF80B5D8F83F13FEA32F457DC436>104 D<EA01E0EA07F8A2487EA46C5AA2EA
01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<EA01FC12
FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>108 D<D801FC01FFEC1FE000
FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C7000FE0E001FC0
000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA2495DA3495DB3
A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00FF903807FF
C091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F91C7FCA25B
A35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC
90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A24848147E003F157FA2
90C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE000F5D6D1301
00075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF89038007F802A
2E7DAC31>I<3901FC03FC00FF90380FFF8091383C07E091387001F83A07FDE000FE0001
0180137F01FFEC3F8091C7EA1FC04915E049140F17F0160717F8160317FCA3EE01FEABEE
03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17806EEB7E00D9FDC05B9039FCF003F8
91383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512F8A32F3F7DAB36>I<3903F803
F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C000015B13FBEC007E153C01FF13005B
A45BB3A748B4FCB512FEA3202C7DAB26>114 D<B539F001FFFCA3000790C7EA7FE06C48
EC1F8000011600160E1200160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF0
0101075CA26D6C48C7FCA26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5A
A36E5AA26E5AA36EC8FC2E2C7EAA33>118 D<B539F007FFFCA30003D9C00113C0C6496C
1300017F14FC013F5C6E13E06D7E010F495A6D6C485A02F890C7FC903803FC060101130E
6E5A903800FF186E5AEC3FF05D141F140F6E7E81140FEC0DFCEC19FEEC38FF4A7E913860
3F8002C07F0101131F49486C7E02007F01066D7E010E1303496D7E013C80017C80D801FC
1580D80FFE4913C0B5D8800F13FFA3302B7FAA33>120 D<B539F001FFFCA3000790C7EA
7FE06C48EC1F8000011600160E0000150C6D141C6D1418A26E1338013F1430A26D6C5BA2
6E13E0010F5CA26D6C485AA2ECF803010391C7FCA2903801FC06A2ECFE0E0100130CA2EC
7F18A215B8EC3FB0A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA25CA2123C007E5BB4
FC5CA25CEAFE01387C0380D87007C9FCEA3C1EEA0FFCEA03F02E3F7EAA33>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi ecrm1728 17.28 18
/Fi 18 119 df<DDFFF015C0040F01FF1401047F14E00303B600F81303030F9038E003FE
DB3FFCC7007F1307DBFFE0EC0FC002030180913803E00F4A48C83801F01F4A48ED0078DA
3FF0EE3C3F4A48161E4A48EE0F7F4949EE07FF4990CA7E495A4948834948835C013F197F
4948183F495A1B1F485B1B0F4890CCFCA248481907A2485A1B03121F5BA2123F1B015BA2
127F98C7FCA35B12FFB0127F7FA4123FF301C07FA2121FA27F000F1A031C806C7EA26C7E
1B076C6D1900636C7F1B0E6D6C181E6D6C181C011F193C6E606D7E6D6C606D6C4D5A6D6D
4C5A6D6D16076E6C4C5A6E6C4CC7FCDA0FFC163E6E6C16FC6E6C6CEC01F0020001F0EC07
E0DB3FFCEC3F8092280FFFE003FFC8FC030390B512FCDB007F14F0040F1480040001F8C9
FC526679E361>67 D<B912F018FF19E019F8C601FCC8EA7FFED93FF892380FFF80011F04
017F9538007FF0F11FF8737EF103FE737E737F747E747E747E1A0F87747E1A0387747EA2
741380A2F37FC0A21CE01B3FA21CF0A21B1F1CF8A31CFCA21B0FA41CFEAF1CFCA51B1F1C
F8A4F33FF0A21CE0A21B7F1CC01BFF1C80A2501300A2505A505AA2505A505A505A505A1A
FF4F5B4F90C7FCF107FCF11FF8F17FF0953801FFC0013F04075BD9FFFCDB7FFEC8FCBA12
F819E096C9FC18F0576278E167>I<B712E0A4C60280CAFCD93FFCCBFC131F5CB3B3B21A
38A61A781A70A61AF0A41901A21AE01903A21907A2190F191F193F197F19FF1803180F01
3F043F13C0D9FFFC0203B5FCBBFCA4456278E154>76 D<EC3FE0903803FFFE010F6D7E90
393FC03FE090397C000FF801F0EB03FC48486D7E48486D7E48486E7E48C86C7E7F01F06E
7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF807903801FF
80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA24848EE01C0A312
FF5BA2160FA3161F6D141B007F153B16736D17806C6C9138E1FC03001FEC03C16C6C903A
0780FE0700D807FE49486C5A2701FF807CEB7FFE6C6CB4486D5A011F01E06D5A010390C7
EA07E03A4179BF43>97 D<EB03C0EA07FFB5FCA41201EA007FA2133FB3AAEE7FC0923807
FFFC031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC02CFC87E02DE157F
02FC6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80AD1A0060A4611803
61A21807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A5A90263E0780495A
6E6CEB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13F890C8138041657C
E34B>I<4AB47E020F13F8023F13FE9139FF007F80D903FCEB07E0D907F0EB01F0D91FE0
EB007849488049488049C87E48485D4915FF00034B138048485CA2485AA2485AA2003F6F
130049EC007C94C7FC127FA35B12FFAD127F7FA4123F7FA2001FEE01C07F000F16036D16
8012076C6C15076D160000015E6C6C151E6D6C5C6D6C5C6D6C5CD90FF8495AD903FCEB07
C0903A00FF803F8091263FFFFEC7FC020F13F80201138032417BBF3C>I<EC03FE91381F
FFE091B512F8903901FE03FE903A07F0007F8049486D7ED93FC06D7E49C76C7E496E7E49
140348488148481401000782491400000F8283485A1880123F49153FA2007F17C0A35BA2
12FF90B8FCA30180CAFCA9127F7FA3123FA27F121FEF01C06C7E17036C6C1680A26C6C15
070001EE0F006D150E6C6C151E6D6C5C6D6C5C6D6C5CD907F0EB03E0D903FC495A902700
FF803FC7FC91383FFFFC020F13F00201138032417BBF3C>101 D<EB03C0EA07FFB5FCA4
1201EA007FA2133FB3AAEE7FE0923803FFFC030F13FFDB3F0013C00378EB1FE04B6D7EDA
C1C06D7EDAC3808002C7C7120302CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A
7F496C4A7FB6D8F003B612C0A442647CE34B>104 D<1378EA01FE487E487FA66C90C7FC
6C5AEA007890C8FCB3A2EB0780EA0FFFB5FCA41203C6FCA2137FB3B3AC497E487FB61280
A4195F7BDE25>I<EB0780EA0FFFB5FCA41203C6FCA2137FB3B3B3B3AD497E487FB612C0
A41A647BE325>108 D<D903C0D97FE04AB47ED807FF902603FFFC020F13F0B5010F01FF
023F13FCDB3F0001C09038FC03FF0378903C1FE001E0007F804B6D6C48486D7E0001D9C1
C06D6C48C76C7E27007FC380DAFC0E8102C7C7000349140FD93FCE6F48810501160702DC
5E02D8166002F8912600FFE06E7E4A5EA34A5EA34A93C8FCB3B3496C4A6D4A7E496C4A6D
4A7EB6D8F003B6D8C00FB6FCA4683F7CBE71>I<D903C0EB7FE0D807FF903803FFFCB501
0F13FFDB3F0013C00378EB1FE04B6D7E0001D9C1C06D7E27007FC3808002C7C71203D93F
CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7FB6D8F003B612C0A442
3F7CBE4B>I<4AB47E020F13F0027F13FE4AC67ED903F8EB1FC0D907E0EB07E0D91FC0EB
03F849486D7E49C87E01FE157F49814848ED1F80000317C04848ED0FE0A24848ED07F0A2
001F17F8491503003F17FCA3007F17FE491501A400FF17FFAC007F17FEA26D1503A3003F
17FCA2001F17F86D1507A2000F17F06D150F000717E06C6CED1FC0A26C6CED3F806C6CED
7F00017F15FE6D6C495A6D6C495A6D6C495AD903F8EB1FC06DB4EBFF806D6CB448C7FC02
0F13F00201138038417BBF43>I<D903C0EB7FC0D807FF903807FFFCB5011F13FFDB7F00
13C003F8EB1FF0DAC3E0EB07F80001D9C7806D7E26007FCFC76C7E02DE6E7ED93FFC6F7E
4A6F7E4A82181F4A82727E5C727EA2727EA3727EA41A8084AC4E1300A54E5AA2611807A2
4E5A6E5E181F6E4B5A6E5E187F6E4B5A02DE4A90C7FC02CF4A5ADAC780495ADAC3C0EB0F
F0DAC1F0EB3FE0913AC07E01FF806FB448C8FC030F13F80300138093CAFCB3A3497E497E
B612F0A4415B7CBE4B>I<010FEB07F8D80FFFEB1FFEB590387FFF809238F81FC0913801
E03F913903C07FE00003EB0780C6EB0F00140E6D5A0218EB3FC00238EB1F800230EB0600
027090C7FCA2146014E0A25CA55CB3B0497E4813F0B612F8A42B3F7BBE34>114
D<1470A714F0A51301A31303A21307A2130FA2131F133F137F13FF1203000F90B6FCB8FC
A326000FF0C8FCB3AEEE01C0AE6D6CEB0380A316076D6C14005E6D6C130E6D6C131E6E6C
5A91383FE0F86EB45A020713C0020090C7FC2A597ED734>116 D<D903C0150FD807FFED
1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA35FA35F011F15066E140E
5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00FFC01F8091393FFFFE00
020F13F8020001C0EC800042407CBE4B>I<B66C0103B512C0A4000101F8C8EBFC006C01
E0ED3FF0017FEE1FC0013F5F96C7FC131F181E80010F161C8001075EA26E157801031670
A26D6C5DA26E14016D5EA26F1303027F5D81023F4AC8FCA26F5B021F140E81020F5CA26F
133C02071438A26E6C5BA26F13F002015CA2EDFF016E5C168192387F8380A216C7033F90
C9FCA2ED1FEEA216FE6F5AA36F5AA26F5AA36F5AA2423F7EBD47>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 563 439 a Fi(Double)45 b(Cho)t(co)h(Latte)g(Dev)l(elop)t(er)g
(Do)t(cumen)l(tation)1598 680 y Fh(Mic)m(hael)32 b(L.)g(Dean)598
880 y($Id:)43 b(dcl_dev)m(elop)s(er.lyx,v)33 b(1.2)g(2001/04/20)d
(23:17:31)h(mdean)h(Exp)i($)-300 1238 y Fg(Con)l(ten)l(ts)-300
1421 y Ff(1)77 b(Application)31 b(Arc)m(hitecture)3285
b(1)-175 1520 y Fe(1.1)83 b(Login)f(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(1)-175 1620 y(1.2)83 b(Logout)31 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(1)-175 1720 y(1.3)83 b(Class)27 b(F)-7 b(actory)50
b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)153 b(1)15 1819 y(1.3.1)94 b(Wh)n(y)28 b(Is)f(It)h(Called)f(a)g
(Class)g(F)-7 b(actory?)70 b(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(1)-175
1919 y(1.4)83 b(P)n(age)27 b(Requests)85 b(.)41 b(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(1)-175
2018 y(1.5)83 b(File)28 b(Naming)g(Con)n(v)n(en)n(tions)75
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(2)-300 2201 y Ff(2)77 b(Database)32 b(Abstraction)3420
b(2)-175 2301 y Fe(2.1)83 b(Database)27 b(Date)h(Handling)37
b(.)k(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(2)-175 2400 y(2.2)83 b(Other)27 b(Database)g(Characteristics)44
b(.)d(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(2)-300 2583
y Ff(3)77 b(T)-8 b(emplates)3899 b(2)-175 2683 y Fe(3.1)83
b(Lo)r(cation)33 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(2)-175 2782
y(3.2)83 b(V)-7 b(ariable)27 b(Naming)g(Con)n(v)n(en)n(tions)42
b(.)g(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(3)-175
2882 y(3.3)83 b(Using)28 b(T)-7 b(emplates)27 b(in)h(h)n(tml)g(Classes)
68 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(3)-300 3064
y Ff(4)77 b(XML)32 b(DOMish)e(Do)s(cumen)m(t)h(Ob)5 b(jects)2909
b(3)-175 3164 y Fe(4.1)83 b(xmlNo)r(de)26 b(.)42 b(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(3)15 3264 y(4.1.1)94 b(xmlNo)r(de)28 b(Mem)n(b)r(er)f(V)-7
b(ariables)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(3)-175
3363 y(4.2)83 b(xmlDo)r(c)71 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(3)-175 3463 y(4.3)83 b(xmlDo)r(c)28 b(Ob)5 b(ject)28
b(In)n(terface)33 b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)153 b(3)15 3563 y(4.3.1)94 b(P)n(arsing)71 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(4)15 3662 y(4.3.2)94 b(Rendering)37 b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(4)15 3762
y(4.3.3)94 b(Mo)r(difying)39 b(.)j(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)153 b(4)15 3861 y(4.3.4)94
b(Na)n(vigating)77 b(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)153 b(4)15 3961 y(4.3.5)94 b(Mem)n(b)r(er)27
b(V)-7 b(ariables)72 b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)153 b(4)-300 4144 y Ff(5)77 b(Logic)31 b(La)m(y)m(er)3844
b(4)-300 4326 y(6)77 b(National)31 b(Language)h(Supp)s(ort)3171
b(4)-175 4426 y Fe(6.1)83 b(Lo)r(cation)33 b(.)42 b(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(4)-175 4526 y(6.2)83 b(Naming)28 b(Con)n(v)n(en)n(tions)46
b(.)c(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(5)-300 4708 y Ff(7)77 b(Database)32 b(Sc)m(hema)3596
b(6)-300 4891 y(8)77 b(TODO)31 b(F)-8 b(eature)33 b(List)3506
b(7)-175 4990 y Fe(8.1)83 b(Authen)n(tication)66 b(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(7)-175 5090 y(8.2)83 b(W)-7 b(ork)27 b(Orders)74 b(.)42
b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)153 b(7)-175 5190 y(8.3)83 b(Pro)5 b(ject)28 b(Managemen)n(t)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(7)-175 5289 y(8.4)83 b(Tic)n(k)n(ets)25 b(.)41 b(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(7)-175 5389 y(8.5)83 b(Securit)n(y)55 b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)153
b(8)1938 5700 y(i)p eop
%%Page: 2 2
2 1 bop -175 90 a Fe(8.6)83 b(E-mail)28 b(Gatew)n(a)n(y)23
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)153 b(8)-175 190 y(8.7)83 b(Rep)r(orting)52 b(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)153 b(8)-175 289 y(8.8)83 b(UI)66 b(.)41 b(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)153 b(8)-175 389 y(8.9)83 b(NLS)62 b(.)42 b(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
153 b(8)-175 489 y(8.10)41 b(A)n(ccoun)n(ts)20 b(.)42
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)153 b(8)-300 671 y Ff(9)77 b(Con)m(tributors)3789
b(8)-175 771 y Fe(9.1)83 b(Core)27 b(Dev)n(elop)r(ers)80
b(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
153 b(8)-175 871 y(9.2)83 b(P)n(ac)n(k)-5 b(agers)59
b(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)153 b(8)-175 970 y(9.3)83 b(Do)r(cumen)n(tation)53
b(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)153 b(8)-175 1070 y(9.4)83 b(T)-7 b(ranslations)33
b(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)153 b(9)-175 1169 y(9.5)83 b(P)n(atc)n(hes)72
b(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)153 b(9)1927 5700 y(ii)p eop
%%Page: 1 3
1 2 bop -300 90 a Fg(1)131 b(Application)46 b(Arc)l(hitecture)-300
272 y Fe(Double)19 b(Cho)r(co)g(Latte)g(is)g(an)f(ob)5
b(ject)19 b(orien)n(ted)f(implemen)n(tation)h(of)g(a)g(problem/pro)5
b(ject)17 b(managemen)n(t)h(system.)34 b(All)19 b(actions)g(are)f(p)r
(erformed)-300 372 y(with)28 b(ob)5 b(jects)27 b(that)h(are)f(split)g
(in)n(to)h(3)f(distinct)h(la)n(y)n(ers:)35 b(data,)27
b(logic,)g(presen)n(tation.)-300 604 y Fd(1.1)112 b(Login)-300
757 y Fe(When)30 b(logging)e(in)i(to)g(DCL,)g(the)g(login)f(form)h(is)f
(submitted)i(to)f(the)g(w)n(eb)f(serv)n(er)f(with)i(the)h(user's)e
(creden)n(tials.)42 b(DCL)30 b(then)g(attempts)g(to)-300
857 y(lo)r(cate)g(that)h(user)f(in)h(the)g(database)e(using)i(the)g
(short)f(\034eld)h(in)g(the)g(p)r(ersonnel)f(table.)46
b(If)31 b(a)f(matc)n(h)g(is)h(found,)h(it)f(then)g(p)r(erforms)f(an)g
(md5)-300 957 y(hash)c(of)h(the)g(passw)n(ord)d(and)j(compares)e(it)i
(to)f(the)h(hash)g(stored)e(in)i(the)g(database.)35 b(If)27
b(that)g(matc)n(hes,)g(a)f(co)r(okie)f(is)i(sen)n(t)f(to)h(the)g(clien)
n(t)g(with)-300 1056 y(the)h(user)f(id,)h(men)n(u)f(id,)h(domain)f
(name,)h(selected)f(language,)f(and)i(passw)n(ord)d(k)n(ey)-7
b(.)-175 1156 y(F)g(or)29 b(eac)n(h)g(successiv)n(e)f(page)h(request,)h
(the)g(user's)f(creden)n(tials)g(are)g(re-ev)-5 b(aluated.)42
b(The)30 b(co)r(okie)f(stored)g(on)h(the)g(clien)n(t)g(system)f(is)h
(used)-300 1255 y(to)f(load)f(the)i(appropriate)d(p)r(erson)i(\(if)h
(the)f(p)r(erson)g(still)g(exists\))g(and)g(compare)f(the)h(hashed)g
(passw)n(ord.)40 b(In)29 b(the)h(future,)g(this)f(will)g(c)n(hange)-300
1355 y(when)f(real)e(session)h(supp)r(ort)g(is)h(in)n(tro)r(duced.)-175
1455 y(Also,)34 b(during)f(login)g(and)g(for)g(eac)n(h)g(page)f
(request,)i(the)g(con\034guration)e(is)h(read)g(from)g(the)h
(dcl_con\034g)e(table.)54 b(This)34 b(table)f(con)n(tains)-300
1554 y(parameters)28 b(to)h(c)n(hange)f(the)i(b)r(eha)n(vior)e(and)h
(lo)r(ok-n-feel)g(of)g(DCL.)h(When)g(sessions)e(come)h(to)g(to)n(wn,)h
(this)f(information)g(will)h(b)r(e)f(p)r(ersisted)-300
1654 y(in)f(the)g(session)e(information)h(to)g(reduce)h(load)e(on)i
(the)g(SQL)f(serv)n(er.)-300 1886 y Fd(1.2)112 b(Logout)-300
2040 y Fe(Logging)26 b(out)h(simply)h(resets)f(the)h(co)r(okie)e(to)i
(nothing,)f(in)h(essense)f(deleting)g(it.)-300 2272 y
Fd(1.3)112 b(Class)38 b(F)-9 b(actory)-300 2425 y Fe(Before)33
b(going)g(further,)j(it)e(is)g(w)n(orth)g(noting)g(that)g(DCL)g(mak)n
(es)f(use)h(of)h(a)e(class)g(factory)h(for)f(ob)5 b(ject)34
b(loading)f(and)h(instan)n(tiation.)56 b(The)-300 2525
y(function)28 b(is)g(named)f Fc(CreateObject)k Fe(and)c(is)h(used)f(as)
g(suc)n(h:)-92 2707 y Fb($obj)41 b(=)j(CreateObject\('b)o(oS)o(MTP)o
('\))o(;)-300 2890 y(CreateObject)30 b Fe(then)36 b(lo)r(oks)e(to)h
(see)g(if)h(a)f(global)f(v)-5 b(ariable)34 b Fb(CLASSNAME_PHP3_IN)o(CL)
o(UD)o(ED)29 b Fe(has)35 b(b)r(een)g(de\034ned.)61 b(If)35
b(not,)j(it)d(includes)h(the)-300 2990 y(appropriate)26
b(\034le)h(\(in)i(this)e(case)g Fb(boSMTP.php3)p Fe(\).)-175
3089 y(After)h(the)h(\034le)g(has)f(b)r(een)h(included)g(\(or)f(v)n
(eri\034ed)g(as)g(b)r(eing)g(previously)f(included\),)j(the)f(ob)5
b(ject)28 b(is)h(instan)n(tiated)f(and)g(returned)g(to)h(the)-300
3189 y(calling)e(function.)37 b(In)28 b(the)g(ab)r(o)n(v)n(e)e
(example,)h Fb($obj)f Fe(will)i(con)n(tain)f(a)g(new)h(instance)f(of)g
(the)h Fb(boSMTP)d Fe(class.)-300 3405 y Ff(1.3.1)94
b(Wh)m(y)32 b(Is)g(It)g(Called)f(a)h(Class)f(F)-8 b(actory?)-300
3558 y Fe(This)28 b(question)f(will)h(in)n(v)-5 b(ariably)26
b(come)h(up.)37 b(The)28 b(answ)n(er)e(is)h(prett)n(y)h(simple:)37
b(a)27 b(class)g(factory)f(is)i(a)f(metho)r(d)h(for)f(the)h(dev)n(elop)
r(er)e(to)i(request)-300 3658 y(the)34 b(class)e(b)n(y)i(a)f(unique)h
(name)f(and)g(let)h(the)g(factory)f(tak)n(e)f(care)h(of)g(the)h
(details)f(for)g(loading)g(it)h(and)f(instan)n(tiating)g(it.)55
b(Of)34 b(course,)g(the)-300 3757 y(factory)27 b(in)g(this)h(case)f(is)
g(represen)n(ted)g(b)n(y)g(the)h(simple)g(function)g
Fb(CreateObject)p Fe(.)-300 3990 y Fd(1.4)112 b(P)m(age)38
b(Requests)-300 4143 y Fe(P)n(age)22 b(requests)g(all)g(pass)g(through)
g Fb(main.php3)p Fe(.)32 b Fb(main.php3)19 b Fe(ev)-5
b(aluates)22 b(the)h(v)-5 b(alue)23 b(of)f(the)i Fb(menuAction)18
b Fe(v)-5 b(ariable.)34 b Fb(menuAction)19 b Fe(is)k(de\034ned)-300
4242 y(as)i Fb(classname.method)o(na)o(me)o Fe(.)31 b(Since)26
b(all)f(DCL)h(actions)f(are)f(ob)5 b(ject)26 b(orien)n(ted,)f(this)h
(mak)n(es)e(it)i(a)g(snap)f(to)g(dev)n(elop)g(new)h(functionalit)n(y)f
(and)-300 4342 y(not)j(w)n(orry)d(ab)r(out)j(directory)e(structures)h
(and)g(suc)n(h.)36 b(All)29 b(that's)e(required)g(is)g(that)h(the)g(ob)
5 b(jects)27 b(are)g(lo)r(catable)f(b)n(y)i(the)g(class)e(factory)-7
b(.)-175 4442 y(What)39 b(main.php3)g(do)r(es)g(is)g(segmen)n(t)f(the)i
(men)n(uA)n(ction)f(v)-5 b(ar)38 b(in)n(to)h(t)n(w)n(o)f(distinct)i(en)
n(tities:)60 b(the)40 b(class)e(name)h(and)g(metho)r(d)g(name.)-300
4541 y(Pseudo)r(co)r(de)28 b(for)f(represen)n(ting)f(this)h(is:)-92
4724 y Fb(list\(classname,)37 b(methodname\))i(=)k(explode\('.',)38
b(menuAction\);)-92 4857 y($obj)j(=)j(CreateObject\(cl)o(as)o(sna)o(me)
o(\);)-92 4990 y($obj->methodnam)o(e\()o(\);)1929 5700
y Fe(1)p eop
%%Page: 2 4
2 3 bop -300 90 a Fd(1.5)112 b(File)36 b(Naming)h(Con)m(v)m(en)m(tions)
-300 243 y Fe(The)44 b(\034le)g(names)f(are)g(represen)n(titiv)n(e)f
(of)i(the)g(class')f(name)g(and)h(the)g(la)n(y)n(er)e(it)i(is)g(a)f
(part)h(of.)85 b(A)44 b(\034le)g(name)g(is)f(comp)r(osed)g(lik)n(e)h
(so:)-300 343 y Fb(<layer><classnam)o(e>)o(.ph)o(p3)o
Fe(.)-175 443 y(The)27 b(la)n(y)n(ers)f(are:)-300 625
y Ff(b)s(o)41 b Fe(Business)27 b(Ob)5 b(ject.)36 b(This)28
b(is)f(the)h(la)n(y)n(er)e(that)i(handles)f(the)h(guts)f(of)h(the)g(op)
r(erations.)-300 791 y Ff(db)42 b Fe(DataBase.)34 b(This)23
b(la)n(y)n(er)f(handles)h(the)h(in)n(terface)e(b)r(et)n(w)n(een)i(the)f
(other)g(la)n(y)n(ers)f(and)h(the)h(database.)34 b(Normally)-7
b(,)23 b(ev)n(ery)f(table)i(within)g(DCL)-92 891 y(will)29
b(ha)n(v)n(e)e(a)i(corresp)r(onding)e(db)i(class.)40
b(Ho)n(w)n(ev)n(er,)27 b(for)i(some)f(cross)g(reference)g(tables)g(and)
h(suc)n(h,)g(there)g(ma)n(y)f(not)h(necessarily)e(b)r(e)i(a)-92
991 y(class.)-300 1157 y Ff(h)m(tml)40 b Fe(Presen)n(tation.)i(This)29
b(la)n(y)n(er)f(do)r(es)h(the)h(ma)5 b(jorit)n(y)28 b(of)i(page)e
(rendering)g(functions.)43 b(This)30 b(includes)f(instan)n(tiating)g
(templates,)h(p)r(opu-)-92 1256 y(lating)d(their)g(v)-5
b(ariables,)27 b(and)g(displa)n(ying)f(them.)-300 1531
y Fg(2)131 b(Database)43 b(Abstraction)-300 1713 y Fe(The)35
b(database)g(functionalit)n(y)g(is)g(abstracted)f(to)i(ease)e(p)r
(orting)h(of)g(DCL)h(to)f(other)g(SQL)g(serv)n(ers.)58
b(Curren)n(tly)35 b(supp)r(orted)g(serv)n(ers)e(are:)-300
1812 y(P)n(ostgreSQL,)39 b(MySQL,)i(Microsoft)f(SQL)g(Serv)n(er,)j(and)
e(Sybase)f(A)n(daptiv)n(e)g(Serv)n(er)g(En)n(terprise.)76
b(The)41 b(curren)n(t)f(abstraction)f(la)n(y)n(er)g(is)-300
1912 y(custom)27 b(written)h(for)f(DCL,)h(but)g(it)g(migh)n(t)g(shift)g
(to)f(mo)r(di\034ed)h(PHPLib)h(v)n(ersions)d(in)i(the)g(future.)-175
2012 y(Eac)n(h)g(serv)n(er)e(has)i(it's)g(o)n(wn)g(class)f(in)i(a)f
(\034le)g(named)g(after)g(it.)40 b(P)n(ostgreSQL)26 b(is)i(in)h
(pgsql.php3,)f(MySQL)g(is)g(in)g(m)n(ysql.php3,)g(Microsoft)-300
2111 y(SQL)f(Serv)n(er)f(is)i(in)g(mssql.php3,)f(and)g(Sybase)g(ASE)h
(is)g(in)g(sybase.php3.)-300 2344 y Fd(2.1)112 b(Database)39
b(Date)e(Handling)-300 2497 y Fe(T)-7 b(o)24 b(comp)r(ensate)h(for)f
(the)h(di\033erences)g(in)g(ho)n(w)f(the)h(SQL)f(serv)n(ers)f(store)h
(dates,)h(t)n(w)n(o)f(classes)f(w)n(ere)h(written:)36
b(Timestamp)25 b(and)f(Date.)36 b(These)-300 2596 y(classes)26
b(are)h(de\034ned)h(in)g(datetime.php3.)-175 2696 y(The)i(purp)r(ose)f
(of)i(the)f(eac)n(h)g(class)f(is)h(to)g(handle)g(the)h(transition)e(of)
h(date)g(and)g(timestamp)h(en)n(tities)f(b)r(et)n(w)n(een)g(the)h
(presen)n(tation)e(la)n(y)n(er)-300 2796 y(and)e(the)g(SQL)g(serv)n
(er.)35 b(This)27 b(ensures)f(that)h(the)g(data)g(going)e(in)n(to)i
(the)h(SQL)e(serv)n(er)f(is)i(correct)f(and)h(that)g(the)g(data)g
(displa)n(y)n(ed)f(to)g(the)i(user)-300 2895 y(can)f(b)r(e)h(lo)r
(calized)f(to)h(their)f(preference.)-300 3128 y Fd(2.2)112
b(Other)37 b(Database)i(Characteristics)-300 3281 y Fe(An)n(ytime)28
b(a)f(di\033erence)h(b)r(et)n(w)n(een)f(SQL)h(serv)n(ers)d(is)j(found,)
g(a)f(function)h(is)g(written)g(to)f(abstract)g(the)h(di\033erence.)37
b(This)28 b(ensures)e(a)i(common)-300 3380 y(in)n(terface)i(for)g(all)h
(consumers)e(of)i(the)g(database)f(la)n(y)n(er)f(classes.)45
b(Some)30 b(examples)g(are:)42 b(LIMIT)31 b(clause,)g(case)f
(\(in\)sensitiv)n(e)h(queries,)f(and)-300 3480 y(data)d(t)n(yp)r(e)h
(casting.)-300 3755 y Fg(3)131 b(T)-11 b(emplates)-300
3936 y Fe(The)23 b(templates)g(class)f(comes)g(from)h(phpGroupW)-7
b(are,)23 b(whic)n(h)g(in)g(turn)g(used)g(the)g(PHPLib)h(templates)f
(class.)35 b(T)-7 b(o)22 b(use)h(templates)g(in)g(DCL,)g(a)-300
4036 y(template)28 b(factory)e(w)n(as)g(created.)36 b(This)27
b(is)g(implemen)n(ted)h(in)g(the)f(function)h Fb(CreateTemplate)p
Fe(.)j Fb(CreateTemplate)21 b Fe(tak)n(es)27 b(one)g(parameter:)-300
4136 y(an)g(arra)n(y)e(of)j(handles)f(and)h(template)f(\034les)h(y)n
(ou)f(w)n(ould)g(normally)f(pass)h(to)g(set_\034le.)37
b(Example:)-92 4318 y Fb($Template)i(=)k(CreateTemplate\(ar)o(ra)o
(y\(')o(hF)o(or)o(m')37 b(=>)43 b('htmlWorkorderFo)o(rm)o(.t)o(pl')o
(\)\))o(;)-300 4501 y Fc(CreateTemplate)32 b Fe(will)27
b(handle)h(\034nding)f(exactly)g(whic)n(h)h Fc(htmlWorkorderForm.tpl)33
b Fe(the)28 b(caller)f(needs)g(b)n(y)g(using)h(the)g(con\034gured)e
(template)i(set.)-300 4733 y Fd(3.1)112 b(Lo)s(cation)-300
4887 y Fe(The)23 b(templates)g(are)f(lo)r(cated)h(in)g(the)h
Fb(<dcl_root>/temp)o(la)o(tes)o(/<)o(te)o(mpl)o(at)o(e_)o(set)o(>)17
b Fe(directory)-7 b(.)34 b(T)-7 b(o)23 b(create)f(another)g(template)h
(set,)h(simply)-300 4986 y(cop)n(y)j(the)h(default)g(template)f(set)h
(to)f(a)h(sibling)f(directory)f(and)i(b)r(egin)f(mo)r(difying)h(the)g
(templates)f(to)h(matc)n(h)f(the)h(lo)r(ok)f(and)g(feel)h(desired.)-175
5086 y(The)j(custom)g(directory)g(con)n(tains)f(template)i(\034les)f
(used)h(for)f(non-h)n(tml)g(rendering.)47 b(A)32 b(curren)n(t)f
(example)g(is)g(the)h(Customer)f(Qualit)n(y)-300 5185
y(Questionnaire)26 b(email)h(template.)1929 5700 y(2)p
eop
%%Page: 3 5
3 4 bop -300 90 a Fd(3.2)112 b(V)-9 b(ariable)36 b(Naming)g(Con)m(v)m
(en)m(tions)-300 243 y Fe(T)-7 b(emplates)38 b(use)h(sev)n(eral)d
(di\033eren)n(t)j(naming)f(con)n(v)n(en)n(tions.)68 b(Curren)n(tly)-7
b(,)40 b(all)e(v)-5 b(ariables)37 b(are)h(pre\034xed)g(with)h(a)f(sp)r
(ecial)g(abbreviation)f(to)-300 343 y(describ)r(e)27
b(what)h(the)g(v)-5 b(ariable)26 b(will)i(b)r(e)g(replaced)e(with.)-300
526 y Ff(TXT_)43 b Fe(Static)28 b(text)-300 692 y Ff(V)-11
b(AL_)43 b Fe(Data)27 b(V)-7 b(alue)-300 858 y Ff(CMB_)41
b Fe(Com)n(b)r(o)27 b(Bo)n(x)-300 1024 y Ff(BTN_)42 b
Fe(Button)27 b(T)-7 b(ext)-300 1190 y Ff(COLOR_)41 b
Fe(Color)26 b(\(curren)n(tly)h(ligh)n(t)g(and)h(dark)e(are)h(supp)r
(orted)g(from)h(the)f(DCL)h(con\034guration\))-300 1422
y Fd(3.3)112 b(Using)37 b(T)-9 b(emplates)36 b(in)h(h)m(tml)f(Classes)
-300 1575 y Fe(T)-7 b(emplates)36 b(are)f(instan)n(tiated)g(b)n(y)h
(the)g(template)g(factory)-7 b(.)61 b(If)37 b(a)e(particular)g
(template)h(is)g(v)n(ery)f(large)f(and/or)g(has)i(a)f(large)g(amoun)n
(t)g(of)-300 1675 y(supp)r(orting)30 b(co)r(de,)h(an)f(h)n(tml)h(class)
e(is)h(created)g(to)g(sp)r(eci\034cally)g(handle)g(only)g(that)h
(template.)46 b(If)31 b(the)f(template)h(and)f(supp)r(orting)g(co)r(de)
g(is)-300 1775 y(small,)d(sev)n(eral)f(template)i(handlers)f(can)g(b)r
(e)h(com)n(bined)f(in)n(to)g(one)g(class)g(in)h(di\033eren)n(t)f(metho)
r(ds.)-300 2049 y Fg(4)131 b(XML)44 b(DOMish)f(Do)t(cumen)l(t)h(Ob)7
b(jects)-300 2231 y Fe(The)35 b(latter)g(part)f(of)i(April)f(2001)e(sa)
n(w)h(the)i(in)n(tro)r(duction)e(of)h(a)g(couple)g(of)g(classes)f(to)h
(generically)e(supp)r(ort)i(parsing)f(XML)h(do)r(cumen)n(ts)-300
2331 y(in)n(to)42 b(a)g(DOMish)g(structure)f(using)h(PHP)h(arra)n(ys.)
78 b(The)42 b(ob)5 b(jects)42 b(mak)n(e)f(use)h(of)g(the)g(bundled)h
(XML)g(Expat)f(parser)e(and)i(the)h(PHP)-300 2430 y(xml_parser_set_ob)5
b(ject)24 b(function,)k(whic)n(h)g(b)n(y)f(nature)g(requires)f(PHP)j(4)
e(due)h(to)g(ob)5 b(jects)27 b(b)r(eing)g(passed)g(b)n(y)g(reference.)
-300 2663 y Fd(4.1)112 b(xmlNo)s(de)-300 2816 y Fe(This)31
b(class)f(represen)n(ts)g(a)g(no)r(de)h(in)h(the)f(XML)h(do)r(cumen)n
(t.)47 b(It)32 b(consists)e(of)h(a)g(name)f(\(the)i(tag)f(name\),)h(an)
f(arra)n(y)d(of)j(attributes)g(\(k)n(ey)g(=>)-300 2916
y(v)-5 b(alue\),)28 b(an)f(arra)n(y)e(of)j(c)n(hild)f(no)r(des,)h(and)f
(a)g(p)r(oin)n(ter)g(to)h(the)g(paren)n(t)f(no)r(de,)g(if)h(an)n(y)-7
b(.)36 b(Only)28 b(the)g(ro)r(ot)e(no)r(de)i(has)f(a)g(NULL)h(paren)n
(t)f(no)r(de.)-175 3015 y(It)g(is)g(imp)r(ortan)n(t)g(to)g(remem)n(b)r
(er)g(that)h(an)f Fb(xmlNode)d Fe(ob)5 b(ject)27 b(do)r(es)g(not)g(ha)n
(v)n(e)f(an)n(y)h(metho)r(ds)g(itself.)37 b(It)28 b(is)f(merely)g(the)h
(represen)n(tation)d(of)-300 3115 y(the)j(prop)r(erties)f(of)g(a)g(no)r
(de)h(in)g(an)f(XML)h(do)r(cumen)n(t.)-300 3331 y Ff(4.1.1)94
b(xmlNo)s(de)29 b(Mem)m(b)s(er)h(V)-8 b(ariables)-175
3484 y Fa(\017)41 b Ff(string)31 b(name)26 b Fe(-)h(the)h(no)r(de)g
(elemen)n(t)g(name)f(from)g(the)h(tag)f(\(e.g.,)h(<Chec)n(klist>\))-175
3650 y Fa(\017)41 b Ff(arra)m(y\(string,)33 b(string\))e(attributes)d
Fe(-)f(an)g(arra)n(y)e(of)j(k)n(eys)e(to)i(v)-5 b(alues)27
b(represen)n(ting)f(the)i(attributes)f(of)h(the)g(no)r(de)-175
3816 y Fa(\017)41 b Ff(arra)m(y\(&xmlNo)s(de\))31 b(c)m(hildNo)s(des)26
b Fe(-)i(an)f(arra)n(y)e(of)j(xmlNo)r(de)f(ob)5 b(jects)27
b(that)h(are)f(the)h(immediate)g(c)n(hildren)f(of)g(a)g(no)r(de)-175
3982 y Fa(\017)41 b Ff(&xmlNo)s(de)29 b(paren)m(tNo)s(de)e
Fe(-)h(the)g(immediate)f(paren)n(t)g(xmlNo)r(de)h(ob)5
b(ject.)37 b(The)27 b(ro)r(ot)g(of)h(a)f(do)r(cumen)n(t)g(will)h(b)r(e)
g(NULL.)-175 4148 y Fa(\017)41 b Ff(string)31 b(data)d
Fe(-)g(The)f(data)g(con)n(tained)g(in)h(the)g(no)r(de)g(\(e.g.,)f(<V)-7
b(alue>This)27 b(is)g(the)h(data)f(for)g(this)h(V)-7
b(alue)27 b(no)r(de.</V)-7 b(alue>\))-300 4380 y Fd(4.2)112
b(xmlDo)s(c)-300 4534 y Fe(xmlDo)r(c)22 b(is)f(the)h(do)r(cumen)n(t)f
(class.)34 b(It)22 b(is)f(a)g(con)n(tainer)g(for)g(a)g(ro)r(ot)f(no)r
(de,)j(whic)n(h)e(con)n(tains)g(all)g(of)g(the)h(c)n(hild)g(elemen)n
(ts)f(of)g(the)h(XML)g(do)r(cumen)n(t.)-300 4633 y(This)k(class)f(is)h
(capable)f(of)h(building)g(the)g(DOMish)h(structure)e(from)h(a)f
(\034le)h(or)f(a)h(string.)36 b(It)26 b(can)g(also)e(repro)r(duce)h(an)
h(XML)g(do)r(cumen)n(t)g(from)-300 4733 y(the)i(DOMish)g(structure,)f
(whic)n(h)g(mak)n(es)g(the)h(xmlDo)r(c)f(class)g(ideal)g(for)g(p)r
(erforming)g(up)r(dates)h(to)f(the)h(no)r(des.)-300 4965
y Fd(4.3)112 b(xmlDo)s(c)36 b(Ob)6 b(ject)38 b(In)m(terface)-300
5118 y Fe(The)c(in)n(terface)f(for)h(the)g(XML)g(ob)5
b(jects)34 b(is)g(relativ)n(ely)e(minimal)j(at)e(this)i(p)r(oin)n(t.)56
b(It)34 b(will)h(probably)d(b)r(e)j(extended)f(and)g(enhanced)f(in)i
(the)-300 5218 y(future)28 b(as)f(is)g(necessary)-7 b(.)1929
5700 y(3)p eop
%%Page: 4 6
4 5 bop -300 90 a Ff(4.3.1)94 b(P)m(arsing)-175 243 y
Fa(\017)41 b Ff(v)m(oid)31 b(P)m(arseFile\(string)g(sFileName\))25
b Fe(-)i(P)n(arse)g(the)h(\034le)f(iden)n(ti\034ed)h(b)n(y)h
Fb(sFileName)24 b Fe(in)n(to)j(a)g(DOMish)h(structure)-175
409 y Fa(\017)41 b Ff(v)m(oid)31 b(P)m(arseString\(string)h(sXML\))c
Fe(-)f(P)n(arse)g(the)g(string)i Fb(sXML)c Fe(in)n(to)j(a)f(DOMish)h
(structure)-300 625 y Ff(4.3.2)94 b(Rendering)-175 778
y Fa(\017)41 b Ff(string)31 b(T)-8 b(oXML\(\))28 b Fe(-)f(Returns)h(an)
f(XML)h(string)f(represen)n(tation)e(of)j(the)g(curren)n(t)f(DOMish)g
(structure)-300 994 y Ff(4.3.3)94 b(Mo)s(difying)-175
1147 y Fa(\017)41 b Ff(v)m(oid)30 b(A)m(ddChildNo)s(de\(xmlNo)s(de)d
(&oP)m(aren)m(t,)32 b(string)e(sName,)f(arra)m(y)k(aA)m(ttributes\))27
b Fe(-)g(A)n(dds)g(a)f(c)n(hild)h(no)r(de)f(to)h(the)g(no)r(de)-92
1247 y(p)r(oin)n(ted)g(to)h(b)n(y)g Fb(oParent)p Fe(.)-300
1463 y Ff(4.3.4)94 b(Na)m(vigating)-175 1616 y Fa(\017)41
b Ff(v)m(oid)23 b(FindChildNo)s(de\(xmlNo)s(de)18 b(&oStart,)26
b(string)d(elemen)m(t\))18 b Fe(-)i(Recursiv)n(ely)f(searc)n(hes)f(for)
i(the)h(\034rst)f(no)r(de)g(with)h(an)f(elemen)n(t)-92
1716 y(name)25 b(of)33 b Fb(element)23 b Fe(starting)i(from)g(the)i
Fb(oStart)c Fe(no)r(de.)36 b(The)26 b Fb(xmlDoc->currentNo)o(de)19
b Fe(mem)n(b)r(er)26 b(will)g(p)r(oin)n(t)g(to)g(the)g(found)h(no)r
(de,)f(or)-92 1815 y(NULL)h(if)i(a)e(matc)n(hing)g(no)r(de)g(w)n(as)g
(not)g(found.)-175 1981 y Fa(\017)41 b Ff(v)m(oid)35
b(ListNo)s(des\(xmlNo)s(de)c(&oStart,)36 b(string)f(elemen)m(t,)e
(string)h(attribute,)i(string)f(v)-5 b(alue\))30 b Fe(-)h(Recursiv)n
(ely)e(retriev)n(es)f(a)-92 2081 y(list)k(of)h(all)f(no)r(des)g(with)h
(an)g(elemen)n(t)f(name)g(of)39 b Fb(element)30 b Fe(and)i(the)h
(attribute)g Fb(attribute)c Fe(is)j(equal)g(to)g Fb(value)f
Fe(starting)h(from)g(the)-92 2181 y Fb(oStart)25 b Fe(no)r(de)-300
2396 y Ff(4.3.5)94 b(Mem)m(b)s(er)29 b(V)-8 b(ariables)-175
2550 y Fa(\017)41 b Ff(&xmlNo)s(de)29 b(ro)s(ot)e Fe(-)g(the)h(ro)r(ot)
f(no)r(de)h(of)f(the)h(do)r(cumen)n(t,)g(if)g(an)n(y)-175
2716 y Fa(\017)41 b Ff(&xmlNo)s(de)29 b(curren)m(tNo)s(de)f
Fe(-)f(the)h(curren)n(t)f(no)r(de)g(p)r(oin)n(ter.)37
b(Also)27 b(used)g(as)g(the)h(result)g(for)f Fb(FindChildNode)-175
2882 y Fa(\017)41 b Ff(arra)m(y\(&xmlNo)s(de\))31 b(no)s(des)c
Fe(-)g(the)h(list)g(of)f(matc)n(hing)g(no)r(des)h(found)g(as)e(the)i
(result)g(of)f(a)g(call)h(to)f Fb(ListNodes)-300 3156
y Fg(5)131 b(Logic)44 b(La)l(y)l(er)-300 3338 y Fe(The)29
b(logic)f(la)n(y)n(er)f(\(represen)n(ted)g(mostly)i(b)n(y)f(the)h(b)r
(o*.php3)g(classes\))e(con)n(trols)h(what)g(op)r(erations)g(are)f(p)r
(erformed)i(for)f(eac)n(h)g(function.)41 b(F)-7 b(or)-300
3438 y(example,)34 b(the)g(b)r(oTimeCards.dbadd)d(metho)r(d)j(will)f
(accept)g(p)r(osted)g(form)g(data,)h(add)f(it)g(to)g(the)h(database,)f
(load)f(the)i(asso)r(ciated)e(w)n(ork)-300 3537 y(order,)f(c)n(hec)n(k)
g(the)h(time)g(card)f(status)g(against)g(the)h(w)n(ork)e(order)g
(status)i(\(and)f(c)n(hange)g(the)h(w)n(ork)e(order)g(if)i
(necessary\),)f(and)h(accum)n(ulate)-300 3637 y(the)c(time)h(card)e
(hours)h(with)g(the)h(existing)e(applied)h(w)n(ork)f(order)g(hours.)37
b(This)28 b(is)g(all)g(p)r(erformed)g(within)h(a)e(database)g
(transaction)g(as)g(w)n(ell)-300 3737 y(\(so)g(MySQL)g(users)g(are)g
(out)g(of)h(luc)n(k)f(un)n(til)h(the)g(transaction)e(supp)r(ort)h(b)r
(ecomes)g(commonplace\).)-175 3836 y(Just)21 b(remem)n(b)r(er)f(that)i
(the)f(b)r(o)g(classes)f(consume)h(the)h(db)f(and)g(h)n(tml)h(la)n(y)n
(ers.)33 b(The)21 b(logic)f(la)n(y)n(er)g(co)r(ordinates)g(the)h
(necessary)f(calls)g(b)r(et)n(w)n(een)-300 3936 y(the)28
b(la)n(y)n(ers,)e(although)g(some)h(h)n(tml)h(classes)f(ma)n(y)f
(require)h(access)f(to)i(db)f(classes.)-300 4210 y Fg(6)131
b(National)44 b(Language)f(Supp)t(ort)-300 4392 y Fe(Multiple)29
b(languages)e(are)g(supp)r(orted)i(with)g(the)g(use)f(of)g(string)g
(resource)f(\034les.)39 b(These)29 b(\034les)f(merely)g(de\034ne)h
(strings)e(used)i(within)g(DCL)g(as)-300 4492 y(constan)n(ts.)-300
4724 y Fd(6.1)112 b(Lo)s(cation)-300 4877 y Fe(The)32
b(string)f(resources)f(are)g(lo)r(cated)i(in)g Fb(<dcl_root>/str/)o
(<la)o(ng)o(uag)o(e>)25 b Fe(directories.)48 b Fb(<language>)28
b Fe(is)j(the)i(short)e(abbreviation)f(of)i(the)-300
4977 y(language)26 b(\(e.g.,)h(en)h(for)f(English,)h(it)g(for)f
(Italian,)g(sv)g(for)g(Sw)n(edish,)h(etc\).)-175 5077
y(Creating)e(a)g(new)h(translation)f(in)n(v)n(olv)n(es)g(cop)n(ying)g
(an)g(existing)h(set)g(for)g(a)g(language)e(y)n(ou)h(are)g(comfortable)
g(with)i(to)f(the)h(new)f(language)-300 5176 y(directory)-7
b(.)36 b(Then)27 b(translate)g(eac)n(h)g(string)f(in)i(the)g(\034le)g
(to)f(the)h(new)g(language.)-175 5276 y(In)d(the)h(future,)h(it)f(w)n
(ould)f(b)r(e)h(v)n(ery)e(b)r(ene\034cial)i(to)g(create)e(a)h(small)h
(w)n(eb)f(application)g(to)g(main)n(tain)h(and)f(generate)f(these)i
(resources)d(from)-300 5376 y(a)k(database.)36 b(This)27
b(could)h(b)r(e)g(made)f(a)n(v)-5 b(ailable)26 b(as)h(part)g(of)h(DCL,)
g(or)e(as)h(a)g(dev)n(elopmen)n(t)g(to)r(ol)h(for)f(it.)1929
5700 y(4)p eop
%%Page: 5 7
5 6 bop -300 90 a Fd(6.2)112 b(Naming)36 b(Con)m(v)m(en)m(tions)-300
243 y Fe(All)29 b(string)f(resource)e(\034les)j(are)e(giv)n(en)h(an)g
(abbreviated)g(name)g(equiv)-5 b(alen)n(t)28 b(to)g(the)h(area)e(of)i
(DCL)g(they)f(apply)h(to.)39 b(F)-7 b(or)28 b(example,)g(cfg.str)g(is)
-300 343 y(for)f(the)h(con\034guration)e(strings,)g(w)n(o.str)h(is)g
(for)g(w)n(ork)g(order)f(strings,)g(etc.)-175 443 y(The)c(strings)g
(de\034ned)h(in)g(the)g(resource)e(\034les)i(are)f(pre\034xed)g(with)h
Fb(STR_<resource_ab)o(br)o(evi)o(at)o(ion)o(>)p Fe(.)29
b(So,)23 b(the)h(cfg.str)e(strings)g(all)g(b)r(egin)-300
542 y(with)32 b Fb(STR_CFG_)p Fe(,)c(w)n(o.str)i(has)h
Fb(STR_WO_)p Fe(,)e(etc.)47 b(This)31 b(mak)n(es)f(it)i(v)n(ery)d(easy)
i(to)f(iden)n(tify)i(the)f(resources)e(in)j(the)f(co)r(de)g(and)g(whic)
n(h)g(\034le)g(they)-300 642 y(b)r(elong)c(to.)1929 5700
y(5)p eop
%%Page: 6 8
6 7 bop -300 90 a Fg(7)131 b(Database)43 b(Sc)l(hema)258
5423 y
 currentpoint currentpoint translate 0.54724 0.54724 scale neg exch
neg exch translate
 258 5423 a @beginspecial 0 @llx 0 @lly 742 @urx
1134 @ury 7420 @rwi @setspecial
%%BeginDocument: /usr/local/apache/htdocs/dcl/dcl/docs//DoubleChocoLatte.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ImageMark Software Labs
%%For: () ()
%%Title: E:\My Documents\DoubleChocoLatte.eps
%%CreationDate: () ()
%%BoundingBoxx: 0 0 1134 742
%%BoundingBox: 0 0 742 1134
%%DocumentProcessColors: Black
%%ColorUsage:Color
%%DocumentFonts: Helvetica
%%+Helvetica-Bold
%%+Helvetica-Oblique
%%+Helvetica-BoldOblique
%%+Times-Roman
%%+Times-Bold
%%+Times-Italic
%%+Times-BoldItalic
%%+Courier
%%+Courier-Bold
%%+Courier-Oblique
%%+Courier-BoldOblique
%%+Symbol
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_TemplateBox: 0 0 1134 742
%AI3_TileBox: 0 0 1134 742
%AI3_DocumentPreview: None
%%Template:
%%PageOrigin:0.0000 0.0000
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
 
AGM_Gradient_Sep_private begin
/initializeSeps{
	_noImage not _level2PS not and{
		/_whiteBytes 1 makeByte8 pt
		/knockOut{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}def
		/linealFill{
			mySave
			8 setImageParms
			_color{
				_nCustomColorSD begin
					cyan magenta yellow black
					_spotColor{
						spot1 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
						spot2 begin
							/tintImage tintValue 1 exch sub makeByte8 def
					 end
					}if
			 end
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 _nCustomColorSD ncolorimage
			}{
				_nCustomColorSD/black get 1 exch sub makeByte8 
				_nCustomColorSD bwImage
			}ifelse
			myRestore
		}def
	}{
		 /knockOut{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}def
	}ifelse
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk false def
			/magentaInk false def
			/yellowInk false def
			/blackInk false def
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{
				
			_fillSD begin
				exch
				dup spot1/name get eq{
					spot1 spot2
				}{
					spot2 spot1
				}ifelse
			 begin
				 begin
						/name xd
						1 exch sub /tintValue xd
						4{
							tintValue mul 4 1 roll
						}repeat
						_spotColor not{
							/tintValue null def
						}if
				 end
					/tintValue 0 def
			 end
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			renderCMYK
			{
				fillOvp
			}{
				spot1 begin
					gsave
					name null ne{
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					}{
						1 setgray
					}ifelse
					fillOvp 
					grestore
			 end
				spot2 begin
					name null ne{
						gsave
						true setoverprint
						spot_C spot_M spot_Y spot_K name tintValue setCustomColor
						fillOvp
						grestore
					}if
			 end
				newpath
			}ifelse
	 end
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		_rampSD begin
			_color{
				/cyanInk _cyanData 0 ne def
				/magentaInk _magentaData 0 ne def
				/yellowInk _yellowData 0 ne def
				/blackInk _blackData 0 ne def
				_nSamples setImageParms
				_nSamples expandSpot
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				true 4 _rampSD ncolorimage
			}{
				/cyanInk false def
				/magentaInk false def
				/yellowInk false def
				/blackInk true def
				_nSamples setImageParms 
				_blackData _rampSD bwImage
			}ifelse
	 end
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					false
					currentpagedevice/SeparationOrder get{name eq or}forall
					not
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK
				{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and
					{
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
}def
/initializeMultiPassSeps{
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	pt
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
		 begin
				name null eq{
					false
				}{
					spot_C spot_M spot_Y spot_K name ccThrough 
				}ifelse
		 end
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 200 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
	/linealImage _noImage{
		/rectImage load
	}{
		_producingSeps{
			AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			/rampImage load
		 end
		}{
			/rampImage load
		}ifelse
	}ifelse
	def
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient begin
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator
		 end
		 end
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		pop
	}{
		/_useShells true def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
		_producingSeps not and
	def
}def
/initializeLev1{
	/makeByte8{
		/_tmp 0 pt
		255 mul cvi
		8 string 8{
			dup _tmp 3 index put 
			/_tmp _tmp 1 add pt
		}repeat
		exch pop
	}def
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		_C0_Space _C1_Space eq{
			/_rampColorSpace _C0_Space pt
		}{
			(colorspace conflict!) ==
			showpage
			stop
		}ifelse
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			/Function 
				bd
					/FunctionType 3
					/Domain [0 1]
					/Functions _rampFuncsArray
					/Bounds _boundsArray
					/Encode _encodeArray
				ed
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	/fillRamp{ 
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		_rampFuncsArray _index
		bd
			/FunctionType 2
			/Domain [0 1]
			/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
			_gradType 0 eq{
				_invert{/C1}{/C0}ifelse _C0
				_invert{/C0}{/C1}ifelse _C1
			}{
				_invert{/C0}{/C1}ifelse _C1
				_invert{/C1}{/C0}ifelse _C0
			}ifelse
		ed
		put
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
	
	/radialRamp
		/fillRamp load def
	
	/rampImage
		/fillRamp load def
	
	AGM_Gradient begin
	/Bc{
		6 npop
	}def
	
 end
	
	
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	currentdict/rampImage known not{
		/rampImage{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}def
	}if
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			setrgbcolor 4 npop
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			3 -1 roll pop pop
			1 exch sub /_tmp xp
			3{
				1 exch sub _tmp mul 1 exch sub 3 1 roll
			}repeat
			setrgbcolor 
			4 npop
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData /_ndx cvx /get cvx
		_d255 /exch cvx /get cvx
		
		_usingSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_firstShell true pt
	_usingSmoothShade not{
		fill
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
			radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 3 index def
								/spot_K 4 index def
								/spot_Y 5 index def
								/spot_M 6 index def
								/spot_C 7 index def
						 end
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD begin
							spot1 begin
								/name 4 index def
								/spot_K 8 index def
								/spot_Y 9 index def
								/spot_M 10 index def
								/spot_C 11 index def
						 end
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 2 add index def
						/spot_Y _tmp 3 add index def
						/spot_M _tmp 4 add index def
						/spot_C _tmp 5 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD begin
				spot1 /name get ne{
					spot2 begin
						/name xd
						/spot_K _tmp 5 add index def
						/spot_Y _tmp 6 add index def
						/spot_M _tmp 7 add index def
						/spot_C _tmp 8 add index def
				 end
				}{
					pop
				}ifelse
		 end
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_rampSD begin
			_ccProcess _ccRGB or{
				_rampType 3 eq _rampType 6 eq or{
					spot2 begin
						/tintImage _gradType 0 eq{
							_tint2Data
						}{
							_tint1Data
						}ifelse
						def
						name null eq{
							/name /Black def
						}if
				 end
				}if
				spot1 begin
					/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
						_tint1Data
					}{
						_tint2Data
					}ifelse
					def
					_rampType 2 eq _rampType 5 eq or{
						name null eq{
							/name spot2 /name get def
							spot2 /name null put
						}if
					}{
						name null eq{
							/name /Black def
						}if
					}ifelse
			 end
			}if
	 end
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_usingSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
	/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
	0
	_nSamples
	[
	/dup cvx
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
currentdict/radialRamp known not{
	/radialRamp{
	
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		_rampPoint
	
		_nSamples 1 sub
	
		_nRadSamples 
		[
			/dup cvx
	
			_optimize{
				/round cvx /cvi cvx
			}if
	
			/_ndx /exch cvx /pt cvx
			
			_useShells{
				/_firstShell cvx{
					/_firstShell false pt
				}{
					0 0 3 index 360 0 arcn fill
				}/ifelse cvx
			}if
	
			blendColor
	
			_useShells{
				0 0 3 /index cvx 0 360 /arc cvx 
			}{
				0 0 3 /index cvx 0 360 /arc cvx /fill cvx
			}ifelse
	
			/exch cvx _bInc /add cvx /exch cvx
	
			_sInc /add cvx
	
			_radHilite{
				_xBCInc _yBCInc /translate cvx
			}if
		] cvx bind
		repeat
	
		pop pop
	
		_saveMatrix setmatrix
	
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_useShells _rampIndex 1 eq and{
			fill
		}if
		_spotColor{
			nsetcustomcolorend
		}if
	
		
	}def
}if
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c _d _x get _ ne def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 130/quotesinglbase 131/florin 132/quotedblbase
133/ellipsis 134/dagger 135/daggerdbl 136/circumflex 137/perthousand 
138/Scaron 139/guilsinglleft 140/OE 145/quoteleft 146/quoteright 
147/quotedblleft 148/quotedblright 149/bullet 150/endash 151/emdash 
152/tilde 153/trademark 154/scaron 155/guilsinglright 156/oe 157/dotlessi 
159/Ydieresis 164/currency 166/brokenbar 168/dieresis 169/copyright 
170/ordfeminine 172/logicalnot 174/registered 175/macron 176/ring 
177/plusminus 178/twosuperior 179/threesuperior 180/acute 181/mu 
183/periodcentered 184/cedilla 185/onesuperior 186/ordmasculine 
188/onequarter 189/onehalf 190/threequarters 192/Agrave 193/Aacute 
194/Acircumflex 195/Atilde 196/Adieresis 197/Aring 198/AE 199/Ccedilla 
200/Egrave 201/Eacute 202/Ecircumflex 203/Edieresis 204/Igrave 205/Iacute 
206/Icircumflex 207/Idieresis 208/Eth 209/Ntilde 210/Ograve 211/Oacute 
212/Ocircumflex 213/Otilde 214/Odieresis 215/multiply 216/Oslash 
217/Ugrave 218/Uacute 219/Ucircumflex 220/Udieresis 221/Yacute 222/Thorn 
223/germandbls 224/agrave 225/aacute 226/acircumflex 227/atilde 228/adieresis 
229/aring 230/ae 231/ccedilla 232/egrave 233/eacute 234/ecircumflex 
235/edieresis 236/igrave 237/iacute 238/icircumflex 239/idieresis 
240/eth 241/ntilde 242/ograve 243/oacute 244/ocircumflex 245/otilde 
246/odieresis 247/divide 248/oslash 249/ugrave 250/uacute 251/ucircumflex 
252/udieresis 253/yacute 254/thorn 255/ydieresis
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[
/_Helvetica/Helvetica 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Bold Helvetica-Bold
[
/_Helvetica-Bold/Helvetica-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-Oblique Helvetica-Oblique
[
/_Helvetica-Oblique/Helvetica-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Helvetica-BoldOblique Helvetica-BoldOblique
[
/_Helvetica-BoldOblique/Helvetica-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Roman Times-Roman
[
/_Times-Roman/Times-Roman 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Bold Times-Bold
[
/_Times-Bold/Times-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-Italic Times-Italic
[
/_Times-Italic/Times-Italic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Times-BoldItalic Times-BoldItalic
[
/_Times-BoldItalic/Times-BoldItalic 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier Courier
[
/_Courier/Courier 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Bold Courier-Bold
[
/_Courier-Bold/Courier-Bold 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-Oblique Courier-Oblique
[
/_Courier-Oblique/Courier-Oblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Courier-BoldOblique Courier-BoldOblique
[
/_Courier-BoldOblique/Courier-BoldOblique 0 0 1 TZ
%AI3_EndEncoding AdobeType
%AI3_BeginEncoding: _Symbol Symbol
[
/_Symbol/Symbol 0 0 1 TZ
%AI3_EndEncoding AdobeType
%%EndSetup
742 0 translate
90 rotate
1 XR

u
  0.000 0.000 0.000 0.196 k
 [] 0 d
0.5000 w
  0.000 0.000 0.000 1.000 K
1 j
  983.9599 453.9967 m
  1054.0367 453.9967 L
  1054.0367 473.9499 L
  983.9599 473.9499 L
  983.9599 453.9967 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 1000.7880 460.9683 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
  0.000 0.000 0.000 1.000 K
0 j
  0.000 0.000 0.000 1.000 k
(watches\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  983.9599 361.9232 m
  1054.0367 361.9232 L
  1054.0367 453.9967 L
  983.9599 453.9967 L
  983.9599 361.9232 L
F
U
u
0.5000 w
1 J
  983.9599 361.9232 m
  1054.0367 361.9232 L
  1054.0367 453.9967 L
  983.9599 453.9967 L
  983.9599 361.9232 L
S
U
u
  1008.7212 361.9232 m
  1008.7212 453.9967 L
S
U
u
  983.9599 434.1636 m
  1054.0367 434.1636 L
S
U
u
1.0000 w
  1012.6878 439.8130 m
  1050.0701 439.8130 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 987.9265 440.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 440.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(watchid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 416.8548 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(typeid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 404.9549 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(whatid1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 392.9349 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(whatid2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 380.9149 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(whoid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1012.6878 368.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(actions\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  551.9599 720.0000 m
  615.4257 720.0000 L
  615.4257 739.9533 L
  551.9599 739.9533 L
  551.9599 720.0000 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 555.9265 726.9716 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(departments\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  551.9599 651.9666 m
  615.4257 651.9666 L
  615.4257 720.0000 L
  551.9599 720.0000 L
  551.9599 651.9666 L
F
U
u
0.5000 w
  551.9599 651.9666 m
  615.4257 651.9666 L
  615.4257 720.0000 L
  551.9599 720.0000 L
  551.9599 651.9666 L
S
U
u
  576.7212 651.9666 m
  576.7212 720.0000 L
S
U
u
  551.9599 699.6861 m
  615.4257 699.6861 L
S
U
u
1.0000 w
  580.6878 705.8164 m
  589.5826 705.8164 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 555.9265 706.8982 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 580.6878 706.8982 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 580.6878 682.9783 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 580.6878 670.9583 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 580.6878 658.9382 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  977.9499 689.7095 m
  1042.9783 689.7095 L
  1042.9783 709.6628 L
  977.9499 709.6628 L
  977.9499 689.7095 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 990.4508 696.6811 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(accounts\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  977.9499 489.5760 m
  1042.9783 489.5760 L
  1042.9783 689.7095 L
  977.9499 689.7095 L
  977.9499 489.5760 L
F
U
u
0.5000 w
  977.9499 489.5760 m
  1042.9783 489.5760 L
  1042.9783 689.7095 L
  977.9499 689.7095 L
  977.9499 489.5760 L
S
U
u
  1002.7112 489.5760 m
  1002.7112 689.7095 L
S
U
u
  977.9499 670.9583 m
  1042.9783 670.9583 L
S
U
u
1.0000 w
  1006.6778 675.6461 m
  1015.5726 675.6461 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 981.9165 676.7279 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 676.7279 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 652.6878 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 640.6678 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 628.7679 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(add1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 616.7479 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(add2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 604.7279 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(city\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 592.7078 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(state\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 580.6878 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(zip\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 568.6678 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contact\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 556.6477 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(voice\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 544.7479 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(fax\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 532.7279 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(data1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 520.7078 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(data2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 508.6878 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(notes\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1006.6778 496.6678 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  166.7179 475.9933 m
  227.7796 475.9933 L
  227.7796 495.9466 L
  166.7179 495.9466 L
  166.7179 475.9933 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 178.7379 482.8447 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(statuses\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  166.7179 407.9599 m
  227.7796 407.9599 L
  227.7796 475.9933 L
  166.7179 475.9933 L
  166.7179 407.9599 L
F
U
u
0.5000 w
  166.7179 407.9599 m
  227.7796 407.9599 L
  227.7796 475.9933 L
  166.7179 475.9933 L
  166.7179 407.9599 L
S
U
u
  191.4791 407.9599 m
  191.4791 475.9933 L
S
U
u
  166.7179 455.5593 m
  227.7796 455.5593 L
S
U
u
1.0000 w
  195.4457 461.9299 m
  204.3406 461.9299 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 170.6845 463.0117 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.4457 463.0117 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.4457 438.9716 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.4457 426.9516 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 195.4457 414.9316 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  377.6694 387.5259 m
  456.1603 387.5259 L
  456.1603 407.5993 L
  377.6694 407.5993 L
  377.6694 387.5259 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 397.7429 394.4975 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(products\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  377.6694 271.4124 m
  456.1603 271.4124 L
  456.1603 387.5259 L
  377.6694 387.5259 L
  377.6694 271.4124 L
F
U
u
0.5000 w
  377.6694 271.4124 m
  456.1603 271.4124 L
  456.1603 387.5259 L
  377.6694 387.5259 L
  377.6694 271.4124 L
S
U
u
  407.1185 271.4124 m
  407.1185 387.5259 L
S
U
u
  377.6694 368.1736 m
  456.1603 368.1736 L
S
U
u
1.0000 w
  410.9649 373.4624 m
  419.8598 373.4624 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 381.6361 374.5442 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 374.5442 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 350.5042 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 338.4841 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.6361 326.5843 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 326.5843 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(reportto\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 314.5643 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.6361 302.5442 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 302.5442 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(ticketsto\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.6361 290.5242 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 290.5242 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(wosetid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 381.6361 278.5042 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 410.9649 278.5042 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tcksetid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  1034.5643 305.9098 m
  1125.6761 305.9098 L
  1125.6761 325.9833 L
  1034.5643 325.9833 L
  1034.5643 305.9098 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 1060.1669 313.0017 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(faqtopics\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  1034.5643 165.9967 m
  1125.6761 165.9967 L
  1125.6761 305.9098 L
  1034.5643 305.9098 L
  1034.5643 165.9967 L
F
U
u
0.5000 w
  1034.5643 165.9967 m
  1125.6761 165.9967 L
  1125.6761 305.9098 L
  1034.5643 305.9098 L
  1034.5643 165.9967 L
S
U
u
  1063.8932 165.9967 m
  1063.8932 305.9098 L
S
U
u
  1034.5643 286.7980 m
  1125.6761 286.7980 L
S
U
u
1.0000 w
  1067.9800 291.8464 m
  1100.6745 291.8464 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 1038.5309 292.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 292.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(topicid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 268.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1038.5309 256.9883 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 256.9883 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(faqid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 244.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 232.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(description\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 220.9282 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 208.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 196.8881 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 184.9883 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 172.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  908.5943 301.9432 m
  989.4891 301.9432 L
  989.4891 322.0167 L
  908.5943 322.0167 L
  908.5943 301.9432 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 942.0100 308.9149 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(faq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  908.5943 185.8297 m
  989.4891 185.8297 L
  989.4891 301.9432 L
  908.5943 301.9432 L
  908.5943 185.8297 L
F
U
u
0.5000 w
  908.5943 185.8297 m
  989.4891 185.8297 L
  989.4891 301.9432 L
  908.5943 301.9432 L
  908.5943 185.8297 L
S
U
u
  933.3556 185.8297 m
  933.3556 301.9432 L
S
U
u
  908.5943 282.5910 m
  989.4891 282.5910 L
S
U
u
1.0000 w
  937.3222 287.8798 m
  961.2421 287.8798 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 912.5609 288.9616 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 288.9616 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(faqid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 264.9215 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 253.0217 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 241.0017 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 228.9816 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 216.9616 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 204.9416 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 937.3222 192.9215 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(description\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  240.5209 474.7913 m
  353.9900 474.7913 L
  353.9900 494.7446 L
  240.5209 494.7446 L
  240.5209 474.7913 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 272.4942 481.7629 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(workorders\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  240.5209 106.7379 m
  353.9900 106.7379 L
  353.9900 474.7913 L
  240.5209 474.7913 L
  240.5209 106.7379 L
F
U
u
0.5000 w
  240.5209 106.7379 m
  353.9900 106.7379 L
  353.9900 474.7913 L
  240.5209 474.7913 L
  240.5209 106.7379 L
S
U
u
  286.3172 106.7379 m
  286.3172 474.7913 L
S
U
u
  240.5209 444.1402 m
  353.9900 444.1402 L
S
U
u
1.0000 w
  290.2838 460.7279 m
  304.7078 460.7279 L
S
U
u
  290.2838 448.7078 m
  307.4725 448.7078 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 461.8097 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK,FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 461.8097 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(jcn\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 449.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 449.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 425.7496 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 425.7496 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(product\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 413.7295 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 413.7295 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(account\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 401.8297 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 401.8297 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 389.8097 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createdon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 377.7896 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 377.7896 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(closedby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 365.7696 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(closedon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 353.7496 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK9\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 353.7496 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(status\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 341.7295 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(statuson\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 329.8297 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(lastactionon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 317.8097 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(deadlineon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 305.7896 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(eststarton\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 293.7696 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(estendon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 281.7496 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(starton\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 269.7295 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(esthours\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 257.8297 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(totalhours\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 245.8097 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 245.8097 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(priority\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 233.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 233.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(severity\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 221.7696 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contact\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 209.7496 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contactphone\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 197.7295 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(summary\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 185.7095 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(notes\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 173.8097 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(description\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 244.4875 161.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 161.7896 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(responsible\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 149.7696 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(revision\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 137.7496 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(publicview\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 125.7295 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(oid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 290.2838 113.7095 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(etchours\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  676.7279 197.8497 m
  767.9599 197.8497 L
  767.9599 217.9232 L
  676.7279 217.9232 L
  676.7279 197.8497 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 700.6477 204.9416 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(timecards\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  676.7279 33.8965 m
  767.9599 33.8965 L
  767.9599 197.8497 L
  676.7279 197.8497 L
  676.7279 33.8965 L
F
U
u
0.5000 w
  676.7279 33.8965 m
  767.9599 33.8965 L
  767.9599 197.8497 L
  676.7279 197.8497 L
  676.7279 33.8965 L
S
U
u
  706.0568 33.8965 m
  706.0568 197.8497 L
S
U
u
  676.7279 179.0985 m
  767.9599 179.0985 L
S
U
u
1.0000 w
  710.0234 183.9065 m
  718.9182 183.9065 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 184.9883 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 184.9883 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 160.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 160.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(jcn\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 148.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 148.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 136.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(actionon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 124.8881 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(inputon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(actionby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 100.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 100.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(status\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 680.6945 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(action\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 76.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(hours\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 64.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(summary\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 52.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(description\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 710.0234 40.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(revision\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  527.0785 125.8497 m
  612.6611 125.8497 L
  612.6611 145.9232 L
  527.0785 145.9232 L
  527.0785 125.8497 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 534.0501 132.9416 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(ticketresolutions\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  527.0785 21.8765 m
  612.6611 21.8765 L
  612.6611 125.8497 L
  527.0785 125.8497 L
  527.0785 21.8765 L
F
U
u
0.5000 w
  527.0785 21.8765 m
  612.6611 21.8765 L
  612.6611 125.8497 L
  527.0785 125.8497 L
  527.0785 21.8765 L
S
U
u
  556.2871 21.8765 m
  556.2871 125.8497 L
S
U
u
  527.0785 106.4975 m
  612.6611 106.4975 L
S
U
u
1.0000 w
  560.3740 111.7863 m
  584.1736 111.7863 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 531.0451 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(resid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 531.0451 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(ticketid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 531.0451 76.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 76.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(loggedby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 64.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(loggedon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 531.0451 52.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 52.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(status\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 40.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(resolution\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 560.3740 28.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(startedon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  521.9098 259.8731 m
  617.8297 259.8731 L
  617.8297 279.9466 L
  521.9098 279.9466 L
  521.9098 259.8731 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 545.1085 266.8447 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(projectmap\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  521.9098 191.8397 m
  617.8297 191.8397 L
  617.8297 259.8731 L
  521.9098 259.8731 L
  521.9098 191.8397 L
F
U
u
0.5000 w
  521.9098 191.8397 m
  617.8297 191.8397 L
  617.8297 259.8731 L
  521.9098 259.8731 L
  521.9098 191.8397 L
S
U
u
  567.7062 191.8397 m
  567.7062 259.8731 L
S
U
u
  521.9098 212.2738 m
  617.8297 212.2738 L
S
U
u
1.0000 w
  571.6728 245.9299 m
  613.8631 245.9299 L
S
U
u
  571.6728 233.9098 m
  586.0968 233.9098 L
S
U
u
  571.6728 221.8898 m
  588.8614 221.8898 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 525.8765 247.0117 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK,FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 571.6728 247.0117 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(projectid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 525.8765 234.9917 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(PK,FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 571.6728 234.9917 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(jcn\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 525.8765 222.9716 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(PK,FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 571.6728 222.9716 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  908.9549 125.8497 m
  998.6244 125.8497 L
  998.6244 145.9232 L
  908.9549 145.9232 L
  908.9549 125.8497 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 928.1870 132.9416 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(faqanswers\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  908.9549 9.8564 m
  998.6244 9.8564 L
  998.6244 125.8497 L
  908.9549 125.8497 L
  908.9549 9.8564 L
F
U
u
0.5000 w
  908.9549 9.8564 m
  998.6244 9.8564 L
  998.6244 125.8497 L
  908.9549 125.8497 L
  908.9549 9.8564 L
S
U
u
  938.2838 9.8564 m
  938.2838 125.8497 L
S
U
u
  908.9549 106.6177 m
  998.6244 106.6177 L
S
U
u
1.0000 w
  942.2504 111.7863 m
  985.6427 111.7863 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 912.9215 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 112.8681 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(answerid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 912.9215 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 88.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(questionid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 76.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(answertext\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 64.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 52.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 40.8681 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 28.9683 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 942.2504 16.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  788.3940 305.9098 m
  893.9299 305.9098 L
  893.9299 325.9833 L
  788.3940 325.9833 L
  788.3940 305.9098 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 823.6127 313.0017 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(projects\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  788.3940 153.9766 m
  893.9299 153.9766 L
  893.9299 305.9098 L
  788.3940 305.9098 L
  788.3940 153.9766 L
F
U
u
0.5000 w
  788.3940 153.9766 m
  893.9299 153.9766 L
  893.9299 305.9098 L
  788.3940 305.9098 L
  788.3940 153.9766 L
S
U
u
  813.2755 153.9766 m
  813.2755 305.9098 L
S
U
u
  788.3940 286.9182 m
  893.9299 286.9182 L
S
U
u
1.0000 w
  817.2421 291.8464 m
  859.3122 291.8464 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 792.3606 292.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 292.9282 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(projectid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 792.3606 268.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(U1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 268.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 256.9883 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(reportto\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 244.9683 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createdby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 232.9482 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createdon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 220.9282 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(projectdeadline\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 208.9082 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(description\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 196.8881 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(status\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 184.9883 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(lastactivity\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 172.9683 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(finalclose\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 817.2421 160.9482 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(parentprojectid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  458.8047 601.6027 m
  546.7913 601.6027 L
  546.7913 621.5559 L
  458.8047 621.5559 L
  458.8047 601.6027 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 480.9215 608.5743 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(personnel\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  458.8047 461.5693 m
  546.7913 461.5693 L
  546.7913 601.6027 L
  458.8047 601.6027 L
  458.8047 461.5693 L
F
U
u
0.5000 w
  458.8047 461.5693 m
  546.7913 461.5693 L
  546.7913 601.6027 L
  458.8047 601.6027 L
  458.8047 461.5693 L
S
U
u
  488.1336 461.5693 m
  488.1336 601.6027 L
S
U
u
  458.8047 582.3706 m
  546.7913 582.3706 L
S
U
u
1.0000 w
  492.1002 587.4190 m
  500.9950 587.4190 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 462.7713 588.5008 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 588.5008 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 462.7713 564.4608 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(U1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 564.4608 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 552.5609 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(lastname\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 540.5409 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(firstname\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 528.5209 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(reportto\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 462.7713 516.5008 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 516.5008 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(department\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 504.4808 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(pwd\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 492.4608 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(security\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 480.5609 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(email\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 492.1002 468.5409 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  822.2905 625.5225 m
  863.8798 625.5225 L
  863.8798 645.4758 L
  822.2905 645.4758 L
  822.2905 625.5225 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 836.7145 632.4942 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(jcn\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  822.2905 581.5292 m
  863.8798 581.5292 L
  863.8798 625.5225 L
  822.2905 625.5225 L
  822.2905 581.5292 L
F
U
u
0.5000 w
  822.2905 581.5292 m
  863.8798 581.5292 L
  863.8798 625.5225 L
  822.2905 625.5225 L
  822.2905 581.5292 L
S
U
u
  847.1720 581.5292 m
  847.1720 625.5225 L
S
U
u
  822.2905 603.5259 m
  863.8798 603.5259 L
S
U
u
1.0000 w
  851.1386 611.4591 m
  859.9132 611.4591 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 826.2571 612.5409 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.1386 612.5409 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  533.9299 385.9633 m
  594.9917 385.9633 L
  594.9917 406.0367 L
  533.9299 406.0367 L
  533.9299 385.9633 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 548.7145 392.9349 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(actions\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  533.9299 317.9299 m
  594.9917 317.9299 L
  594.9917 385.9633 L
  533.9299 385.9633 L
  533.9299 317.9299 L
F
U
u
0.5000 w
  533.9299 317.9299 m
  594.9917 317.9299 L
  594.9917 385.9633 L
  533.9299 385.9633 L
  533.9299 317.9299 L
S
U
u
  558.6912 317.9299 m
  558.6912 385.9633 L
S
U
u
  533.9299 365.5292 m
  594.9917 365.5292 L
S
U
u
1.0000 w
  562.6578 371.8998 m
  571.5526 371.8998 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 537.8965 372.9816 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 562.6578 372.9816 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 562.6578 348.9416 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 562.6578 336.9215 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 562.6578 325.0217 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  67.6728 274.5376 m
  164.9149 274.5376 L
  164.9149 294.6110 L
  67.6728 294.6110 L
  67.6728 274.5376 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 102.0501 281.6294 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(tickets\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  67.6728 14.5442 m
  164.9149 14.5442 L
  164.9149 274.5376 L
  67.6728 274.5376 L
  67.6728 14.5442 L
F
U
u
0.5000 w
  67.6728 14.5442 m
  164.9149 14.5442 L
  164.9149 274.5376 L
  67.6728 274.5376 L
  67.6728 14.5442 L
S
U
u
  97.1219 14.5442 m
  97.1219 274.5376 L
S
U
u
  67.6728 256.0267 m
  164.9149 256.0267 L
S
U
u
1.0000 w
  101.0885 260.4741 m
  135.9466 260.4741 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 261.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 261.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(ticketid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 237.6361 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK6\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 237.6361 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(product\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 225.6160 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 225.6160 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(account\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 213.5960 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK2\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 213.5960 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createdby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 201.5760 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createdon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 189.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK3\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 189.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(responsible\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 177.6561 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK4\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 177.6561 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(closedby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 165.6361 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(closedon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 153.6160 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK8\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 153.6160 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(status\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 141.5960 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(statuson\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 129.5760 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(lastactionon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 117.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK5\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 117.5559 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(priority\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 71.6394 105.6561 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK7\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 105.6561 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(type\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 93.6361 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contact\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 81.6160 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contactphone\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 69.5960 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(issue\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 57.5760 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(version\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 45.5559 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(summary\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 33.6561 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seconds\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 101.0885 21.6361 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(contactemail\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  313.8431 661.1018 m
  376.1068 661.1018 L
  376.1068 681.0551 L
  313.8431 681.0551 L
  313.8431 661.1018 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 317.8097 668.0735 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(attributesets\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  313.8431 593.0684 m
  376.1068 593.0684 L
  376.1068 661.1018 L
  313.8431 661.1018 L
  313.8431 593.0684 L
F
U
u
0.5000 w
  313.8431 593.0684 m
  376.1068 593.0684 L
  376.1068 661.1018 L
  313.8431 661.1018 L
  313.8431 593.0684 L
S
U
u
  338.6043 593.0684 m
  338.6043 661.1018 L
S
U
u
  313.8431 640.6678 m
  376.1068 640.6678 L
S
U
u
1.0000 w
  342.5710 646.9182 m
  351.4658 646.9182 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 317.8097 648.0000 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.5710 648.0000 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.5710 624.0801 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.5710 612.0601 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 342.5710 600.0401 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  817.6027 447.0250 m
  904.3873 447.0250 L
  904.3873 467.0985 L
  817.6027 467.0985 L
  817.6027 447.0250 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 848.6144 454.1169 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(views\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  817.6027 354.9516 m
  904.3873 354.9516 L
  904.3873 447.0250 L
  817.6027 447.0250 L
  817.6027 354.9516 L
F
U
u
0.5000 w
  817.6027 354.9516 m
  904.3873 354.9516 L
  904.3873 447.0250 L
  817.6027 447.0250 L
  817.6027 354.9516 L
S
U
u
  847.0518 354.9516 m
  847.0518 447.0250 L
S
U
u
  817.6027 427.3122 m
  904.3873 427.3122 L
S
U
u
1.0000 w
  851.0184 432.9616 m
  881.6694 432.9616 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 821.5693 434.0434 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 434.0434 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(viewid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 821.5693 410.0033 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 410.0033 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(whoid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 398.1035 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 386.0835 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(ispublic\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 374.0634 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(viewurl\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 851.0184 362.0434 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(tablename\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  1034.5643 129.9366 m
  1131.3255 129.9366 L
  1131.3255 149.8898 L
  1034.5643 149.8898 L
  1034.5643 129.9366 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 1054.6377 136.9082 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(faqquestions\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  1034.5643 1.9232 m
  1131.3255 1.9232 L
  1131.3255 129.9366 L
  1034.5643 129.9366 L
  1034.5643 1.9232 L
F
U
u
0.5000 w
  1034.5643 1.9232 m
  1131.3255 1.9232 L
  1131.3255 129.9366 L
  1034.5643 129.9366 L
  1034.5643 1.9232 L
S
U
u
  1063.8932 1.9232 m
  1063.8932 129.9366 L
S
U
u
  1034.5643 110.8247 m
  1131.3255 110.8247 L
S
U
u
1.0000 w
  1067.9800 115.7529 m
  1118.4641 115.7529 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 1038.5309 116.8347 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 116.8347 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(questionid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 92.9149 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(seq\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1038.5309 80.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 80.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(topicid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 68.8748 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(questiontext\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 56.8548 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 44.8347 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(createon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 32.9349 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyby\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 20.9149 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(modifyon\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 1067.9800 8.8948 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  29.8097 655.9332 m
  115.3923 655.9332 L
  115.3923 676.0067 L
  29.8097 676.0067 L
  29.8097 655.9332 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 35.6995 662.9048 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(attributesetsmap\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  29.8097 587.8998 m
  115.3923 587.8998 L
  115.3923 655.9332 L
  29.8097 655.9332 L
  29.8097 587.8998 L
F
U
u
0.5000 w
  29.8097 587.8998 m
  115.3923 587.8998 L
  115.3923 655.9332 L
  29.8097 655.9332 L
  29.8097 587.8998 L
S
U
u
  75.6060 587.8998 m
  75.6060 655.9332 L
S
U
u
  29.8097 608.3339 m
  115.3923 608.3339 L
S
U
u
1.0000 w
  79.5726 641.8698 m
  102.8915 641.8698 L
S
U
u
  79.5726 629.9699 m
  108.9015 629.9699 L
S
U
u
  79.5726 617.9499 m
  104.9349 617.9499 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 33.7763 642.9516 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK,FK1\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.5726 642.9516 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(setid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.7763 630.9316 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.5726 630.9316 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(typeid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 33.7763 619.0317 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.5726 619.0317 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(keyid\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 79.5726 594.9917 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(weight\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  1.8030 482.9649 m
  66.3506 482.9649 L
  66.3506 503.0384 L
  1.8030 503.0384 L
  1.8030 482.9649 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 13.1018 490.0568 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(severities\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  1.8030 403.1519 m
  66.3506 403.1519 L
  66.3506 482.9649 L
  1.8030 482.9649 L
  1.8030 403.1519 L
F
U
u
0.5000 w
  1.8030 403.1519 m
  66.3506 403.1519 L
  66.3506 482.9649 L
  1.8030 482.9649 L
  1.8030 403.1519 L
S
U
u
  26.6845 403.1519 m
  26.6845 482.9649 L
S
U
u
  1.8030 463.1319 m
  66.3506 463.1319 L
S
U
u
1.0000 w
  30.6511 469.0217 m
  39.4257 469.0217 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 5.7696 470.1035 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.6511 470.1035 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.6511 446.0634 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.6511 434.0434 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.6511 422.0234 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(weight\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 30.6511 410.0033 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.196 k
0.5000 w
1 j
  696.5609 482.9649 m
  761.1085 482.9649 L
  761.1085 503.0384 L
  696.5609 503.0384 L
  696.5609 482.9649 L
B
U
0 To
1.0000 0.0000 0.0000 1.0000 709.9032 490.0568 0 Tp
TP
/_Helvetica 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(priorities\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
  0.000 0.000 0.000 0.000 k
1 j
  696.5609 403.1519 m
  761.1085 403.1519 L
  761.1085 482.9649 L
  696.5609 482.9649 L
  696.5609 403.1519 L
F
U
u
0.5000 w
  696.5609 403.1519 m
  761.1085 403.1519 L
  761.1085 482.9649 L
  696.5609 482.9649 L
  696.5609 403.1519 L
S
U
u
  721.3222 403.1519 m
  721.3222 482.9649 L
S
U
u
  696.5609 463.1319 m
  761.1085 463.1319 L
S
U
u
1.0000 w
  725.2888 469.0217 m
  734.1836 469.0217 L
S
U
0 To
1.0000 0.0000 0.0000 1.0000 700.5275 470.1035 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
0.0000 w
0 j
  0.000 0.000 0.000 1.000 k
(PK\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 725.2888 470.1035 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(id\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 725.2888 446.0634 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(short\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 725.2888 434.0434 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(name\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 725.2888 422.0234 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(weight\r) Tx
TO
  0.000 0.000 0.000 1.000 K
0 To
1.0000 0.0000 0.0000 1.0000 725.2888 410.0033 0 Tp
TP
/_Helvetica-Bold 10.0000 Tf
0.0000 Tc
 0 Tr
  0.000 0.000 0.000 1.000 k
(active\r) Tx
TO
  0.000 0.000 0.000 1.000 K
u
1.0000 w
1 j
  590.0634 642.9516 m
  590.0634 507.0050 L
  546.7913 507.0050 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  584.8948 641.6294 m
  590.0634 651.9666 L
  595.2321 641.6294 L
  584.8948 641.6294 L
F
U
u
1.0000 w
  604.0067 362.2838 m
  745.4825 362.2838 L
  745.4825 217.9232 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  605.3289 357.1152 m
  594.9917 362.2838 L
  605.3289 367.4524 L
  605.3289 357.1152 L
F
U
u
1.0000 w
  209.8698 398.9449 m
  209.8698 50.1235 L
  527.0785 50.1235 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  204.7012 397.6227 m
  209.8698 407.9599 L
  215.0384 397.6227 L
  204.7012 397.6227 L
F
U
u
1.0000 w
  179.3389 398.9449 m
  179.3389 225.1352 L
  164.9149 225.1352 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  174.1703 397.6227 m
  179.3389 407.9599 L
  184.5075 397.6227 L
  174.1703 397.6227 L
F
U
u
1.0000 w
  197.4891 398.9449 m
  197.4891 88.7078 L
  509.0484 88.7078 L
  509.0484 163.9533 L
  649.6828 163.9533 L
  649.6828 126.5710 L
  676.7279 126.5710 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  192.3205 397.6227 m
  197.4891 407.9599 L
  202.6578 397.6227 L
  192.3205 397.6227 L
F
U
u
1.0000 w
  236.9149 451.3523 m
  240.5209 451.3523 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  238.1169 446.1836 m
  227.7796 451.3523 L
  238.1169 456.5209 L
  238.1169 446.1836 L
F
U
u
1.0000 w
  968.9349 633.5760 m
  881.9098 633.5760 L
  881.9098 563.3790 L
  564.7012 563.3790 L
  564.7012 443.5392 L
  372.0200 443.5392 L
  372.0200 512.7746 L
  322.9783 512.7746 L
  322.9783 494.7446 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  967.6127 638.7446 m
  977.9499 633.5760 L
  967.6127 628.5275 L
  967.6127 638.7446 L
F
U
u
1.0000 w
  813.2755 613.7429 m
  564.7012 613.7429 L
  564.7012 443.5392 L
  394.1369 443.5392 L
  394.1369 575.0384 L
  297.6160 575.0384 L
  297.6160 494.7446 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  811.9533 618.9115 m
  822.2905 613.7429 L
  811.9533 608.5743 L
  811.9533 618.9115 L
F
U
u
1.0000 w
  449.7896 478.1569 m
  353.9900 478.1569 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 483.2053 m
  458.8047 478.1569 L
  448.4674 472.9883 L
  448.4674 483.2053 L
F
U
u
1.0000 w
  449.7896 467.2187 m
  353.9900 467.2187 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 472.3873 m
  458.8047 467.2187 L
  448.4674 462.0501 L
  448.4674 472.3873 L
F
U
u
1.0000 w
  449.7896 489.0952 m
  353.9900 489.0952 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 494.2638 m
  458.8047 489.0952 L
  448.4674 483.9265 L
  448.4674 494.2638 L
F
U
u
1.0000 w
  687.4257 425.0284 m
  353.9900 425.0284 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  686.2237 430.1970 m
  696.5609 425.0284 L
  686.2237 419.8598 L
  686.2237 430.1970 L
F
U
u
1.0000 w
  368.6544 339.4457 m
  353.9900 339.4457 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  367.3322 344.6144 m
  377.6694 339.4457 L
  367.3322 334.2771 L
  367.3322 344.6144 L
F
U
u
1.0000 w
  34.3773 512.0534 m
  34.3773 530.0835 L
  272.2538 530.0835 L
  272.2538 494.7446 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  39.4257 513.3756 m
  34.3773 503.0384 L
  29.2087 513.3756 L
  39.4257 513.3756 L
F
U
u
1.0000 w
  363.0050 229.4624 m
  521.9098 229.4624 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  364.3272 224.2938 m
  353.9900 229.4624 L
  364.3272 234.6311 L
  364.3272 224.2938 L
F
U
u
1.0000 w
  363.0050 178.3773 m
  676.7279 178.3773 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  364.3272 173.2087 m
  353.9900 178.3773 L
  364.3272 183.5459 L
  364.3272 173.2087 L
F
U
u
1.0000 w
  385.1219 637.0618 m
  425.0284 637.0618 L
  425.0284 407.5993 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  386.4441 631.8932 m
  376.1068 637.0618 L
  386.4441 642.2304 L
  386.4441 631.8932 L
F
U
u
1.0000 w
  385.1219 615.0651 m
  409.5225 615.0651 L
  409.5225 407.5993 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  386.4441 609.8965 m
  376.1068 615.0651 L
  386.4441 620.2337 L
  386.4441 609.8965 L
F
U
u
1.0000 w
  449.7896 514.5776 m
  440.5342 514.5776 L
  440.5342 407.5993 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 519.7462 m
  458.8047 514.5776 L
  448.4674 509.4090 L
  448.4674 519.7462 L
F
U
u
1.0000 w
  449.7896 595.1119 m
  385.9633 595.1119 L
  385.9633 407.5993 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 600.2805 m
  458.8047 595.1119 L
  448.4674 589.9432 L
  448.4674 600.2805 L
F
U
u
1.0000 w
  417.0952 262.3973 m
  417.0952 88.7078 L
  191.8397 88.7078 L
  191.8397 109.6227 L
  164.9149 109.6227 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  411.9265 261.0751 m
  417.0952 271.4124 L
  422.2638 261.0751 L
  411.9265 261.0751 L
F
U
u
1.0000 w
  998.5042 253.9833 m
  1034.5643 253.9833 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  999.8264 248.8147 m
  989.4891 253.9833 L
  999.8264 259.1519 L
  999.8264 248.8147 L
F
U
u
1.0000 w
  739.3523 394.0167 m
  739.3523 235.9533 L
  630.5710 235.9533 L
  630.5710 163.9533 L
  372.0200 163.9533 L
  372.0200 88.7078 L
  191.8397 88.7078 L
  191.8397 197.4891 L
  164.9149 197.4891 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  734.1836 392.8147 m
  739.3523 403.1519 L
  744.5209 392.8147 L
  734.1836 392.8147 L
F
U
u
1.0000 w
  1025.4290 77.8898 m
  998.6244 77.8898 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  1024.2270 83.0584 m
  1034.5643 77.8898 L
  1024.2270 72.7212 L
  1024.2270 83.0584 L
F
U
u
1.0000 w
  779.3790 260.5943 m
  617.8297 260.5943 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  778.1770 265.7629 m
  788.3940 260.5943 L
  778.1770 255.5459 L
  778.1770 265.7629 L
F
U
u
1.0000 w
  1080.0000 156.8614 m
  1080.0000 149.8898 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  1074.9516 155.6594 m
  1080.0000 165.9967 L
  1085.1686 155.6594 L
  1074.9516 155.6594 L
F
U
u
1.0000 w
  555.8063 526.8381 m
  678.5309 526.8381 L
  678.5309 244.9683 L
  708.5810 244.9683 L
  708.5810 217.9232 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  557.0083 521.6694 m
  546.7913 526.8381 L
  557.0083 532.0067 L
  557.0083 521.6694 L
F
U
u
1.0000 w
  968.9349 563.9800 m
  868.4474 563.9800 L
  868.4474 576.9616 L
  551.2387 576.9616 L
  551.2387 457.0017 L
  358.4374 457.0017 L
  358.4374 499.1920 L
  116.5943 499.1920 L
  116.5943 294.6110 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  967.6127 569.1486 m
  977.9499 563.9800 L
  967.6127 558.8114 L
  967.6127 569.1486 L
F
U
u
1.0000 w
  470.1035 452.5543 m
  470.1035 78.6110 L
  164.9149 78.6110 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  464.9349 451.2321 m
  470.1035 461.5693 L
  475.2721 451.2321 L
  464.9349 451.2321 L
F
U
u
1.0000 w
  449.7896 550.0367 m
  149.1686 550.0367 L
  149.1686 294.6110 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 555.2053 m
  458.8047 550.0367 L
  448.4674 544.8681 L
  448.4674 555.2053 L
F
U
u
1.0000 w
  449.7896 540.0601 m
  156.9816 540.0601 L
  156.9816 294.6110 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  448.4674 545.2287 m
  458.8047 540.0601 L
  448.4674 534.8915 L
  448.4674 545.2287 L
F
U
u
1.0000 w
  34.1369 394.0167 m
  34.1369 154.5776 L
  67.6728 154.5776 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  28.9683 392.8147 m
  34.1369 403.1519 L
  39.1853 392.8147 L
  28.9683 392.8147 L
F
U
u
1.0000 w
  173.9299 33.4157 m
  527.0785 33.4157 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  175.2521 28.2471 m
  164.9149 33.4157 L
  175.2521 38.4641 L
  175.2521 28.2471 L
F
U
u
1.0000 w
  503.0384 452.5543 m
  503.0384 172.9683 L
  570.1102 172.9683 L
  570.1102 145.9232 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  497.8698 451.2321 m
  503.0384 461.5693 L
  508.2070 451.2321 L
  497.8698 451.2321 L
F
U
u
1.0000 w
  555.8063 570.2304 m
  893.0885 570.2304 L
  893.0885 467.0985 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  557.0083 565.0618 m
  546.7913 570.2304 L
  557.0083 575.3990 L
  557.0083 565.0618 L
F
U
u
1.0000 w
  304.8280 634.4174 m
  115.3923 634.4174 L
S
U
u
  0.000 0.000 0.000 1.000 k
0.0000 w
  303.5058 639.5860 m
  313.8431 634.4174 L
  303.5058 629.3689 L
  303.5058 639.5860 L
F
U
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 258 5423 a
 currentpoint currentpoint translate 1 0.54724 div 1 0.54724 div scale
neg exch neg exch translate
 258 5423 a 1929 5700 a Fe(6)p
eop
%%Page: 7 9
7 8 bop -300 90 a Fg(8)131 b(TODO)44 b(F)-11 b(eature)43
b(List)-300 289 y Fd(8.1)112 b(Authen)m(tication)-175
442 y Fa(\017)41 b Fe(P)-7 b(AM)28 b(Auth)-175 608 y
Fa(\017)41 b Fe(Auto-Login)26 b(via)h(co)r(okies)-175
774 y Fa(\017)41 b Fe(HTTP)28 b(Auth)-175 940 y Fa(\017)41
b Fe(PHP4)28 b(Sessions)f(\(?\))-175 1106 y Fa(\017)41
b Fe(Database)26 b(sessions)-175 1272 y Fa(\017)41 b
Fe(LD)n(AP)28 b(Auth)-175 1438 y Fa(\017)41 b Fe(Guest/public)27
b(access)-175 1604 y Fa(\017)41 b Fe(Authen)n(ticate)28
b(via)f(email)g(address)-300 1837 y Fd(8.2)112 b(W)-9
b(ork)37 b(Orders)-175 1990 y Fa(\017)k Fe(Searc)n(h)26
b(b)n(y)h(departmen)n(t)-175 2156 y Fa(\017)41 b Fe(Dep)r(endencies)
-175 2322 y Fa(\017)g Fe(Con\034gurable)26 b(\034elds)h(\(names,)h
(required,)e(etc\))-175 2488 y Fa(\017)41 b Fe(Sc)n(heduled)27
b(E-mail)h(of)f(activit)n(y)-300 2720 y Fd(8.3)112 b(Pro)6
b(ject)37 b(Managemen)m(t)-175 2874 y Fa(\017)k Fe(Gan)n(tt)27
b(Chart)-175 3040 y Fa(\017)41 b Fe(Best)27 b(\034t)h(sc)n(heduler)-175
3206 y Fa(\017)41 b Fe(T)-7 b(ree)27 b(view)g(for)g(pro)5
b(jects)-175 3372 y Fa(\017)41 b Fe(Change)26 b(pro)5
b(ject)27 b(status)-300 3604 y Fd(8.4)112 b(Tic)m(k)m(ets)-175
3757 y Fa(\017)41 b Fe(Searc)n(h)26 b(b)n(y)h(departmen)n(t)-175
3923 y Fa(\017)41 b Fe(Con\034gurable)26 b(\034elds)h(\(names,)h
(required,)e(etc\))-175 4089 y Fa(\017)41 b Fe(Qualit)n(y)26
b(of)i(service)e(con)n(tract)-175 4255 y Fa(\017)41 b
Fe(Auto)27 b(tic)n(k)n(et)h(priorit)n(y)e(upgrade)-175
4421 y Fa(\017)41 b Fe(Allo)n(w)27 b(m)n(ultiple)h(resp)r(onsible)-175
4587 y Fa(\017)41 b Fe(Aging)27 b(tic)n(k)n(et)g(reminder)-175
4754 y Fa(\017)41 b Fe(Queue)27 b(supp)r(ort)-175 4920
y Fa(\017)41 b Fe(Sc)n(heduled)27 b(E-mail)h(of)f(activit)n(y)1929
5700 y(7)p eop
%%Page: 8 10
8 9 bop -300 90 a Fd(8.5)112 b(Securit)m(y)-175 243 y
Fa(\017)41 b Fe(Roles)27 b(and)g(p)r(ermissions)-175
409 y Fa(\017)41 b Fe(Customer)26 b(access)h(to)g(system)g(with)h
(accoun)n(t)f(restriction)-175 576 y Fa(\017)41 b Fe(V)-7
b(erify)27 b(authen)n(ticit)n(y)h(of)f(form)g(submissions)-175
742 y Fa(\017)41 b Fe(V)-7 b(alidate)27 b(data)g(submitted)h(from)g
(forms)f(on)g(serv)n(er)f(side)-175 908 y Fa(\017)41
b Fe(Mo)n(v)n(e)26 b(attac)n(hmen)n(t)h(\034les)g(outside)h(of)f(w)n
(eb)h(dir)f(and)g(force)g(clien)n(t)h(do)n(wnload)-300
1140 y Fd(8.6)112 b(E-mail)36 b(Gatew)m(a)m(y)-175 1293
y Fa(\017)41 b Fe(W)-7 b(ork)26 b(order)h(submission/query)-175
1459 y Fa(\017)41 b Fe(Tic)n(k)n(et)26 b(submission/query)-300
1692 y Fd(8.7)112 b(Rep)s(orting)-175 1845 y Fa(\017)41
b Fe(More)26 b(analysis)g(and)i(stats)-300 2077 y Fd(8.8)112
b(UI)-175 2230 y Fa(\017)41 b Fe(T)-7 b(emplatize)27
b(men)n(us)g(so)g(templates)h(can)f(b)r(e)h(selected)g(@)f(login)-300
2463 y Fd(8.9)112 b(NLS)-175 2616 y Fa(\017)41 b Fe(Create)26
b(db)i(utilit)n(y)g(to)g(main)n(tain)f(language)f(\034les)h(in)h(str)f
(dir)-300 2848 y Fd(8.10)112 b(A)m(ccoun)m(ts)-175 3002
y Fa(\017)41 b Fe(Create)26 b(clien)n(t)i(list)g(w/man)n(y-to-man)n(y)c
(relationship)-175 3168 y Fa(\017)41 b Fe(Asso)r(ciate)26
b(pro)r(ducts)i(with)g(accoun)n(t)-300 3442 y Fg(9)131
b(Con)l(tributors)-300 3624 y Fe(The)28 b(follo)n(wing)f(is)h(a)f(quic)
n(k)h(list)g(of)g(p)r(eople)g(who)f(ha)n(v)n(e)g(con)n(tributed)h(to)g
(DCL)g(in)g(one)g(w)n(a)n(y)e(or)i(another.)37 b(If)28
b(I)g(forgot)f(y)n(ou,)g(it's)h(b)r(ecause)g(I'm)-300
3724 y(v)n(ery)h(disorganized)g(;-\),)j(but)f(I'm)g(trying)f(to)g(get)h
(this)f(complete.)46 b(Just)31 b(sho)r(ot)f(me)h(an)f(email)g(and)h
(what)f(section)h(y)n(ou)e(b)r(elong)i(in)f(and)h(I'll)-300
3823 y(add)c(y)n(ou)g(to)h(the)g(list.)-300 4056 y Fd(9.1)112
b(Core)37 b(Dev)m(elop)s(ers)-175 4209 y Fa(\017)k Fe(Mic)n(hael)27
b(Dean)g(<mdean@users.sourceforge.net>)-300 4441 y Fd(9.2)112
b(P)m(ac)m(k)-6 b(agers)-175 4595 y Fa(\017)41 b Fe(Debian)27
b(-)h(Ola)e(Lundqvist)-300 4827 y Fd(9.3)112 b(Do)s(cumen)m(tation)-175
4980 y Fa(\017)41 b Fe(Mic)n(hael)27 b(Dean)-175 5146
y Fa(\017)41 b Fe(Mic)n(hael)27 b(Brader)1929 5700 y(8)p
eop
%%Page: 9 11
9 10 bop -300 90 a Fd(9.4)112 b(T)-9 b(ranslations)-175
243 y Fa(\017)41 b Fe(English)27 b(-)h(Mic)n(hael)f(Dean)g(:-\))-175
409 y Fa(\017)41 b Fe(Sw)n(edish)27 b(-)g(Ola)g(Lundqvist)-175
576 y Fa(\017)41 b Fe(German)27 b(-)g(Herb)r(ert)g(Mollien)-175
742 y Fa(\017)41 b Fe(F)-7 b(renc)n(h)27 b(-)g(Lauren)n(t)g(P)n
(ortefaix)-175 908 y Fa(\017)41 b Fe(Italian)27 b(-)g(Luca)g(P)n
(escatore,)f(Angelo)h(A)n(ddan)n(te)-300 1140 y Fd(9.5)112
b(P)m(atc)m(hes)-175 1293 y Fa(\017)41 b Fe(Mic)n(hael)27
b(Brader)-175 1459 y Fa(\017)41 b Fe(Brian)26 b(Co)r(ok)n(e)-175
1625 y Fa(\017)41 b Fe(Urmet)27 b(Janes)-175 1791 y Fa(\017)41
b Fe(Ola)26 b(Lundqvist)-175 1957 y Fa(\017)41 b Fe(Jim)27
b(Lieb)-175 2123 y Fa(\017)41 b Fe(Ev)n(elyn)27 b(Mitc)n(hell)1929
5700 y(9)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
